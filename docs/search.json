[{"path":"/articles/introduction.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"An Introduction to Spatial Stream Network Modeling in R Using SSN2","text":"Data streams frequently exhibit unique patterns spatial autocorrelation resulting branching network structure, longitudinal (.e., upstream/downstream) connectivity, directional water flow, differences flow volume throughout network (Erin E. Peterson et al. 2013). addition, stream networks embedded within spatial environment, can also influence observations stream network. Traditional spatial statistical models, based solely Eucliean distance, often fail adequately describe unique complex spatial dependencies. Spatial stream network models based moving-average construction (J. M. Ver Hoef Peterson 2010) specifically designed describe two unique spatial relationships found streams data. pair sites considered flow-connected water flows upstream site downstream site. Sites flow-unconnected reside stream network (.e., share common junction downstream) share flow. Spatial stream network models typically rely two families covariance functions represent relationships: tail-tail-models. tail-model, moving-average function points upstream direction. Covariance function stream distance weighting structure used proportionally allocate, split, function upstream junctions account differences flow volume influential variables (Erin E. Peterson Ver Hoef 2010). result, non-zero covariances restricted flow-connected sites tail-model. tail-model, moving average function points downstream direction. contrast tail-model, tail-models describe flow-connected flow-unconnected relationships, although covariances always equal stronger flow-unconnected sites flow-connected sites separated equal stream distances (J. M. Ver Hoef Peterson 2010). tail-model, covariance function stream distance weights required. However, also possible often preferable build spatial stream network models based mixture four components: tail-component, tail-component, Euclidean component, nugget component. Euclidean component useful captures covariance influential processes independent stream network intermediate broad scales (e.g., air temperature, soil type, geology). nugget component captures covariance processes highly localized, thus independent across sites. details regarding construction spatial stream network models covariance components, see Cressie et al. (2006), J. M. Ver Hoef, Peterson, Theobald (2006), J. M. Ver Hoef Peterson (2010), Erin E. Peterson Ver Hoef (2010), Isaak et al. (2014). SSN2 R package used fit summarize spatial stream network models make predictions unobserved locations (Kriging). SSN2 updated version SSN R package (J. Ver Hoef et al. 2014). create SSN2 replace SSN? two main reasons: SSN depends rgdal (Bivand, Keitt, Rowlingson 2021), rgeos (Bivand Rundel 2020), maptools (Bivand Lewin-Koh 2021) R packages, retired October, 2023. functionality replaced modernized sf package (Pebesma 2018). SSN2 depends sf instead rgdal, rgeos, maptools, reflecting broader change regarding handling spatial data R. See Nowosad (2023) information regarding retirement rgdal, rgeos, maptools, available https://geocompx.org//post/2023/rgdal-retirement . features added SSN2 difficult implement SSN without massive restructuring SSN’s foundation, created new package. example, SSN objects SSN2 S3 objects SSN objects SSN S4 objects. Additionally, many functions rewritten /repurposed SSN2 use generic functions (e.g., block prediction SSN2 performed using predict() SSN performed using BlockPredict()). vignette provides overview basic features SSN2. load SSN2 running use SSN2 formal publication report, please cite . Citing SSN2 lets us devote resources future. view SSN2 citation running","code":"library(SSN2) citation(package = \"SSN2\") #>  #> To cite SSN2 in publications use: #>  #>   Dumelle M, Peterson, E, Ver Hoef JM, Pearse A, Isaak D (2023). SSN2: #>   Spatial Modeling on Stream Networks in R. R package version 0.1.0 #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {{SSN2}: Spatial Modeling on Stream Networks in {R}}, #>     author = {Michael Dumelle and Erin Peterson and Jay M. {Ver Hoef} and Alan Pearse and Dan Isaak}, #>     year = {2023}, #>     note = {{R} package version 0.1.0}, #>   }"},{"path":"/articles/introduction.html","id":"input-data","dir":"Articles","previous_headings":"","what":"Input Data","title":"An Introduction to Spatial Stream Network Modeling in R Using SSN2","text":"Spatial input data must pre-processed can used fit spatial stream network models SSN2 package. information generated using Spatial Tools Analysis River Systems (STARS) toolset ArcGIS Desktop versions 9.3x-10.8x (E. Peterson Ver Hoef 2014). Note STARS designed work existing streams data vector format. openSTARS R package (Kattwinkel Szöcs 2022) provides open source alternative STARS toolset, depends GRASS GIS. contrast STARS, openSTARS designed derive streams raster format digital elevation model (DEM). tools output non-proprietary .ssn folder (.e., directory) contains spatial, topological attribute information needed fit spatial stream network model using SSN2. includes: edges: shapefile lines representing linear geometry stream network(s). sites: shapefile site locations observed data collected stream network. prediction sites: one shapefiles locations predictions made. Optional. netIDx.dat stream network: text file containing topological relationships line segments edges, network.","code":""},{"path":"/articles/introduction.html","id":"ssn-objects-in-ssn2","dir":"Articles","previous_headings":"","what":"SSN Objects in SSN2","title":"An Introduction to Spatial Stream Network Modeling in R Using SSN2","text":"data contained .ssn object read R stored SSN object, special list structure four elements: edges: sf object contains edges LINESTRING geometry. obs: sf object contains observed data POINT geometry. preds list sf objects POINT geometry, containing set locations predictions made. path: character string represents path relevant .ssn directory stored computer. netgeom (short “network geometry”) column also added sf objects stored within SSN object. netgeom column contains character string describing position line (edges) point (obs preds) feature relation one another. format netgeom column differs depending whether describing feature LINESTRING POINT geometry. edges, format netgeom \"ENETWORK (netID rid upDist)\", sites \"SNETWORK (netID rid upDist ratio pid locID)\", data used define netgeom column found edges, observed sites, prediction sites shapefiles, created using STARS openSTARS software. edges, includes unique network identifier (netID) reach (.e., edge) identifier (rid), well distance downstream location stream network (.e., stream outlet) upstream node edge segment, movement restricted stream network (upDist). netgeom column sites also contains netID rid edge site resides. point identifier (pid) unique measurement, location identifier (locID) unique spatial location. Note locID may multiple pids associated repeated measurements observed data multiple predictions made location. upDist value site represents stream distance stream outlet site location. Finally, ratio used describe relative position site associated edge segment. proportional distance downstream node edge segment site location. example, ratio site close zero site close downstream node edge segment, ratio site close one site far downstream node edge segment. Together key pieces data used describe network edge site resides , well exactly site line segment. may first seem redundant combine store multiple numeric columns text netgeom column. However, data dictate observed prediction sites relate one another topological space, impacts parameter estimates predicted values generated fitted models. Storing data text netgeom column significantly reduces chance values accidentally (unknowingly) altered user.","code":""},{"path":"/articles/introduction.html","id":"the-middle-fork-data","dir":"Articles","previous_headings":"SSN Objects in SSN2","what":"The Middle Fork Data","title":"An Introduction to Spatial Stream Network Modeling in R Using SSN2","text":"vignette, use Middle Fork 2004 stream temperature data SSN2. raw input data stored lsndata/MiddleFork04.ssn directory installed alongside SSN2. may store file path example data: Several functions SSN2 reading writing data (use shortly) directly manipulate .ssn folder. desirable directly manipulate MiddleFork04.ssn data installed alongside SSN2, MiddleFork04.ssn may copied temporary directory relevant path alternative location can stored: specifying path (using system.file() copy_lsn_to_temp()), import stream reaches, observed sites, prediction sites: summarise mf04p data running see mf04p contains 45 observation sites total 2102 prediction sites stored three different prediction datasets. explore several variables throughout rest vignette: AREAWTMAP: Precipitation (area-weighted mm) ELEV_DEM: Elevation (based 30m DEM) Summer_mn: Summer mean stream temperature (Celsius) C16: Number times daily stream temperature exceeded 16 Celsius (summer) detailed description variables mf04p available documentation can seen running ?MiddleFork04.ssn help(MiddleFork04.ssn, package = \"SSN2\"). SSN2 currently generic plotting function SSN objects. Instead, rely plotting functionality ggplot2 (Wickham 2016) sf (Pebesma 2018). vignette focuses use ggplot2, load running ggplot2 installed alongside SSN2 dependencies = TRUE install.packages(), check installed reproducing visualizations vignette. Prediction sites can easily accessed SSN object using list element number names attribute. example, print names prediction datasets console view Middle Fork stream network, overlay observed sites data collected using brown circles, overlay pred1km prediction locations using smaller, blue triangles running  Later fit models stream network data. , however, supplement .ssn object hydrologic distance matrices preserve directionality, required statistical modeling: Stream distance matrices saved local files .ssn directory associated SSN object, mf04p$path, folder called distance created ssn_create_distmat(). matrices stored .Rdata files separate sub-folders observed sites (obs) set prediction sites. file path .ssn directory incorrect, ssn_update_path() can used update distance matrices generated.","code":"path <- system.file(\"lsndata/MiddleFork04.ssn\", package = \"SSN2\") copy_lsn_to_temp() path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(   path = path,   predpts = c(\"pred1km\", \"CapeHorn\", \"Knapp\"),   overwrite = TRUE ) summary(mf04p) #> Object of class SSN #>  #> Object includes observations on 26 variables across 45 sites within the bounding box #>     xmin     ymin     xmax     ymax  #> -1531385  2521181 -1498448  2540274  #>  #> Object also includes 3 sets of prediction points with a total of 2102 locations #>  #> Variable names are (found using names(object)): #> $obs #>  [1] \"STREAMNAME\" \"COMID\"      \"CDRAINAG\"   \"AREAWTMAP\"  \"SLOPE\"      #>  [6] \"ELEV_DEM\"   \"Source\"     \"Summer_mn\"  \"MaxOver20\"  \"C16\"        #> [11] \"C20\"        \"C24\"        \"FlowCMS\"    \"AirMEANc\"   \"AirMWMTc\"   #> [16] \"NEAR_X\"     \"NEAR_Y\"     \"rid\"        \"ratio\"      \"afvArea\"    #> [21] \"upDist\"     \"locID\"      \"netID\"      \"pid\"        \"geometry\"   #> [26] \"netgeom\"    #>  #> $pred1km #>  [1] \"COMID\"     \"GNIS_NAME\" \"CDRAINAG\"  \"AREAWTMAP\" \"SLOPE\"     \"ELEV_DEM\"  #>  [7] \"FlowCMS\"   \"AirMEANc\"  \"AirMWMTc\"  \"NEAR_X\"    \"NEAR_Y\"    \"rid\"       #> [13] \"ratio\"     \"afvArea\"   \"upDist\"    \"locID\"     \"netID\"     \"pid\"       #> [19] \"geometry\"  \"netgeom\"   #>  #> $CapeHorn #>  [1] \"COMID\"     \"GNIS_NAME\" \"CDRAINAG\"  \"AREAWTMAP\" \"SLOPE\"     \"ELEV_DEM\"  #>  [7] \"FlowCMS\"   \"AirMEANc\"  \"AirMWMTc\"  \"NEAR_X\"    \"NEAR_Y\"    \"rid\"       #> [13] \"ratio\"     \"afvArea\"   \"upDist\"    \"locID\"     \"netID\"     \"pid\"       #> [19] \"geometry\"  \"netgeom\"   #>  #> $Knapp #>  [1] \"COMID\"     \"GNIS_NAME\" \"CDRAINAG\"  \"AREAWTMAP\" \"SLOPE\"     \"ELEV_DEM\"  #>  [7] \"FlowCMS\"   \"AirMEANc\"  \"AirMWMTc\"  \"NEAR_X\"    \"NEAR_Y\"    \"rid\"       #> [13] \"ratio\"     \"afvArea\"   \"upDist\"    \"locID\"     \"netID\"     \"pid\"       #> [19] \"geometry\"  \"netgeom\" library(ggplot2) names(mf04p$preds) #> [1] \"pred1km\"  \"CapeHorn\" \"Knapp\" ggplot() +   geom_sf(data = mf04p$edges) +   geom_sf(data = mf04p$preds$pred1km, pch = 17, color = \"blue\") +   geom_sf(data = mf04p$obs, color = \"brown\", size = 2) +   theme_bw() ssn_create_distmat(   ssn.object = mf04p,   predpts = c(\"pred1km\", \"CapeHorn\", \"Knapp\"),   among_predpts = TRUE,   overwrite = TRUE )"},{"path":[]},{"path":"/articles/introduction.html","id":"sec:lm","dir":"Articles","previous_headings":"Spatial Stream Network (SSN) Models","what":"Linear SSN Models","title":"An Introduction to Spatial Stream Network Modeling in R Using SSN2","text":"begin fitting linear models stream network data using ssn_lm() function. Later fit generalized linear models stream network data using ssn_glm() function. Typically, linear models used response variable (.e., dependent variable) continuous highly skewed, generalized linear models often used response variable binary, count, highly skewed. Linear spatial stream network models quantitative response vector \\(\\mathbf{y}\\) spatially dependent random errors often parameterized \\(\\mathbf{X}\\) matrix explanatory variables (usually including column 1’s intercept), \\(\\boldsymbol{\\beta}\\) vector fixed effects describe average impact \\(\\mathbf{X}\\) \\(\\mathbf{y}\\), \\(\\boldsymbol{\\tau}_{tu}\\) vector spatially dependent (correlated) tail-random errors, \\(\\boldsymbol{\\tau}_{td}\\) vector spatially dependent (correlated) tail-random errors, \\(\\boldsymbol{\\tau}_{eu}\\) vector spatially dependent (correlated) Euclidean random errors, \\(\\boldsymbol{\\epsilon}\\) vector spatially independent (uncorrelated) random errors. spatial dependence \\(\\boldsymbol{\\tau}\\) term explicitly specified using spatial covariance function incorporates variance respective \\(\\boldsymbol{\\tau}\\) term, often called partial sill, range parameter controls behavior respective spatial covariance. variance \\(\\boldsymbol{\\epsilon}\\) often called nugget (nugget effect). Suppose interested studying summer mean temperature (Summer_mn) stream network. can visualize distribution summer mean temperature (overlain onto stream network) running  ssn_lm() function used fit linear spatial stream network models bears many similarities base-R’s lm() function non-spatial linear models. provide commonly used arguments ssn_lm(): formula uses syntax formula argument lm(). ssn.object: .ssn object. tailup_type: tail-covariance, can \"linear\", \"spherical\", \"exponential\", \"mariah\", \"epa\", \"none\" (default) taildown_type: tail-covariance, can \"linear\", \"spherical\", \"exponential\", \"mariah\", \"epa\", \"none\" (default) euclid_type: Euclidean covariance, can \"spherical\", \"exponential\", \"gaussian\", \"cosine\", \"cubic\", \"pentaspherical\", \"wave\", \"jbessel\", \"gravity\", \"rquad\", \"magnetic\", \"none\" (default) nugget_type: \"nugget\" (default) \"none\". important note default tailup_type, taildown_type, euclid_type \"none\", means must specified relevant covariances desired. default nugget_type \"nugget\", specifies nugget effect, useful many ecological processes localized variability important capture. Full parameterizations covariance function given ssn_lm()’s documentation, can viewed running help(\"ssn_lm\", \"SSN2\"). different approaches choosing covariance functions. One approach fit several models compare fits using statistics like AIC cross-validation error. Another approach visualize Torgegram() choose functions appropriately. Torgegram() SSN2 essentially semivariogram describes variability streams data based flow-connected, flow-unconnected, Euclidean spatial relationships. Like semivariograms, Torgegram describes semivariance (.e. halved average squared difference) observations changes hydrologic Euclidean distances. strong dependence sites based flow-connected flow-unconnected relationships, semivariance increase respective distance. , however, strong dependence, semivariance relatively flat. Torgegram() output can combined plot() better understand covariance components may suitable model. example, semivariance flow-connected sites increases hydrologic distance semivariance flow-unconnected sites flat, tail-component may sufficient model (.e., tail-component needed). However, model likely benefit tail-component combination tail-tail-models semivariance flow-connected flow-unconnected sites increases distance. Alternatively, semivariance flat, model unlikely benefit tail-tail-components. SSN2 also allows users visualize changes semivariance based Euclidean distance, may provide additional insights whether Euclidean component mixture tail-, tail-/Euclidean models improve model. Please see Zimmerman Ver Hoef (2017) -depth review Toregegrams, along strategies interpreting using inform model fitting. formal comparison models, use statistics like AIC cross-validation error, discuss later. Suppose want model summer mean stream temperature function elevation precipitation. can aid understanding covariance components may informative visualizing Torgegram: first argument Torgegram() formula. Residuals non-spatial linear model specified formula used Toregram visualize remaining spatial dependence. type argument specifies Torgegram types default value c(\"flowcon\", \"flowuncon\") flow-connected flow-unconnected semivariances. also desire visualize Euclidean semivariance. visualize three components running  flow-connected semivariances seem generally increase distance, suggests model benefit least tail-component. takeaway flow-unconnected Euclidean semivariances less clear – seem generally increase distance low distances high semivariances. suggests tail-Euclidean components may impactful model fit. investigate next fit model three components: tail-, tail-, Euclidean. fit spatial stream network model regressing summer mean stream temperature elevation watershed-averaged precipitation using exponential tail-covariance function additive weights created using watershed area (afvArea), spherical tail-covariance function, Gaussian Euclidean covariance function, nugget effect running estimation method specified via estmethod argument, default value \"reml\" restricted maximum likelihood (REML). estimation method \"ml\" maximum likelihood (ML). REML chosen default tends yield accurate covariance parameter estimates ML, especially small sample sizes. One nuance REML, however, comparisons likelihood-based statistics like AIC valid models fixed effects structure (.e., formula). compare fixed effects covariance structures simultaneously, use ML model comparison tool likelihood-based, cross validation via loocv(), discuss later.","code":"ggplot() +   geom_sf(data = mf04p$edges) +   geom_sf(data = mf04p$obs, aes(color = Summer_mn), size = 2) +   scale_color_viridis_c(limits = c(-1.5, 17), option = \"H\") +   theme_bw() tg <- Torgegram(   formula = Summer_mn ~ ELEV_DEM + AREAWTMAP,   ssn.object = mf04p,   type = c(\"flowcon\", \"flowuncon\", \"euclid\") ) plot(tg) ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM + AREAWTMAP,   ssn.object = mf04p,   tailup_type = \"exponential\",   taildown_type = \"spherical\",   euclid_type = \"gaussian\",   additive = \"afvArea\" )"},{"path":"/articles/introduction.html","id":"model-summaries","dir":"Articles","previous_headings":"Spatial Stream Network (SSN) Models > Linear SSN Models","what":"Model Summaries","title":"An Introduction to Spatial Stream Network Modeling in R Using SSN2","text":"summarize fitted model running Similar summaries lm() objects, summaries ssn_lm() objects include original function call, residuals, coefficients table fixed effects. (Intercept) represents average summer mean stream temperature sea level (elevation zero) precipitation, ELEV_DEM represents decrease average summer mean stream temperature one unit (meter) increase elevation, AREAWTMAP represents decrease average summer mean stream temperature one unit (mm) increase precipitation. strong evidence average summer mean stream temperature decreases elevation (\\(p\\)-value \\(< 0.001\\)), moderate evidence average summer mean stream temperature decreases precipitation (\\(p\\)-value \\(\\approx\\) 0.05). pseudo r-squared also returned, quantifies proportion variability explained fixed effects. coefficients table covariance parameters describes model’s dependence. larger de parameter, variability process attributed relevant effect. , model’s random variability comes tail-portion model. larger range parameter, correlated nearby observations respect relevant effect. directly compare sources variability model using varcomp function: variability summer mean stream temperature explained fixed effects elevation precipitation (Covariates (PR-sq)) well tail-component. Note values proportion column sum one. remainder subsection, describe broom (Robinson, Hayes, Couch 2021) functions tidy(), glance() augment(). tidy() tidies coefficient output convenient tibble, glance() glances model-fit statistics, augment() augments data fitted model diagnostics. tidy fixed effects (add confidence intervals) running glance model-fit statistics running columns tibble represent: n: sample size. p: number fixed effects (linearly independent columns \\(\\mathbf{X}\\)). npar: number estimated covariance parameters. value: value minimized objective function used fitting model. AIC: Akaike Information Criterion (AIC). AICc: AIC small sample size correction. logLik: log-likelihood. deviance: deviance. pseudo.r.squared: pseudo r-squared. glances() function can used glance multiple models . Suppose wanted compare current model new model omits tail-Euclidean components. using glances() running Often AIC AICc used model selection, balance model fit model simplicity. lower AIC AICc original model (ssn_mod) indicates better fit data (ssn_mod2). Outside glance() glances(), functions AIC(), AICc(), logLik(), deviance(), pseudoR2() available compute relevant statistics. Note additive required tail-covariance specified. able compare AIC AICc models fit using REML changing covariance structure, fixed effects structure. compare AIC AICc models varying fixed effect covariance structures, use ML. example, compare model without elevation assess importance: Elevation seems important model fit, evidenced lower AIC. Erin E. Peterson Ver Hoef (2010) describe two-step model procedure model selection based AIC comparing models varying covariance fixed structures. First, covariance components included (tail-, tail-, Euclidean, nugget) fixed effects compared using ML. using model lowest AIC, refit using REML compare models varying combinations covariance components. Finally, proceed model lowest AIC. Another approach compare suite models (varying fixed effect covariance components) using ML refit best model using REML. Henceforth, proceed REML models, ssn_mod ssn_mod2. Another way compare model fits leave-one-cross validation available via loocv() function. loocv() returns many model-fit statistics. One root-mean-squared-prediction error, captures typical absolute error associated prediction. can compare mean-squared-prediction error ssn_mod, ssn_mod2: ssn_mod better model respect AIC, AICc, RMSPE shortly use return model diagnostics make predictions. loocv() predictions using ssn_mod typically within 0.437. true summer mean stream temperature. Note model comparison using loocv() depend estimation method (ML vs REML). augment data model diagnostics running columns tibble represent: Summer_mn: Summer mean stream temperature. ELEV_DEM: Elevation. Precipitation: Precipitation. .fitted: fitted values (estimated mean given explanatory variable values). .resid: residuals (response minus fitted values). .hat: leverage (hat) values. .cooksd: Cook’s distance. .std.residuals: Standardized residuals. pid: pid value. geometry: spatial information sf object. default, augment() returns variables data used model. variables original data returned setting drop = FALSE. can write augmented data shapefile loading sf (comes installed alongside SSN2) running Many model diagnostics returned augment() can visualized running using plot(). example, plot fitted values standardized residuals running  6 total diagnostic plots (specified via argument) return information returned running plot() lm() object.","code":"summary(ssn_mod) #>  #> Call: #> ssn_lm(formula = Summer_mn ~ ELEV_DEM + AREAWTMAP, ssn.object = mf04p,  #>     tailup_type = \"exponential\", taildown_type = \"spherical\",  #>     euclid_type = \"gaussian\", additive = \"afvArea\") #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.6393 -2.0646 -0.5952  0.2143  0.7497  #>  #> Coefficients (fixed): #>              Estimate Std. Error z value Pr(>|z|)     #> (Intercept) 76.195041   7.871574   9.680  < 2e-16 *** #> ELEV_DEM    -0.026905   0.003646  -7.379  1.6e-13 *** #> AREAWTMAP   -0.009099   0.004461  -2.040   0.0414 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Pseudo R-squared: 0.6124 #>  #> Coefficients (covariance): #>               Effect     Parameter   Estimate #>   tailup exponential  de (parsill)  3.800e+00 #>   tailup exponential         range  4.194e+06 #>   taildown spherical  de (parsill)  4.480e-01 #>   taildown spherical         range  1.647e+05 #>      euclid gaussian  de (parsill)  1.509e-02 #>      euclid gaussian         range  4.496e+03 #>               nugget        nugget  2.087e-02 varcomp(ssn_mod) #> # A tibble: 5 × 2 #>   varcomp            proportion #>   <chr>                   <dbl> #> 1 Covariates (PR-sq)    0.612   #> 2 tailup_de             0.344   #> 3 taildown_de           0.0405  #> 4 euclid_de             0.00137 #> 5 nugget                0.00189 tidy(ssn_mod, conf.int = TRUE) #> # A tibble: 3 × 7 #>   term        estimate std.error statistic  p.value conf.low conf.high #>   <chr>          <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> #> 1 (Intercept) 76.2       7.87         9.68 0         60.8    91.6      #> 2 AREAWTMAP   -0.00910   0.00446     -2.04 4.14e- 2  -0.0178 -0.000356 #> 3 ELEV_DEM    -0.0269    0.00365     -7.38 1.60e-13  -0.0341 -0.0198 glance(ssn_mod) #> # A tibble: 1 × 9 #>       n     p  npar value   AIC  AICc logLik deviance pseudo.r.squared #>   <int> <dbl> <int> <dbl> <dbl> <dbl>  <dbl>    <dbl>            <dbl> #> 1    45     3     7  59.3  73.3  76.3  -29.6     41.9            0.612 ssn_mod2 <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM + AREAWTMAP,   ssn.object = mf04p,   taildown_type = \"spherical\" ) glances(ssn_mod, ssn_mod2) #> # A tibble: 2 × 10 #>   model        n     p  npar value   AIC  AICc logLik deviance pseudo.r.squared #>   <chr>    <int> <dbl> <int> <dbl> <dbl> <dbl>  <dbl>    <dbl>            <dbl> #> 1 ssn_mod     45     3     7  59.3  73.3  76.3  -29.6     41.9            0.612 #> 2 ssn_mod2    45     3     3 130.  136.  137.   -65.1     41.9            0.180 ml_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM + AREAWTMAP,   ssn.object = mf04p,   tailup_type = \"exponential\",   taildown_type = \"spherical\",   euclid_type = \"gaussian\",   additive = \"afvArea\",   estmethod = \"ml\" ) ml_mod2 <- ssn_lm(   formula = Summer_mn ~ AREAWTMAP,   ssn.object = mf04p,   tailup_type = \"exponential\",   taildown_type = \"spherical\",   euclid_type = \"gaussian\",   additive = \"afvArea\",   estmethod = \"ml\" ) glances(ml_mod, ml_mod2) #> # A tibble: 2 × 10 #>   model       n     p  npar value   AIC  AICc logLik deviance pseudo.r.squared #>   <chr>   <int> <dbl> <int> <dbl> <dbl> <dbl>  <dbl>    <dbl>            <dbl> #> 1 ml_mod     45     3     7  39.3  59.3  65.8  -19.6     44.6           0.609  #> 2 ml_mod2    45     2     7  56.1  74.1  79.3  -28.1     42.0           0.0344 loocv_mod <- loocv(ssn_mod) loocv_mod$RMSPE #> [1] 0.4365597 loocv_mod2 <- loocv(ssn_mod2) loocv_mod2$RMSPE #> [1] 0.8150283 aug_ssn_mod <- augment(ssn_mod) aug_ssn_mod #> Simple feature collection with 45 features and 9 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -1530805 ymin: 2527111 xmax: -1503079 ymax: 2537823 #> Projected CRS: USA_Contiguous_Albers_Equal_Area_Conic_USGS_version #> # A tibble: 45 × 10 #>    Summer_mn ELEV_DEM AREAWTMAP .fitted .resid   .hat  .cooksd .std.resid pid   #>  *     <dbl>    <int>     <dbl>   <dbl>  <dbl>  <dbl>    <dbl>      <dbl> <chr> #>  1     11.4      1977      940.    14.4  -3.07 0.0915 0.0962       -1.78  1     #>  2     10.7      1984     1087.    12.9  -2.20 0.114  0.00471      -0.352 2     #>  3     10.4      1993     1087.    12.7  -2.25 0.0372 0.00724      -0.764 3     #>  4     10.1      2007     1087.    12.3  -2.18 0.0251 0.00153      -0.427 4     #>  5     10.1      2009     1087.    12.3  -2.13 0.0374 0.000583     -0.216 5     #>  6      9.81     2012     1109.    12.0  -2.16 0.0602 0.0150       -0.863 6     #>  7      9.76     2023     1116.    11.6  -1.85 0.0736 0.00739       0.549 7     #>  8      9.77     2023     1116.    11.6  -1.84 0.0648 0.00687       0.564 8     #>  9      9.53     2026     1130.    11.4  -1.87 0.112  0.00152       0.202 9     #> 10     12.6      1988      864.    14.9  -2.28 0.0498 0.00964      -0.762 10    #> # ℹ 35 more rows #> # ℹ 1 more variable: geometry <POINT [m]> library(sf) st_write(aug_ssn_mod, paste0(tempdir(), \"/aug_ssn_mod.shp\")) plot(ssn_mod, which = 1)"},{"path":"/articles/introduction.html","id":"prediction-kriging","dir":"Articles","previous_headings":"Spatial Stream Network (SSN) Models > Linear SSN Models","what":"Prediction (Kriging)","title":"An Introduction to Spatial Stream Network Modeling in R Using SSN2","text":"Commonly goal data analysis make predictions unobserved locations. spatial contexts, prediction often called Kriging. Next make summer mean stream temperature predictions location pred1km data mf04p running augment() previously used augment original data model diagnostics, can also used augment newdata predictions: .fitted represents predictions. Confidence intervals mean response prediction intervals predicted response can obtained specifying interval argument predict() augment(). default, predict() augment() compute 95% intervals, though can changed using level argument. arguments predict() augment() ssn_lm() objects slightly different arguments lm() object – learn run help(\"predict.SSN2\", \"SSN2\") help(\"augment.SSN2\", \"SSN2\"). visualize predictions (overlain onto stream network) running  Previously wrote model diagnostics shapefile. Now write predictions geopackage (recall sf must loaded) running performing prediction SSN2, name newdata must name prediction data set contained ssn.object$preds. newdata omitted value \"\", prediction performed prediction data sets ssn.object. example, makes predictions pred1km, Knapp, CapeHorn (names mf04p$preds). Lastly, observations (obs object) whose response missing (NA), observations removed model fitting moved prediction data set named .missing. predictions can obtained locations. can also predict average value region using block Prediction (instead making point predictions). predict average summer mean temperature throughout Middle Fork stream network running","code":"predict(ssn_mod, newdata = \"pred1km\") aug_preds <- augment(ssn_mod, newdata = \"pred1km\") aug_preds[, \".fitted\"] #> Simple feature collection with 175 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -1530631 ymin: 2521707 xmax: -1500020 ymax: 2540253 #> Projected CRS: USA_Contiguous_Albers_Equal_Area_Conic_USGS_version #> # A tibble: 175 × 2 #>    .fitted           geometry #>      <dbl>        <POINT [m]> #>  1    14.6 (-1520657 2536657) #>  2    15.0 (-1519866 2536812) #>  3    14.8 (-1521823 2536911) #>  4    15.0 (-1523183 2537256) #>  5    15.2 (-1523860 2537452) #>  6    15.1 (-1525443 2537698) #>  7    15.1 (-1526397 2537254) #>  8    15.0 (-1527436 2536803) #>  9    14.9 (-1529043 2536449) #> 10    14.9 (-1529689 2537313) #> # ℹ 165 more rows ggplot() +   geom_sf(data = mf04p$edges) +   geom_sf(data = aug_preds, aes(color = .fitted), size = 2) +   scale_color_viridis_c(limits = c(-1.5, 17), option = \"H\") +   theme_bw() st_write(aug_preds, paste0(tempdir(), \"/aug_preds.gpkg\")) predict(ssn_mod) predict(ssn_mod, newdata = \"all\") predict(ssn_mod, newdata = \"pred1km\", block = TRUE, interval = \"prediction\") #>        fit      lwr      upr #> 1 10.73479 9.987173 11.48241"},{"path":"/articles/introduction.html","id":"sec:advanced","dir":"Articles","previous_headings":"Spatial Stream Network (SSN) Models > Linear SSN Models","what":"Advanced Features","title":"An Introduction to Spatial Stream Network Modeling in R Using SSN2","text":"several additional modeling tools available SSN2 discuss next: Fixing parameter values; non-spatial random effects; partition factors. Perhaps want assume particular covariance parameter known. may reasonable information known process desire perform model selection nested models create profile likelihood confidence intervals. Fixing covariance parameters SSN2 accomplished via tailup_initial, taildown_initial, euclid_initial, nugget_initial arguments ssn_lm(). arguments passed appropriate initial value object created using tailup_initial(), taildown_initial(), euclid_initial(), nugget_initial() function, respectively. example, suppose want fix Euclidean dependent error variance parameter 1, forcing component moderate effect covariance. First, specify appropriate object running euclid_init output shows range parameter initial value 1 assumed known. range parameter still estimated. Next model fit: Notice Euclidean variance 1. Random effects can added SSN model incorporate additional sources variability separate stream network. Common additional sources variability modeled include repeated observations sites network-specific effects. random effects modeled using similar syntax random effects nlme (Pinheiro Bates 2006) lme4 (Bates et al. 2015) R packages, specified via formula passed random argument. model random intercepts two networks data running random = ~ .factor(netID) short-hand random = ~ (1 | .factor(netID)), familiar lme4 nlme syntax. partition factor variable allows observations uncorrelated different levels partition factors. example, one may want partition model two networks despite adjacency significant land mass similar obstruction. Partition factors modeled using formula contains single variable passed partition_factor argument. model two networks uncorrelated running short, partition factor enables model fitting builds independence places typical stream network deemed relevant researcher.","code":"euclid_init <- euclid_initial(\"gaussian\", de = 1, known = \"de\") euclid_init #> $initial #> de  #>  1  #>  #> $is_known #>   de  #> TRUE  #>  #> attr(,\"class\") #> [1] \"euclid_gaussian\" ssn_init <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM + AREAWTMAP,   ssn.object = mf04p,   tailup_type = \"exponential\",   taildown_type = \"spherical\",   euclid_initial = euclid_init,   additive = \"afvArea\" ) ssn_init #>  #> Call: #> ssn_lm(formula = Summer_mn ~ ELEV_DEM + AREAWTMAP, ssn.object = mf04p,  #>     tailup_type = \"exponential\", taildown_type = \"spherical\",  #>     euclid_initial = euclid_init, additive = \"afvArea\") #>  #>  #> Coefficients (fixed): #> (Intercept)     ELEV_DEM    AREAWTMAP   #>   77.181436    -0.027921    -0.008011   #>  #> Coefficients (covariance): #>               Effect     Parameter   Estimate #>   tailup exponential  de (parsill)  3.882e+00 #>   tailup exponential         range  1.668e+06 #>   taildown spherical  de (parsill)  3.233e-02 #>   taildown spherical         range  7.041e+03 #>      euclid gaussian  de (parsill)  1.000e+00 #>      euclid gaussian         range  8.231e+04 #>               nugget        nugget  1.948e-02 ssn_rand <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM + AREAWTMAP,   ssn.object = mf04p,   tailup_type = \"exponential\",   taildown_type = \"spherical\",   euclid_type = \"gaussian\",   additive = \"afvArea\",   random = ~ as.factor(netID) ) ssn_rand #>  #> Call: #> ssn_lm(formula = Summer_mn ~ ELEV_DEM + AREAWTMAP, ssn.object = mf04p,  #>     tailup_type = \"exponential\", taildown_type = \"spherical\",  #>     euclid_type = \"gaussian\", additive = \"afvArea\", random = ~as.factor(netID)) #>  #>  #> Coefficients (fixed): #> (Intercept)     ELEV_DEM    AREAWTMAP   #>   76.219407    -0.026705    -0.009449   #>  #> Coefficients (covariance): #>               Effect             Parameter   Estimate #>   tailup exponential          de (parsill)  3.688e+00 #>   tailup exponential                 range  6.971e+05 #>   taildown spherical          de (parsill)  1.191e-02 #>   taildown spherical                 range  1.089e+04 #>      euclid gaussian          de (parsill)  3.377e-02 #>      euclid gaussian                 range  1.368e+04 #>               nugget                nugget  2.046e-02 #>               random  1 | as.factor(netID)  3.809e-01 ssn_part <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM + AREAWTMAP,   ssn.object = mf04p,   tailup_type = \"exponential\",   taildown_type = \"spherical\",   euclid_type = \"gaussian\",   additive = \"afvArea\",   partition_factor = ~ as.factor(netID) ) ssn_part #>  #> Call: #> ssn_lm(formula = Summer_mn ~ ELEV_DEM + AREAWTMAP, ssn.object = mf04p,  #>     tailup_type = \"exponential\", taildown_type = \"spherical\",  #>     euclid_type = \"gaussian\", additive = \"afvArea\", partition_factor = ~as.factor(netID)) #>  #>  #> Coefficients (fixed): #> (Intercept)     ELEV_DEM    AREAWTMAP   #>    76.32118     -0.02805     -0.00697   #>  #> Coefficients (covariance): #>               Effect     Parameter   Estimate #>   tailup exponential  de (parsill)  3.300e+00 #>   tailup exponential         range  6.695e+07 #>   taildown spherical  de (parsill)  3.618e-07 #>   taildown spherical         range  2.233e+06 #>      euclid gaussian  de (parsill)  1.002e-01 #>      euclid gaussian         range  5.036e+03 #>               nugget        nugget  2.525e-02"},{"path":"/articles/introduction.html","id":"sec:glm","dir":"Articles","previous_headings":"Spatial Stream Network (SSN) Models","what":"Generalized Linear SSN Models","title":"An Introduction to Spatial Stream Network Modeling in R Using SSN2","text":"Generalized linear spatial stream network models response vector \\(\\mathbf{y}\\) spatially dependent random errors often parameterized \\(\\boldsymbol{\\mu}\\) mean \\(\\mathbf{y}\\), \\(g(\\cdot)\\) link function “links” \\(\\mathbf{\\mu}\\) linear function predictor variables random errors, terms defined linear spatial stream network models. Rather assuming \\(y\\) normally (Gaussian) distributed often case linear spatial stream network models, generalized linear spatial stream network models assume \\(\\mathbf{y}\\) follows one many distributions corresponding link function. summarize families generalized linear spatial stream network models supported SSN2 link functions, type data typically associated families. generalized linear models generally, see McCullagh Nelder (1989), Myers et al. (2012), Faraway (2016). ssn_glm() function used fit generalized linear spatial stream network models bears many similarities base-R’s glm() function non-spatial generalized linear models. family (.e., resposne distribution) controlled family argument. family Gaussian(), model fit equivalent one fit using ssn_lm(). Note parameters estimated relevant link scale interpreted accordingly. C16 variable mf04p represents number times daily summer stream temperature exceeded 16 Celsius:  Suppose want model C16 function elevation precipitation. Often count data modeled using Poisson regression. Using tail-, tail-, nugget components, fit Poisson model running previous SSN2 functions used explore linear spatial stream network models also available generalized linear spatial stream network models. example, can summarize model using summary(): Similar summaries glm() objects, summaries ssn_glm() objects include original function call, deviance residuals, coefficients table fixed effects. (Intercept) represents log average C16 sea level (elevation zero) zero precipitation, ELEV_DEM represents decrease log average summer mean temperature one unit (meter) increase elevation, AREAWTMAP represents decrease log average summer mean temperature one unit (mm) increase precipitation. strong evidence log average summer mean temperature decreases elevation (\\(p\\)-value \\(< 0.001\\)), moderate evidence log average summer mean temperature decreases precipitation (\\(p\\)-value \\(\\approx\\) 0.03). Recall covariance parameter estimates link (, log) scale. Poisson model assumes observations mean variance equal. Often ecological environmental data, variance larger mean – called overdispersion. negative binomial model accommodates overdispersion count data. fit negative binomial model running can compare fit models using leave-one-cross validation running Poisson lower RMSPE, suggests evidence overdispersion. advanced modeling features discussed linear spatial stream network models (e.g., fixing covariance parameter values, random effects, partition factors) also available generalized linear spatial stream network models.","code":"ggplot() +   geom_sf(data = mf04p$edges) +   geom_sf(data = mf04p$obs, aes(color = C16), size = 2) +   scale_color_viridis_c(option = \"H\") +   theme_bw() ssn_pois <- ssn_glm(   formula = C16 ~ ELEV_DEM + AREAWTMAP,   family = \"poisson\",   ssn.object = mf04p,   tailup_type = \"epa\",   taildown_type = \"mariah\",   additive = \"afvArea\" ) summary(ssn_pois) #>  #> Call: #> ssn_glm(formula = C16 ~ ELEV_DEM + AREAWTMAP, ssn.object = mf04p,  #>     family = \"poisson\", tailup_type = \"epa\", taildown_type = \"mariah\",  #>     additive = \"afvArea\") #>  #> Deviance Residuals: #>      Min       1Q   Median       3Q      Max  #> -2.12277 -0.43689 -0.07905  0.26269  1.28473  #>  #> Coefficients (fixed): #>              Estimate Std. Error z value Pr(>|z|)     #> (Intercept) 45.549245  10.025635   4.543 5.54e-06 *** #> ELEV_DEM    -0.017567   0.004544  -3.866 0.000111 *** #> AREAWTMAP   -0.007586   0.003413  -2.222 0.026253 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Pseudo R-squared: 0.2443 #>  #> Coefficients (covariance): #>            Effect     Parameter   Estimate #>        tailup epa  de (parsill)  9.484e-01 #>        tailup epa         range  4.290e+04 #>   taildown mariah  de (parsill)  1.774e-02 #>   taildown mariah         range  9.782e+06 #>            nugget        nugget  1.008e-04 #>        dispersion    dispersion  1.000e+00 ssn_nb <- ssn_glm(   formula = C16 ~ ELEV_DEM + AREAWTMAP,   family = \"nbinomial\",   ssn.object = mf04p,   tailup_type = \"epa\",   taildown_type = \"mariah\",   additive = \"afvArea\" ) loocv_pois <- loocv(ssn_pois) loocv_pois$RMSPE #> [1] 5.249275 loocv_nb <- loocv(ssn_nb) loocv_nb$RMSPE #> [1] 5.255264"},{"path":"/articles/introduction.html","id":"simulating-spatial-stream-network-data","dir":"Articles","previous_headings":"Spatial Stream Network (SSN) Models","what":"Simulating Spatial Stream Network Data","title":"An Introduction to Spatial Stream Network Modeling in R Using SSN2","text":"ssn_simulate() function used simulate data stream network. First, covariance parameter values specified seed set: call ssn_simulate(), specifying family argument depending type simulated data desired (, Gaussian), ssn.object network (, observed network): simulate binomial (presence/absence) data running Currently, ssn_simulate() works observed network (network = \"obs\"). However, simulation SSN2 focus future updates, plan add support simulating prediction networks well observed prediction networks simultaneously.","code":"tu_params <- tailup_params(\"exponential\", de = 0.4, range = 1e5) td_params <- taildown_params(\"spherical\", de = 0.1, range = 1e6) euc_params <- euclid_params(\"gaussian\", de = 0.2, range = 1e3) nug_params <- nugget_params(\"nugget\", nugget = 0.1) set.seed(2) sims <- ssn_simulate(   family = \"gaussian\",   ssn.object = mf04p,   network = \"obs\",   additive = \"afvArea\",   tailup_params = tu_params,   taildown_params = td_params,   euclid_params = euc_params,   nugget_params = nug_params,   mean = 0,   samples = 1 ) head(sims) #> [1] -0.8022248 -0.2953168  0.7179851 -0.2965733 -0.2811469 -0.1010336 sims <- ssn_simulate(   family = \"binomial\",   ssn.object = mf04p,   network = \"obs\",   additive = \"afvArea\",   tailup_params = tu_params,   taildown_params = td_params,   euclid_params = euc_params,   nugget_params = nug_params,   mean = 0,   samples = 2 ) head(sims) #>      1 2 #> [1,] 0 1 #> [2,] 0 1 #> [3,] 0 1 #> [4,] 1 0 #> [5,] 1 0 #> [6,] 0 1"},{"path":"/articles/introduction.html","id":"function-glossary","dir":"Articles","previous_headings":"","what":"Function Glossary","title":"An Introduction to Spatial Stream Network Modeling in R Using SSN2","text":"list two SSN2 functions used fit models: ssn_glm(): Fit spatial stream network generalized linear model. ssn_lm(): Fit spatial stream network linear model. list commonly used SSN2 functions operate model fits: AIC(): Compute AIC. AICc(): Compute AICc. anova(): Perform analysis variance. augment(): Augment data diagnostics new data predictions. coef(): Return coefficients. confint(): Compute confidence intervals. cooks.distance(): Compute Cook’s distance. covmatrix(): Return covariance matrices. deviance(): Compute deviance. fitted(): Compute fitted values. glance(): Glance fitted model. glances(): Glance multiple fitted models. hatvalues(): Compute leverage (hat) values. logLik(): Compute log-likelihood. loocv(): Perform leave-one-cross validation compute relevant statistics. model.matrix(): Return model matrix (\\(\\mathbf{X}\\)). plot(): Create fitted model plots. predict(): Compute predictions prediction intervals. pseudoR2(): Compute pseudo r-squared. residuals(): Compute residuals. summary(): Summarize fitted models. tidy(): Tidy fitted models. varcomp(): Compare variance components. vcov(): Compute variance-covariance matrices estimated parameters. Documentation functions can found running ?function_name.SSN2 help(\"function_name.SSN2\", \"SSN2\"). example, ?predict.SSN2 help(\"predict.SSN2\", \"SSN2\"). list commonly used SSN2 functions manipulating SSN objects: ssn_create_distmat(): Create distance matrices .ssn directory use modeling functions. ssn_get_data(): Extract sf data.frame observed prediction locations SSN object. ssn_get_netgeom(): Extract topological information netgeom column. ssn_get_stream_distmat(): Extract stream distance matrices observed prediction locations SSN object. ssn_import(): Import SSN object .ssn directory. ssn_import_predpts(): Import prediction data store within existing SSN object. ssn_put_data(): Replace sf data.frame observed prediction locations SSN object. ssn_split_predpts(): Split prediction data stored within SSN object multiple prediction data sets. ssn_subset(): Subset existing SSN object based logical expression. SSN_to_SSN2(): Convert S4 SpatialStreamNetwork object created SSN S3 SSN object used SSN2. ssn_update_path(): Update path element SSN object. ssn_write(): Write SSN project new local .ssn directory. functions manipulate SSN objects ssn_ prefix, makes easily accessible via tab completion RStudio. list commonly used miscellaneous SSN2 functions: ssn_simulate(): Simulate spatially correlated random variables stream network. full list SSN2 functions alongside documentation, see documentation manual.","code":""},{"path":"/articles/introduction.html","id":"from-ssn-to-ssn2","dir":"Articles","previous_headings":"","what":"From SSN to SSN2","title":"An Introduction to Spatial Stream Network Modeling in R Using SSN2","text":"present table SSN functions provide relevant successors SSN2: addition function name changes , function argument names also changed. Please read documentation function interest see relevant argument name changes.","code":""},{"path":"/articles/introduction.html","id":"the-future-of-ssn2","dir":"Articles","previous_headings":"","what":"The Future of SSN2","title":"An Introduction to Spatial Stream Network Modeling in R Using SSN2","text":"several features planned future versions SSN2 make initial release due October timeline regarding rgdal, rgeos, maptools retirements. , plan regularly update add features SSN2 coming years – check back often! features include additional tools large data sets (model fitting prediction), manipulating .ssn object, simulating data, . best make future versions SSN2 backward compatible version, minor changes may occur ready release version 1.0.0.","code":""},{"path":"/articles/introduction.html","id":"r-code-appendix","dir":"Articles","previous_headings":"","what":"R Code Appendix","title":"An Introduction to Spatial Stream Network Modeling in R Using SSN2","text":"","code":"library(SSN2) citation(package = \"SSN2\") path <- system.file(\"lsndata/MiddleFork04.ssn\", package = \"SSN2\") copy_lsn_to_temp() path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(   path = path,   predpts = c(\"pred1km\", \"CapeHorn\", \"Knapp\"),   overwrite = TRUE ) summary(mf04p) library(ggplot2) names(mf04p$preds) ggplot() +   geom_sf(data = mf04p$edges) +   geom_sf(data = mf04p$preds$pred1km, pch = 17, color = \"blue\") +   geom_sf(data = mf04p$obs, color = \"brown\", size = 2) +   theme_bw() ssn_create_distmat(   ssn.object = mf04p,   predpts = c(\"pred1km\", \"CapeHorn\", \"Knapp\"),   among_predpts = TRUE,   overwrite = TRUE ) ggplot() +   geom_sf(data = mf04p$edges) +   geom_sf(data = mf04p$obs, aes(color = Summer_mn), size = 2) +   scale_color_viridis_c(limits = c(-1.5, 17), option = \"H\") +   theme_bw() tg <- Torgegram(   formula = Summer_mn ~ ELEV_DEM + AREAWTMAP,   ssn.object = mf04p,   type = c(\"flowcon\", \"flowuncon\", \"euclid\") ) plot(tg) ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM + AREAWTMAP,   ssn.object = mf04p,   tailup_type = \"exponential\",   taildown_type = \"spherical\",   euclid_type = \"gaussian\",   additive = \"afvArea\" ) summary(ssn_mod) varcomp(ssn_mod) tidy(ssn_mod, conf.int = TRUE) glance(ssn_mod) ssn_mod2 <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM + AREAWTMAP,   ssn.object = mf04p,   taildown_type = \"spherical\" ) glances(ssn_mod, ssn_mod2) ml_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM + AREAWTMAP,   ssn.object = mf04p,   tailup_type = \"exponential\",   taildown_type = \"spherical\",   euclid_type = \"gaussian\",   additive = \"afvArea\",   estmethod = \"ml\" ) ml_mod2 <- ssn_lm(   formula = Summer_mn ~ AREAWTMAP,   ssn.object = mf04p,   tailup_type = \"exponential\",   taildown_type = \"spherical\",   euclid_type = \"gaussian\",   additive = \"afvArea\",   estmethod = \"ml\" ) glances(ml_mod, ml_mod2) loocv_mod <- loocv(ssn_mod) loocv_mod$RMSPE loocv_mod2 <- loocv(ssn_mod2) loocv_mod2$RMSPE aug_ssn_mod <- augment(ssn_mod) aug_ssn_mod library(sf) st_write(aug_ssn_mod, paste0(tempdir(), \"/aug_ssn_mod.shp\")) plot(ssn_mod, which = 1) predict(ssn_mod, newdata = \"pred1km\") aug_preds <- augment(ssn_mod, newdata = \"pred1km\") aug_preds[, \".fitted\"] ggplot() +   geom_sf(data = mf04p$edges) +   geom_sf(data = aug_preds, aes(color = .fitted), size = 2) +   scale_color_viridis_c(limits = c(-1.5, 17), option = \"H\") +   theme_bw() st_write(aug_preds, paste0(tempdir(), \"/aug_preds.gpkg\")) predict(ssn_mod) predict(ssn_mod, newdata = \"all\") predict(ssn_mod, newdata = \"pred1km\", block = TRUE, interval = \"prediction\") euclid_init <- euclid_initial(\"gaussian\", de = 1, known = \"de\") euclid_init ssn_init <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM + AREAWTMAP,   ssn.object = mf04p,   tailup_type = \"exponential\",   taildown_type = \"spherical\",   euclid_initial = euclid_init,   additive = \"afvArea\" ) ssn_init ssn_rand <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM + AREAWTMAP,   ssn.object = mf04p,   tailup_type = \"exponential\",   taildown_type = \"spherical\",   euclid_type = \"gaussian\",   additive = \"afvArea\",   random = ~ as.factor(netID) ) ssn_rand ssn_part <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM + AREAWTMAP,   ssn.object = mf04p,   tailup_type = \"exponential\",   taildown_type = \"spherical\",   euclid_type = \"gaussian\",   additive = \"afvArea\",   partition_factor = ~ as.factor(netID) ) ssn_part ggplot() +   geom_sf(data = mf04p$edges) +   geom_sf(data = mf04p$obs, aes(color = C16), size = 2) +   scale_color_viridis_c(option = \"H\") +   theme_bw() ssn_pois <- ssn_glm(   formula = C16 ~ ELEV_DEM + AREAWTMAP,   family = \"poisson\",   ssn.object = mf04p,   tailup_type = \"epa\",   taildown_type = \"mariah\",   additive = \"afvArea\" ) summary(ssn_pois) ssn_nb <- ssn_glm(   formula = C16 ~ ELEV_DEM + AREAWTMAP,   family = \"nbinomial\",   ssn.object = mf04p,   tailup_type = \"epa\",   taildown_type = \"mariah\",   additive = \"afvArea\" ) loocv_pois <- loocv(ssn_pois) loocv_pois$RMSPE loocv_nb <- loocv(ssn_nb) loocv_nb$RMSPE tu_params <- tailup_params(\"exponential\", de = 0.4, range = 1e5) td_params <- taildown_params(\"spherical\", de = 0.1, range = 1e6) euc_params <- euclid_params(\"gaussian\", de = 0.2, range = 1e3) nug_params <- nugget_params(\"nugget\", nugget = 0.1) set.seed(2) sims <- ssn_simulate(   family = \"gaussian\",   ssn.object = mf04p,   network = \"obs\",   additive = \"afvArea\",   tailup_params = tu_params,   taildown_params = td_params,   euclid_params = euc_params,   nugget_params = nug_params,   mean = 0,   samples = 1 ) head(sims) sims <- ssn_simulate(   family = \"binomial\",   ssn.object = mf04p,   network = \"obs\",   additive = \"afvArea\",   tailup_params = tu_params,   taildown_params = td_params,   euclid_params = euc_params,   nugget_params = nug_params,   mean = 0,   samples = 2 ) head(sims)"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Dumelle. Author, maintainer. Jay M. Ver Hoef. Author. Erin Peterson. Author. Alan Pearse. Contributor. Dan Isaak. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dumelle M, Peterson, E, Ver Hoef JM, Pearse , Isaak D (2023). SSN2: Spatial Modeling Stream Networks R. R package version 0.1.0","code":"@Manual{,   title = {{SSN2}: Spatial Modeling on Stream Networks in {R}},   author = {Michael Dumelle and Erin Peterson and Jay M. {Ver Hoef} and Alan Pearse and Dan Isaak},   year = {2023},   note = {{R} package version 0.1.0}, }"},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to SSN2 development","title":"Contributing to SSN2 development","text":"outlines propose change SSN2. two main approaches: Create GitHub issue identifying bug suggesting feature. Contribute code change via GitHub pull request. prefer use GitHub, please send email Dumelle.Michael@epa.gov.","code":""},{"path":"/CONTRIBUTING.html","id":"github-issue","dir":"","previous_headings":"","what":"GitHub Issue","title":"Contributing to SSN2 development","text":"may create GitHub issue identifying bug suggesting feature. may access SSN2’s GitHub issues webpage visiting https://github.com/USEPA/SSN2/issues. Please illustrate bug feature using minimal reproducible example, reprex, linked . See tidyverse guide create great issue linked advice.","code":""},{"path":"/CONTRIBUTING.html","id":"github-pull-request","dir":"","previous_headings":"","what":"GitHub Pull Request","title":"Contributing to SSN2 development","text":"contribute change SSN2, please use pull request. learn creating GitHub pull request, please see GitHub guide linked .","code":""},{"path":"/index.html","id":"ssn2-spatial-modeling-on-stream-networks","dir":"","previous_headings":"","what":"Spatial Modeling on Stream Networks","title":"Spatial Modeling on Stream Networks","text":"SSN2 R package spatial statistical modeling prediction stream networks, including models based -stream distance. Models created using moving average constructions. Spatial linear models, including explanatory variables, can fit (restricted) maximum likelihood. Mapping graphical functions included. successor SSN R package. See SSN2 website : https://usepa.github.io/SSN2/.","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Spatial Modeling on Stream Networks","text":"use SSN2 formal publication report, please cite . Citing SSN2 lets us devote resources future. View SSN2 citation running","code":"citation(package = \"SSN2\") #>  #> To cite SSN2 in publications use: #>  #>   Dumelle M, Peterson, E, Ver Hoef JM, Pearse A, Isaak D (2023). SSN2: Spatial Modeling on Stream Networks in R. R package version 0.1.0 #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {{SSN2}: Spatial Modeling on Stream Networks in {R}}, #>     author = {Michael Dumelle and Erin Peterson and Jay M. {Ver Hoef} and Alan Pearse and Dan Isaak}, #>     year = {2023}, #>     note = {{R} package version 0.1.0}, #>   }"},{"path":"/index.html","id":"statement-of-need","dir":"","previous_headings":"","what":"Statement of Need","title":"Spatial Modeling on Stream Networks","text":"Streams provide vital aquatic services sustain wildlife, provide drinking irrigation water, support recreational cultural activities. Data often collected various locations stream network used characterize scientific phenomenon stream. Spatial stream network (SSN) models use spatial statistical modeling framework describe unique complex dependencies stream network resulting branching network structure, directional water flow, differences flow volume. SSN models relate response variable one explanatory variables, spatially independent error term (.e., nugget), three spatially dependent error terms: tail-errors, tail-errors, Euclidean errors. Tail-errors restrict spatial dependence flow-connected sites (.e., water flows upstream downstream site) incorporate spatial weights (.e., additive function) describe branching network . Tail-errors describe spatial dependence flow-connected flow-unconnected (.e., sites share common downstream junction flow) sites, spatial weights required. Euclidean errors describe spatial dependence sites based Euclidean distance governed factors confined stream network like regional geology.","code":""},{"path":"/index.html","id":"installation-instructions","dir":"","previous_headings":"","what":"Installation Instructions","title":"Spatial Modeling on Stream Networks","text":"Install load recent approved version CRAN running Install load recent version ofSSN2 GitHub running Install load recent development version ofSSN2 GitHub running","code":"# install the most recent approved version from CRAN install.packages(\"SSN2\") # load the most recent approved version from CRAN library(SSN2) # Installing from GitHub requires you first install the remotes package install.packages(\"remotes\")  # install the most recent version from GitHub remotes::install_github(\"USEPA/SSN2\", ref = \"main\") # load the most recent development version from GitHub library(SSN2) # Installing from GitHub requires you first install the remotes package install.packages(\"remotes\")  # install the most recent version from GitHub remotes::install_github(\"USEPA/SSN2\", ref = \"develop\") # load the most recent development version from GitHub library(SSN2)"},{"path":"/index.html","id":"example-usage","dir":"","previous_headings":"","what":"Example Usage","title":"Spatial Modeling on Stream Networks","text":"provide brief example showing use SSN2. thorough introduction software, see introductory vignette linked . list functions available SSN2, see function reference linked . load SSN2, copy .ssn object comes SSN2 temporary directory, create stream distance matrices used modeling running fit summarize SSN model explaining summer water temperatue (Summer_mn) function elevation (ELEV_DEM) precipitation (AREAWTMAP) exponential, spherical, Gaussian structures tail-, tail-, Euclidean errors, respectively, running tidy, glance , augment (diagnostics) fitted model running make predictions prediction sites (pred1km) running predict() (augment():","code":"library(SSN2) copy_lsn_to_temp() path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(path, predpts = \"pred1km\") ssn_create_distmat(mf04p, predpts = \"pred1km\", overwrite = TRUE) ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM + AREAWTMAP,   ssn.object = mf04p,   tailup_type = \"exponential\",   taildown_type = \"spherical\",   euclid_type = \"gaussian\",   additive = \"afvArea\" ) summary(ssn_mod) #>  #> Call: #> ssn_lm(formula = Summer_mn ~ ELEV_DEM + AREAWTMAP, ssn.object = mf04p,  #>     tailup_type = \"exponential\", taildown_type = \"spherical\",  #>     euclid_type = \"gaussian\", additive = \"afvArea\") #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.6393 -2.0646 -0.5952  0.2143  0.7497  #>  #> Coefficients (fixed): #>              Estimate Std. Error z value Pr(>|z|)     #> (Intercept) 76.195041   7.871574   9.680  < 2e-16 *** #> ELEV_DEM    -0.026905   0.003646  -7.379  1.6e-13 *** #> AREAWTMAP   -0.009099   0.004461  -2.040   0.0414 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Pseudo R-squared: 0.6124 #>  #> Coefficients (covariance): #>               Effect     Parameter   Estimate #>   tailup exponential  de (parsill)  3.800e+00 #>   tailup exponential         range  4.194e+06 #>   taildown spherical  de (parsill)  4.480e-01 #>   taildown spherical         range  1.647e+05 #>      euclid gaussian  de (parsill)  1.509e-02 #>      euclid gaussian         range  4.496e+03 #> tidy(ssn_mod, conf.int = TRUE) #> # A tibble: 3 × 7 #>   term        estimate std.error statistic  p.value conf.low conf.high #>   <chr>          <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> #> 1 (Intercept) 76.2       7.87         9.68 0         60.8    91.6      #> 2 AREAWTMAP   -0.00910   0.00446     -2.04 4.14e- 2  -0.0178 -0.000356 #> 3 ELEV_DEM    -0.0269    0.00365     -7.38 1.60e-13  -0.0341 -0.0198 glance(ssn_mod) #> # A tibble: 1 × 9 #>       n     p  npar value   AIC  AICc logLik deviance pseudo.r.squared #>   <int> <dbl> <int> <dbl> <dbl> <dbl>  <dbl>    <dbl>            <dbl> #> 1    45     3     7  59.3  73.3  76.3  -29.6     41.9            0.612 head(augment(ssn_mod)) #> Simple feature collection with 6 features and 9 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -1515032 ymin: 2529461 xmax: -1512690 ymax: 2531883 #> Projected CRS: USA_Contiguous_Albers_Equal_Area_Conic_USGS_version #> # A tibble: 6 × 10 #>   Summer_mn ELEV_DEM AREAWTMAP .fitted .resid   .hat  .cooksd .std.resid pid   #>       <dbl>    <int>     <dbl>   <dbl>  <dbl>  <dbl>    <dbl>      <dbl> <chr> #> 1     11.4      1977      940.    14.4  -3.07 0.0915 0.0962       -1.78  1     #> 2     10.7      1984     1087.    12.9  -2.20 0.114  0.00471      -0.352 2     #> 3     10.4      1993     1087.    12.7  -2.25 0.0372 0.00724      -0.764 3     #> 4     10.1      2007     1087.    12.3  -2.18 0.0251 0.00153      -0.427 4     #> 5     10.1      2009     1087.    12.3  -2.13 0.0374 0.000583     -0.216 5     #> 6      9.81     2012     1109.    12.0  -2.16 0.0602 0.0150       -0.863 6     #> # ℹ 1 more variable: geometry <POINT [m]> preds <- predict(ssn_mod, newdata = \"pred1km\", interval = \"prediction\") head(preds) #>        fit      lwr      upr #> 1 14.64383 14.27138 15.01627 #> 2 15.00608 14.65017 15.36198 #> 3 14.79235 14.27414 15.31057 #> 4 14.96884 14.45492 15.48276 #> 5 15.15182 14.73770 15.56595 #> 6 15.12783 14.76358 15.49208"},{"path":"/index.html","id":"contributing-to-ssn2","dir":"","previous_headings":"","what":"Contributing to SSN2","title":"Spatial Modeling on Stream Networks","text":"encourage users propose changes SSN2. Please see contributing guide (CONTRIBUTING.md) detail.","code":""},{"path":"/index.html","id":"epa-disclaimer","dir":"","previous_headings":"","what":"EPA Disclaimer","title":"Spatial Modeling on Stream Networks","text":"United States Environmental Protection Agency (EPA) GitHub project code provided “” basis user assumes responsibility use. EPA relinquished control information longer responsibility protect integrity , confidentiality, availability information. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation favoring EPA. EPA seal logo shall used manner imply endorsement commercial product activity EPA United States Government.","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Spatial Modeling on Stream Networks","text":"project licensed GNU General Public License, GPL-3.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007 Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Copyright (C) program free software: can redistribute /modify terms GNU General Public License published Free Software Foundation, either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE. See GNU General Public License details. received copy GNU General Public License along program. , see http://www.gnu.org/licenses/. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: Copyright (C)  program comes ABSOLUTELY WARRANTY; details type ‘show w’. free software, welcome redistribute certain conditions; type ‘show c’ details. hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.>"},{"path":"/reference/AIC.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute AIC and AICc of fitted model objects — AIC.SSN2","title":"Compute AIC and AICc of fitted model objects — AIC.SSN2","text":"Compute AIC AICc one several fitted model objects log-likelihood value can obtained.","code":""},{"path":"/reference/AIC.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute AIC and AICc of fitted model objects — AIC.SSN2","text":"","code":"# S3 method for ssn_lm AIC(object, ..., k = 2)  # S3 method for ssn_glm AIC(object, ..., k = 2)  # S3 method for ssn_lm AICc(object, ..., k = 2)  # S3 method for ssn_glm AICc(object, ..., k = 2)"},{"path":"/reference/AIC.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute AIC and AICc of fitted model objects — AIC.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). ... Optionally fitted model objects. k penalty parameter, taken 2. Currently allowed differ 2 (needed generic consistency).","code":""},{"path":"/reference/AIC.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute AIC and AICc of fitted model objects — AIC.SSN2","text":"just one object provided, numeric value corresponding AIC AICc. multiple objects provided, data.frame rows corresponding objects columns representing number parameters estimated (df) AIC AICc.","code":""},{"path":"/reference/AIC.SSN2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute AIC and AICc of fitted model objects — AIC.SSN2","text":"comparing models fit maximum restricted maximum likelihood, smaller AIC AICc, better fit. AICc contains correction AIC small sample sizes. AIC AICc comparisons \"ml\" \"reml\" models meaningless -- comparisons made within set models estimated using \"ml\" set models estimated using \"reml\". AIC AICc comparisons \"reml\" must use fixed effects. vary covariance parameters fixed effects simultaneously, use \"ml\". AIC defined \\(-2loglik + 2(npar)\\) AICc defined \\(-2loglik + 2n(npar) / (n - npar - 1)\\), \\(n\\) sample size \\(npar\\) number estimated parameters. \"ml\", \\(npar\\) number estimated covariance parameters plus number estimated fixed effects. \"reml\", \\(npar\\) number estimated covariance parameters.","code":""},{"path":"/reference/AIC.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute AIC and AICc of fitted model objects — AIC.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) AIC(ssn_mod) #> [1] 60.18256 AICc(ssn_mod) #> [1] 60.76793"},{"path":"/reference/anova.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute analysis of variance and likelihood ratio tests of fitted model objects — anova.SSN2","title":"Compute analysis of variance and likelihood ratio tests of fitted model objects — anova.SSN2","text":"Compute analysis variance tables fitted model object likelihood ratio test two fitted model objects.","code":""},{"path":"/reference/anova.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute analysis of variance and likelihood ratio tests of fitted model objects — anova.SSN2","text":"","code":"# S3 method for ssn_lm anova(object, ..., test = TRUE, Terms, L)  # S3 method for ssn_glm anova(object, ..., test = TRUE, Terms, L)  # S3 method for anova.ssn_lm tidy(x, ...)  # S3 method for anova.ssn_glm tidy(x, ...)"},{"path":"/reference/anova.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute analysis of variance and likelihood ratio tests of fitted model objects — anova.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). ... additional fitted model object ssn_lm() ssn_glm() (anova()). test logical value indicating whether p-values asymptotic Chi-squared hypothesis tests returned. Defaults TRUE. Terms optional character integer vector specifies terms model used jointly compute test statistics p-values (test = TRUE) null hypothesis zero. Terms used single fitted model object passed function. Terms character vector, contain names fixed effect terms. Terms integer vector, correspond order (starting one) names fixed effect terms. easiest way obtain names possible terms run tidy(anova(object))$effects (integer representation matches positions vector). L optional numeric matrix list specifying linear combinations coefficients model used compute test statistics p-values (test = TRUE) coefficient constraints corresponding null hypothesis zero. L used single fitted model object passed function. L numeric matrix, rows indicate coefficient constraints columns represent coefficients. single hypothesis test conducted null hypothesis zero. L list, list element numeric matrix specified . separate hypothesis tests conducted. easiest way obtain possible coefficients run tidy(object)$term. x object anova(object).","code":""},{"path":"/reference/anova.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute analysis of variance and likelihood ratio tests of fitted model objects — anova.SSN2","text":"one fitted model object present, anova() returns data frame degrees freedom (Df), test statistics (Chi2), p-values (Pr(>Chi2) test = TRUE) corresponding asymptotic Chi-squared hypothesis tests model term. two fitted model objects present, anova() returns data frame difference degrees freedom full reduced model (Df), test statistic (Chi2), p-value corresponding likelihood ratio test (Pr(>Chi2) test = TRUE). Whether one two fitted model objects provided, tidy() can used obtain tidy tibbles anova(object) output.","code":""},{"path":"/reference/anova.SSN2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute analysis of variance and likelihood ratio tests of fitted model objects — anova.SSN2","text":"one fitted model object present, anova() performs general linear hypothesis test corresponding hypothesis specified matrix constraints. Terms L specified, model term tested zero (correspond type III marginal hypothesis tests classical ANOVA). Terms specified L specified, terms tested jointly zero. L specified, linear combinations terms specified L jointly tested zero. two fitted model objects present, one must \"reduced\" model nested \"full\" model. anova() performs likelihood ratio test.","code":""},{"path":"/reference/anova.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute analysis of variance and likelihood ratio tests of fitted model objects — anova.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) anova(ssn_mod) #> Analysis of Variance Table #>  #> Response: Summer_mn #>             Df    Chi2 Pr(>Chi2)     #> (Intercept)  1 132.633 < 2.2e-16 *** #> ELEV_DEM     1  87.829 < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 tidy(anova(ssn_mod)) #> # A tibble: 2 × 4 #>   effects        df statistic  p.value #>   <chr>       <int>     <dbl>    <dbl> #> 1 (Intercept)     1     133.  1.09e-30 #> 2 ELEV_DEM        1      87.8 7.14e-21"},{"path":"/reference/augment.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment data with information from fitted model objects — augment.SSN2","title":"Augment data with information from fitted model objects — augment.SSN2","text":"Augment accepts fitted model object data set adds information observation data set. New columns always begin . prefix avoid overwriting columns original data set. Augment behaves differently depending whether original data new data requires augmenting. Typically, augmenting original data, fitted model object specified, augmenting new data, fitted model object newdata specified. augmenting original data, diagnostic statistics augmented row data set. augmenting new data, predictions optional intervals (confidence prediction) standard errors augmented row new data set.","code":""},{"path":"/reference/augment.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment data with information from fitted model objects — augment.SSN2","text":"","code":"# S3 method for ssn_lm augment(   x,   drop = TRUE,   newdata = NULL,   se_fit = FALSE,   interval = c(\"none\", \"confidence\", \"prediction\"),   level = 0.95,   ... )  # S3 method for ssn_glm augment(   x,   drop = TRUE,   newdata = NULL,   type = c(\"link\", \"response\"),   se_fit = FALSE,   interval = c(\"none\", \"confidence\", \"prediction\"),   newdata_size,   level = 0.95,   var_correct = TRUE,   ... )"},{"path":"/reference/augment.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment data with information from fitted model objects — augment.SSN2","text":"x fitted model object ssn_lm() ssn_glm(). drop logical indicating whether drop extra variables fitted model object x augmenting. default drop TRUE. drop ignored augmenting newdata. newdata vector contains names prediction sf objects original ssn.object requiring prediction. original explanatory variables used create fitted model object x must present prediction sf object represented newdata. Defaults NULL, indicates nothing passed newdata augmenting occurs original data. value \"ssn\" shorthand specifying prediction sf objects. se_fit Logical indicating whether .se.fit column added augmented output. Passed predict() defaults FALSE. interval Character indicating type confidence interval columns add augmented newdata output. Passed predict() defaults \"none\". level Tolerance/confidence level. default 0.95. ... Additional arguments predict() augmenting newdata. type scale (response link) predictions obtained using ssn_glm objects. newdata_size size value observation newdata used predicting binomial family. var_correct logical indicating whether return corrected prediction variances predicting via models fit using ssn_glm. default TRUE.","code":""},{"path":"/reference/augment.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment data with information from fitted model objects — augment.SSN2","text":"augmenting original data set, tibble additional columns .fitted: Fitted value .resid: Response residual (difference observed fitted values) .hat: Leverage (diagonal hat matrix) .cooksd: Cook's distance .std.resid: Standardized residuals .se.fit: Standard error fitted value. augmenting new data set, tibble additional columns .fitted: Predicted (fitted) value .lower: Lower bound interval .upper: Upper bound interval .se.fit: Standard error predicted (fitted) value predictions prediction objects desired, output list element name matches prediction objects values predictions.","code":""},{"path":"/reference/augment.SSN2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augment data with information from fitted model objects — augment.SSN2","text":"augment() returns tibble sf object. Missing response values original data can augmented newdata object providing \".missing\" newdata argument.","code":""},{"path":[]},{"path":"/reference/augment.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment data with information from fitted model objects — augment.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, predpts = \"CapeHorn\", overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) augment(ssn_mod) #> Simple feature collection with 45 features and 8 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -1530805 ymin: 2527111 xmax: -1503079 ymax: 2537823 #> Projected CRS: USA_Contiguous_Albers_Equal_Area_Conic_USGS_version #> # A tibble: 45 × 9 #>    Summer_mn ELEV_DEM .fitted .resid    .hat    .cooksd .std.resid pid   #>  *     <dbl>    <int>   <dbl>  <dbl>   <dbl>      <dbl>      <dbl> <chr> #>  1     11.4      1977    14.3  -2.96 0.157   0.135         -1.31   1     #>  2     10.7      1984    14.1  -3.42 0.0924  0.0184        -0.631  2     #>  3     10.4      1993    13.9  -3.45 0.0301  0.0103        -0.827  3     #>  4     10.1      2007    13.5  -3.35 0.00798 0.000239      -0.245  4     #>  5     10.1      2009    13.4  -3.30 0.0105  0.00000674     0.0359 5     #>  6      9.81     2012    13.3  -3.52 0.00350 0.00285       -1.28   6     #>  7      9.76     2023    13.0  -3.26 0.0179  0.0000144      0.0401 7     #>  8      9.77     2023    13.0  -3.25 0.0169  0.0000741      0.0935 8     #>  9      9.53     2026    12.9  -3.40 0.00831 0.000891      -0.463  9     #> 10     12.6      1988    14.0  -1.45 0.0561  0.0290        -1.02   10    #> # ℹ 35 more rows #> # ℹ 1 more variable: geometry <POINT [m]> augment(ssn_mod, newdata = \"CapeHorn\") #> Simple feature collection with 654 features and 20 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -1516634 ymin: 2527816 xmax: -1512722 ymax: 2531418 #> Projected CRS: USA_Contiguous_Albers_Equal_Area_Conic_USGS_version #> # A tibble: 654 × 21 #>       COMID GNIS_NAME       CDRAINAG AREAWTMAP   SLOPE ELEV_DEM FlowCMS AirMEANc #>  *    <int> <chr>              <dbl>     <dbl>   <dbl>    <int>   <dbl>    <dbl> #>  1 23519461 Cape Horn Creek     69.9     1087. 0.00843     2011    34.8     21.5 #>  2 23519461 Cape Horn Creek     69.9     1087. 0.00843     2011    34.8     21.5 #>  3 23519461 Cape Horn Creek     69.9     1087. 0.00843     2011    34.8     21.5 #>  4 23519461 Cape Horn Creek     69.9     1087. 0.00843     2011    34.8     21.5 #>  5 23519461 Cape Horn Creek     69.9     1087. 0.00843     2011    34.8     21.5 #>  6 23519461 Cape Horn Creek     69.9     1087. 0.00843     2011    34.8     21.5 #>  7 23519461 Cape Horn Creek     69.9     1087. 0.00843     2013    34.8     21.5 #>  8 23519461 Cape Horn Creek     69.9     1087. 0.00843     2013    34.8     21.5 #>  9 23519461 Cape Horn Creek     69.9     1087. 0.00843     2013    34.8     21.5 #> 10 23519461 Cape Horn Creek     69.9     1087. 0.00843     2011    34.8     21.5 #> # ℹ 644 more rows #> # ℹ 13 more variables: AirMWMTc <dbl>, NEAR_X <dbl>, NEAR_Y <dbl>, rid <int>, #> #   ratio <dbl>, afvArea <chr>, upDist <dbl>, locID <int>, netID <int>, #> #   pid <int>, netgeom <chr>, .fitted <dbl>, geometry <POINT [m]>"},{"path":"/reference/coef.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted model coefficients — coef.SSN2","title":"Extract fitted model coefficients — coef.SSN2","text":"coef extracts fitted model coefficients fitted model objects. coefficients alias .","code":""},{"path":"/reference/coef.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted model coefficients — coef.SSN2","text":"","code":"# S3 method for ssn_lm coef(object, type = \"fixed\", ...)  # S3 method for ssn_lm coefficients(object, type = \"fixed\", ...)  # S3 method for ssn_glm coef(object, type = \"fixed\", ...)  # S3 method for ssn_glm coefficients(object, type = \"fixed\", ...)"},{"path":"/reference/coef.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted model coefficients — coef.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). type \"fixed\" fixed effect coefficients, \"tailup\" tailup covariance parameter coefficients, \"taildown\" taildown covariance parameter coefficients, \"euclid\" Euclidean covariance parameter coefficients, \"nugget\" nugget covariance parameter coefficients, \"dispersion\" dispersion parameter coefficient (ssn_glm() objects), \"randcov\" random effect variance coefficients, \"ssn\" tailup, taildown, Euclidean, nugget, dispersion (ssn_glm() objects) parameter coefficients. Defaults \"fixed\". ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/coef.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted model coefficients — coef.SSN2","text":"named vector coefficients.","code":""},{"path":"/reference/coef.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract fitted model coefficients — coef.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) coef(ssn_mod) #> (Intercept)    ELEV_DEM  #> 71.32316197 -0.02882225  coef(ssn_mod, type = \"tailup\") #>           de        range  #> 4.415469e+00 1.174539e+06  #> attr(,\"class\") #> [1] \"tailup_exponential\" coefficients(ssn_mod) #> (Intercept)    ELEV_DEM  #> 71.32316197 -0.02882225"},{"path":"/reference/confint.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals for fitted model parameters — confint.SSN2","title":"Confidence intervals for fitted model parameters — confint.SSN2","text":"Computes confidence intervals one parameters fitted model object.","code":""},{"path":"/reference/confint.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals for fitted model parameters — confint.SSN2","text":"","code":"# S3 method for ssn_lm confint(object, parm, level = 0.95, ...)  # S3 method for ssn_glm confint(object, parm, level = 0.95, ...)"},{"path":"/reference/confint.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals for fitted model parameters — confint.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). parm specification parameters given confidence intervals (character vector names). missing, parameters considered. level confidence level required. default 0.95. ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/confint.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence intervals for fitted model parameters — confint.SSN2","text":"Gaussian-based confidence intervals (two-sided equal-tailed) fixed effect coefficients based confidence level specified level. ssn_glm() objects, confidence intervals link scale.","code":""},{"path":"/reference/confint.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence intervals for fitted model parameters — confint.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) confint(ssn_mod) #>                   2.5 %      97.5 % #> (Intercept) 59.18500695 83.46131699 #> ELEV_DEM    -0.03485002 -0.02279448 confint(ssn_mod, level = 0.9) #>                     5 %        95 % #> (Intercept) 61.13650116 81.50982278 #> ELEV_DEM    -0.03388091 -0.02376358"},{"path":"/reference/cooks.distance.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Cook's distance — cooks.distance.SSN2","title":"Compute Cook's distance — cooks.distance.SSN2","text":"Compute Cook's distance observation fitted model object.","code":""},{"path":"/reference/cooks.distance.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Cook's distance — cooks.distance.SSN2","text":"","code":"# S3 method for ssn_lm cooks.distance(model, ...)  # S3 method for ssn_glm cooks.distance(model, ...)"},{"path":"/reference/cooks.distance.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Cook's distance — cooks.distance.SSN2","text":"model fitted model object ssn_lm() ssn_glm(). ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/cooks.distance.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Cook's distance — cooks.distance.SSN2","text":"vector Cook's distance values observation fitted model object.","code":""},{"path":"/reference/cooks.distance.SSN2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Cook's distance — cooks.distance.SSN2","text":"Cook's distance measures influence observation fitted model object. observation influential, omission data noticeably impacts parameter estimates. larger Cook's distance, larger influence.","code":""},{"path":[]},{"path":"/reference/cooks.distance.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Cook's distance — cooks.distance.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) cooks.distance(ssn_mod) #>            1            2            3            4            5            6  #> 1.352055e-01 1.838183e-02 1.031477e-02 2.394619e-04 6.738905e-06 2.853609e-03  #>            7            8            9           10           11           12  #> 1.444345e-05 7.407903e-05 8.913727e-04 2.902180e-02 7.151814e-02 1.478130e-01  #>           13           14           15           16           17           18  #> 1.325513e-03 8.944452e-02 2.518628e-02 2.855456e-02 4.559303e-02 3.189087e-02  #>           19           20           21           22           23           24  #> 3.236705e-03 1.820146e-03 1.613470e-04 2.607051e-04 5.023190e-04 9.990331e-02  #>           25           26           27           28           29           30  #> 1.362150e-03 1.769408e-03 2.791224e-02 2.507513e-03 7.423961e-03 5.168470e-02  #>           31           32           33           34           35           36  #> 3.062191e-04 3.654006e-04 1.628686e-03 2.898565e-03 1.940961e-04 8.450436e-03  #>           37           38           39           40           41           42  #> 5.261079e-05 7.816457e-05 6.103392e-05 9.366436e-03 1.201142e-02 1.870026e-03  #>           43           44           45  #> 5.228889e-03 8.723253e-03 2.611896e-03"},{"path":"/reference/copy_lsn_to_temp.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy LSN to temporary directory — copy_lsn_to_temp","title":"Copy LSN to temporary directory — copy_lsn_to_temp","text":"Copies LSN directory MiddleFork04.ssn R's temporary directory examples SSN2 write local library places.","code":""},{"path":"/reference/copy_lsn_to_temp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy LSN to temporary directory — copy_lsn_to_temp","text":"","code":"copy_lsn_to_temp()"},{"path":"/reference/copy_lsn_to_temp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy LSN to temporary directory — copy_lsn_to_temp","text":"copy MiddleFork04.ssn residing R's temporary directory","code":""},{"path":"/reference/copy_lsn_to_temp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Copy LSN to temporary directory — copy_lsn_to_temp","text":"Copies LSN directory MiddleFork04.ssn R's temporary directory","code":""},{"path":"/reference/copy_lsn_to_temp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy LSN to temporary directory — copy_lsn_to_temp","text":"","code":"copy_lsn_to_temp() # getwd() # setwd(tempdir()) # getwd() # if unix-alike, list temporary directory contents using: system('ls') # if windows, list temporary directory contents using: shell('dir')"},{"path":"/reference/covmatrix.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a covariance matrix — covmatrix.SSN2","title":"Create a covariance matrix — covmatrix.SSN2","text":"Create covariance matrix fitted model object.","code":""},{"path":"/reference/covmatrix.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a covariance matrix — covmatrix.SSN2","text":"","code":"# S3 method for ssn_lm covmatrix(object, newdata, cov_type, ...)  # S3 method for ssn_glm covmatrix(object, newdata, cov_type, ...)"},{"path":"/reference/covmatrix.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a covariance matrix — covmatrix.SSN2","text":"object fitted model object (e.g., ssn_lm() ssn_glm()). newdata omitted, covariance matrix observed data returned. provided, newdata data frame sf object contains coordinate information required construct covariance newdata observed data. data frame, newdata must contain variables represent coordinates name coordinates observed data used fit object. sf object, coordinates obtained geometry newdata. cov_type type covariance matrix returned. newdata omitted, \\(n \\times n\\) covariance matrix observed data returned, \\(n\\) sample size used fit object. newdata provided cov_type \"pred.obs\" (default), \\(m \\times n\\) covariance matrix predicted observed data returned, \\(m\\) number observations prediction data. newdata provided cov_type \"obs.pred\", \\(n \\times m\\) covariance matrix observed prediction data returned. newdata provided cov_type \"pred.pred\", \\(m \\times m\\) covariance matrix prediction data returned. ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/covmatrix.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a covariance matrix — covmatrix.SSN2","text":"covariance matrix (see cov_type).","code":""},{"path":"/reference/covmatrix.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a covariance matrix — covmatrix.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, predpts = \"CapeHorn\", overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) covmatrix(ssn_mod) #>           [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8] #>  [1,] 4.441093 2.171225 2.169448 2.167548 2.166820 2.159888 2.152978 2.152538 #>  [2,] 2.171225 4.441093 4.411857 4.407992 4.406512 4.392414 4.378361 4.377466 #>  [3,] 2.169448 4.411857 4.441093 4.411602 4.410120 4.396010 4.381946 4.381051 #>  [4,] 2.167548 4.407992 4.411602 4.441093 4.413986 4.399864 4.385788 4.384891 #>  [5,] 2.166820 4.406512 4.410120 4.413986 4.441093 4.401342 4.387261 4.386364 #>  [6,] 2.159888 4.392414 4.396010 4.399864 4.401342 4.441093 4.401343 4.400443 #>  [7,] 2.152978 4.378361 4.381946 4.385788 4.387261 4.401343 4.441093 4.414567 #>  [8,] 2.152538 4.377466 4.381051 4.384891 4.386364 4.400443 4.414567 4.441093 #>  [9,] 2.118957 4.309175 4.312703 4.316484 4.317934 4.331794 4.345697 4.346585 #> [10,] 3.841226 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [11,] 3.678119 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [12,] 3.086145 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [13,] 3.077317 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [14,] 3.073538 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [15,] 3.068528 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [16,] 3.004544 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [17,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [18,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [19,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [20,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [21,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [22,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [23,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [24,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [25,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [26,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [27,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [28,] 1.997808 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [29,] 1.909344 3.882899 3.886079 3.889486 3.890792 3.903281 3.915809 3.916609 #> [30,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [31,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [32,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [33,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [34,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [35,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [36,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [37,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [38,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [39,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [40,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [41,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [42,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [43,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [44,] 3.085052 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [45,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>           [,9]    [,10]    [,11]    [,12]    [,13]    [,14]    [,15]    [,16] #>  [1,] 2.118957 3.841226 3.678119 3.086145 3.077317 3.073538 3.068528 3.004544 #>  [2,] 4.309175 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [3,] 4.312703 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [4,] 4.316484 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [5,] 4.317934 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [6,] 4.331794 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [7,] 4.345697 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [8,] 4.346585 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [9,] 4.441093 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [10,] 0.000000 4.441093 4.227979 3.547507 3.537360 3.533016 3.527257 3.453708 #> [11,] 0.000000 4.227979 4.441093 3.704823 3.694225 3.689688 3.683674 3.606863 #> [12,] 0.000000 3.547507 3.704823 4.441093 4.402839 4.397432 4.390264 4.298720 #> [13,] 0.000000 3.537360 3.694225 4.402839 4.441093 4.410047 4.402859 4.311052 #> [14,] 0.000000 3.533016 3.689688 4.397432 4.410047 4.441093 4.408272 4.316353 #> [15,] 0.000000 3.527257 3.683674 4.390264 4.402859 4.408272 4.441093 4.323400 #> [16,] 0.000000 3.453708 3.606863 4.298720 4.311052 4.316353 4.323400 4.441093 #> [17,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [18,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [19,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [20,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [21,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [22,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [23,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [24,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [25,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [26,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [27,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [28,] 0.000000 2.296470 2.398307 0.000000 0.000000 0.000000 0.000000 0.000000 #> [29,] 3.978679 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [30,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [31,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [32,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [33,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [34,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [35,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [36,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [37,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [38,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [39,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [40,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [41,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [42,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [43,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [44,] 0.000000 3.546251 3.703510 4.413905 4.404399 4.398991 4.391820 4.300244 #> [45,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>           [,17]     [,18]    [,19]     [,20]     [,21]     [,22]     [,23] #>  [1,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [2,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [3,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [4,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [5,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [6,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [7,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [8,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #>  [9,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [10,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [11,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [12,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [13,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [14,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [15,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [16,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [17,] 4.4410930 4.4130628 4.399162 4.3838619 4.3864570 4.3403396 4.2928585 #> [18,] 4.4130628 4.4410930 4.401561 4.3862525 4.3888490 4.3427065 4.2951995 #> [19,] 4.3991620 4.4015609 4.441093 4.4001126 4.4027173 4.3564290 4.3087719 #> [20,] 4.3838619 4.3862525 4.400113 4.4410930 4.4128571 4.3716333 4.3238099 #> [21,] 4.3864570 4.3888490 4.402717 4.4128571 4.4410930 4.3690470 4.3212518 #> [22,] 4.3403396 4.3427065 4.356429 4.3716333 4.3690470 4.4410930 4.3671664 #> [23,] 4.2928585 4.2951995 4.308772 4.3238099 4.3212518 4.3671664 4.4410930 #> [24,] 4.0176297 4.0198206 4.032523 4.0465967 4.0442026 4.0871734 4.1323796 #> [25,] 3.9440371 3.9461878 3.958657 3.9724734 3.9701232 4.0123069 4.0566850 #> [26,] 3.9427913 3.9449414 3.957407 3.9712187 3.9688693 4.0110396 4.0554037 #> [27,] 3.9185684 3.9207053 3.933094 3.9468211 3.9444861 3.9863974 4.0304889 #> [28,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [29,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [30,] 0.7454686 0.7458751 0.748232 0.7508434 0.7503992 0.7583724 0.7667604 #> [31,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [32,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [33,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [34,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [35,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [36,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [37,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [38,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [39,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [40,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [41,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [42,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [43,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [44,] 0.0000000 0.0000000 0.000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [45,] 2.9349643 2.9365648 2.945844 2.9561253 2.9543764 2.9857675 3.0187915 #>           [,24]    [,25]    [,26]    [,27]    [,28]    [,29]     [,30]    [,31] #>  [1,] 0.0000000 0.000000 0.000000 0.000000 1.997808 1.909344 0.0000000 0.000000 #>  [2,] 0.0000000 0.000000 0.000000 0.000000 0.000000 3.882899 0.0000000 0.000000 #>  [3,] 0.0000000 0.000000 0.000000 0.000000 0.000000 3.886079 0.0000000 0.000000 #>  [4,] 0.0000000 0.000000 0.000000 0.000000 0.000000 3.889486 0.0000000 0.000000 #>  [5,] 0.0000000 0.000000 0.000000 0.000000 0.000000 3.890792 0.0000000 0.000000 #>  [6,] 0.0000000 0.000000 0.000000 0.000000 0.000000 3.903281 0.0000000 0.000000 #>  [7,] 0.0000000 0.000000 0.000000 0.000000 0.000000 3.915809 0.0000000 0.000000 #>  [8,] 0.0000000 0.000000 0.000000 0.000000 0.000000 3.916609 0.0000000 0.000000 #>  [9,] 0.0000000 0.000000 0.000000 0.000000 0.000000 3.978679 0.0000000 0.000000 #> [10,] 0.0000000 0.000000 0.000000 0.000000 2.296470 0.000000 0.0000000 0.000000 #> [11,] 0.0000000 0.000000 0.000000 0.000000 2.398307 0.000000 0.0000000 0.000000 #> [12,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.000000 #> [13,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.000000 #> [14,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.000000 #> [15,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.000000 #> [16,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.000000 #> [17,] 4.0176297 3.944037 3.942791 3.918568 0.000000 0.000000 0.7454686 0.000000 #> [18,] 4.0198206 3.946188 3.944941 3.920705 0.000000 0.000000 0.7458751 0.000000 #> [19,] 4.0325228 3.958657 3.957407 3.933094 0.000000 0.000000 0.7482320 0.000000 #> [20,] 4.0465967 3.972473 3.971219 3.946821 0.000000 0.000000 0.7508434 0.000000 #> [21,] 4.0442026 3.970123 3.968869 3.944486 0.000000 0.000000 0.7503992 0.000000 #> [22,] 4.0871734 4.012307 4.011040 3.986397 0.000000 0.000000 0.7583724 0.000000 #> [23,] 4.1323796 4.056685 4.055404 4.030489 0.000000 0.000000 0.7667604 0.000000 #> [24,] 4.4410930 4.334589 4.333220 4.306599 0.000000 0.000000 0.8192875 0.000000 #> [25,] 4.3345893 4.441093 4.414075 4.386956 0.000000 0.000000 0.0000000 0.000000 #> [26,] 4.3332202 4.414075 4.441093 4.388342 0.000000 0.000000 0.0000000 0.000000 #> [27,] 4.3065986 4.386956 4.388342 4.441093 0.000000 0.000000 0.0000000 0.000000 #> [28,] 0.0000000 0.000000 0.000000 0.000000 4.441093 0.000000 0.0000000 0.000000 #> [29,] 0.0000000 0.000000 0.000000 0.000000 0.000000 4.441093 0.0000000 0.000000 #> [30,] 0.8192875 0.000000 0.000000 0.000000 0.000000 0.000000 4.4410930 0.000000 #> [31,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 4.441093 #> [32,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 4.406113 #> [33,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 4.413483 #> [34,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 2.682767 #> [35,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 2.684554 #> [36,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 2.740888 #> [37,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 2.747844 #> [38,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 2.756931 #> [39,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.000000 #> [40,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.000000 #> [41,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.000000 #> [42,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.000000 #> [43,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.000000 #> [44,] 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.000000 #> [45,] 3.2255947 3.285782 3.286820 3.307138 0.000000 0.000000 0.0000000 0.000000 #>          [,32]    [,33]    [,34]    [,35]    [,36]    [,37]    [,38]    [,39] #>  [1,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [2,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [3,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [4,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [5,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [6,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [7,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [8,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [9,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [10,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [11,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [12,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [13,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [14,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [15,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [16,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [17,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [18,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [19,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [20,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [21,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [22,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [23,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [24,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [25,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [26,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [27,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [28,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [29,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [30,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [31,] 4.406113 4.413483 2.682767 2.684554 2.740888 2.747844 2.756931 0.000000 #> [32,] 4.441093 4.408096 2.688463 2.690255 2.746708 2.753679 2.762786 0.000000 #> [33,] 4.408096 4.441093 2.683974 2.685762 2.742122 2.749080 2.758172 0.000000 #> [34,] 2.688463 2.683974 4.441093 4.412529 4.321838 4.310898 4.296688 3.349573 #> [35,] 2.690255 2.685762 4.412529 4.441093 4.324718 4.313770 4.299551 3.351805 #> [36,] 2.746708 2.742122 4.321838 4.324718 4.441093 4.404292 4.389775 3.422141 #> [37,] 2.753679 2.749080 4.310898 4.313770 4.404292 4.441093 4.400915 3.430825 #> [38,] 2.762786 2.758172 4.296688 4.299551 4.389775 4.400915 4.441093 3.442172 #> [39,] 0.000000 0.000000 3.349573 3.351805 3.422141 3.430825 3.442172 4.441093 #> [40,] 0.000000 0.000000 3.348840 3.351072 3.421392 3.430075 3.441418 4.414503 #> [41,] 0.000000 0.000000 3.319002 3.321214 3.390908 3.399513 3.410756 4.375170 #> [42,] 0.000000 0.000000 3.308258 3.310462 3.379930 3.388508 3.399714 4.361007 #> [43,] 0.000000 0.000000 3.305658 3.307861 3.377274 3.385845 3.397043 4.357580 #> [44,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [45,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>          [,40]    [,41]    [,42]    [,43]    [,44]    [,45] #>  [1,] 0.000000 0.000000 0.000000 0.000000 3.085052 0.000000 #>  [2,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [3,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [4,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [5,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [6,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [7,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [8,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #>  [9,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [10,] 0.000000 0.000000 0.000000 0.000000 3.546251 0.000000 #> [11,] 0.000000 0.000000 0.000000 0.000000 3.703510 0.000000 #> [12,] 0.000000 0.000000 0.000000 0.000000 4.413905 0.000000 #> [13,] 0.000000 0.000000 0.000000 0.000000 4.404399 0.000000 #> [14,] 0.000000 0.000000 0.000000 0.000000 4.398991 0.000000 #> [15,] 0.000000 0.000000 0.000000 0.000000 4.391820 0.000000 #> [16,] 0.000000 0.000000 0.000000 0.000000 4.300244 0.000000 #> [17,] 0.000000 0.000000 0.000000 0.000000 0.000000 2.934964 #> [18,] 0.000000 0.000000 0.000000 0.000000 0.000000 2.936565 #> [19,] 0.000000 0.000000 0.000000 0.000000 0.000000 2.945844 #> [20,] 0.000000 0.000000 0.000000 0.000000 0.000000 2.956125 #> [21,] 0.000000 0.000000 0.000000 0.000000 0.000000 2.954376 #> [22,] 0.000000 0.000000 0.000000 0.000000 0.000000 2.985768 #> [23,] 0.000000 0.000000 0.000000 0.000000 0.000000 3.018792 #> [24,] 0.000000 0.000000 0.000000 0.000000 0.000000 3.225595 #> [25,] 0.000000 0.000000 0.000000 0.000000 0.000000 3.285782 #> [26,] 0.000000 0.000000 0.000000 0.000000 0.000000 3.286820 #> [27,] 0.000000 0.000000 0.000000 0.000000 0.000000 3.307138 #> [28,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [29,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [30,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [31,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [32,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [33,] 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 #> [34,] 3.348840 3.319002 3.308258 3.305658 0.000000 0.000000 #> [35,] 3.351072 3.321214 3.310462 3.307861 0.000000 0.000000 #> [36,] 3.421392 3.390908 3.379930 3.377274 0.000000 0.000000 #> [37,] 3.430075 3.399513 3.388508 3.385845 0.000000 0.000000 #> [38,] 3.441418 3.410756 3.399714 3.397043 0.000000 0.000000 #> [39,] 4.414503 4.375170 4.361007 4.357580 0.000000 0.000000 #> [40,] 4.441093 4.376128 4.361961 4.358533 0.000000 0.000000 #> [41,] 4.376128 4.441093 4.401176 4.397717 0.000000 0.000000 #> [42,] 4.361961 4.401176 4.441093 4.411999 0.000000 0.000000 #> [43,] 4.358533 4.397717 4.411999 4.441093 0.000000 0.000000 #> [44,] 0.000000 0.000000 0.000000 0.000000 4.441093 0.000000 #> [45,] 0.000000 0.000000 0.000000 0.000000 0.000000 4.441093 covmatrix(ssn_mod, \"CapeHorn\") #>            [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8] #>   [1,] 2.165766 4.404367 4.407973 4.411838 4.413320 4.403486 4.389398 4.388501 #>   [2,] 2.165784 4.404404 4.408011 4.411875 4.413357 4.403448 4.389361 4.388463 #>   [3,] 2.165802 4.404442 4.408049 4.411913 4.413395 4.403411 4.389323 4.388426 #>   [4,] 2.165821 4.404479 4.408086 4.411950 4.413433 4.403373 4.389286 4.388389 #>   [5,] 2.165839 4.404517 4.408124 4.411988 4.413470 4.403336 4.389248 4.388351 #>   [6,] 2.165858 4.404554 4.408161 4.412025 4.413508 4.403299 4.389211 4.388314 #>   [7,] 2.165876 4.404592 4.408199 4.412063 4.413545 4.403261 4.389174 4.388277 #>   [8,] 2.165895 4.404629 4.408236 4.412101 4.413583 4.403224 4.389136 4.388239 #>   [9,] 2.165913 4.404667 4.408274 4.412138 4.413620 4.403186 4.389099 4.388202 #>  [10,] 2.165931 4.404704 4.408311 4.412176 4.413658 4.403149 4.389062 4.388164 #>  [11,] 2.165950 4.404742 4.408349 4.412213 4.413696 4.403111 4.389024 4.388127 #>  [12,] 2.165968 4.404779 4.408386 4.412251 4.413733 4.403074 4.388987 4.388090 #>  [13,] 2.165987 4.404817 4.408424 4.412288 4.413771 4.403036 4.388949 4.388052 #>  [14,] 2.166005 4.404854 4.408461 4.412326 4.413808 4.402999 4.388912 4.388015 #>  [15,] 2.166024 4.404892 4.408499 4.412363 4.413846 4.402961 4.388875 4.387978 #>  [16,] 2.166042 4.404929 4.408536 4.412401 4.413883 4.402924 4.388837 4.387940 #>  [17,] 2.166061 4.404967 4.408574 4.412439 4.413921 4.402886 4.388800 4.387903 #>  [18,] 2.166079 4.405004 4.408611 4.412476 4.413959 4.402849 4.388763 4.387866 #>  [19,] 2.166097 4.405042 4.408649 4.412514 4.413996 4.402811 4.388725 4.387828 #>  [20,] 2.166116 4.405079 4.408687 4.412551 4.414034 4.402774 4.388688 4.387791 #>  [21,] 2.166134 4.405117 4.408724 4.412589 4.414071 4.402736 4.388651 4.387753 #>  [22,] 2.166153 4.405154 4.408762 4.412626 4.414109 4.402699 4.388613 4.387716 #>  [23,] 2.166171 4.405192 4.408799 4.412664 4.414147 4.402661 4.388576 4.387679 #>  [24,] 2.166190 4.405229 4.408837 4.412702 4.414184 4.402624 4.388538 4.387641 #>  [25,] 2.166208 4.405267 4.408874 4.412739 4.414222 4.402586 4.388501 4.387604 #>  [26,] 2.166227 4.405304 4.408912 4.412777 4.414259 4.402549 4.388464 4.387567 #>  [27,] 2.166245 4.405342 4.408949 4.412814 4.414297 4.402511 4.388426 4.387529 #>  [28,] 2.166263 4.405379 4.408987 4.412852 4.414334 4.402474 4.388389 4.387492 #>  [29,] 2.166282 4.405417 4.409024 4.412889 4.414372 4.402436 4.388352 4.387455 #>  [30,] 2.166300 4.405454 4.409062 4.412927 4.414410 4.402399 4.388314 4.387417 #>  [31,] 2.166319 4.405492 4.409099 4.412965 4.414447 4.402361 4.388277 4.387380 #>  [32,] 2.166337 4.405529 4.409137 4.413002 4.414485 4.402324 4.388240 4.387343 #>  [33,] 2.166356 4.405567 4.409175 4.413040 4.414522 4.402286 4.388202 4.387305 #>  [34,] 2.166374 4.405604 4.409212 4.413077 4.414560 4.402249 4.388165 4.387268 #>  [35,] 2.166393 4.405642 4.409250 4.413115 4.414598 4.402211 4.388127 4.387231 #>  [36,] 2.166411 4.405679 4.409287 4.413152 4.414635 4.402174 4.388090 4.387193 #>  [37,] 2.166429 4.405717 4.409325 4.413190 4.414673 4.402136 4.388053 4.387156 #>  [38,] 2.166448 4.405755 4.409362 4.413228 4.414710 4.402099 4.388015 4.387118 #>  [39,] 2.166466 4.405792 4.409400 4.413265 4.414748 4.402062 4.387978 4.387081 #>  [40,] 2.166485 4.405830 4.409437 4.413303 4.414785 4.402024 4.387941 4.387044 #>  [41,] 2.166503 4.405867 4.409475 4.413340 4.414823 4.401987 4.387903 4.387006 #>  [42,] 2.166522 4.405905 4.409512 4.413378 4.414861 4.401949 4.387866 4.386969 #>  [43,] 2.166540 4.405942 4.409550 4.413415 4.414898 4.401912 4.387829 4.386932 #>  [44,] 2.166559 4.405980 4.409588 4.413453 4.414936 4.401874 4.387791 4.386894 #>  [45,] 2.166577 4.406017 4.409625 4.413491 4.414973 4.401837 4.387754 4.386857 #>  [46,] 2.166595 4.406055 4.409663 4.413528 4.415011 4.401799 4.387717 4.386820 #>  [47,] 2.166614 4.406092 4.409700 4.413566 4.415049 4.401762 4.387679 4.386782 #>  [48,] 2.166632 4.406130 4.409738 4.413603 4.415086 4.401724 4.387642 4.386745 #>  [49,] 2.166651 4.406167 4.409775 4.413641 4.415124 4.401687 4.387604 4.386708 #>  [50,] 2.166669 4.406205 4.409813 4.413679 4.415161 4.401649 4.387567 4.386670 #>  [51,] 2.166688 4.406242 4.409850 4.413716 4.415199 4.401612 4.387530 4.386633 #>  [52,] 2.166706 4.406280 4.409888 4.413754 4.415237 4.401574 4.387492 4.386596 #>  [53,] 2.166725 4.406317 4.409925 4.413791 4.415274 4.401537 4.387455 4.386558 #>  [54,] 2.166743 4.406355 4.409963 4.413829 4.415312 4.401499 4.387418 4.386521 #>  [55,] 2.166761 4.406392 4.410001 4.413866 4.415349 4.401462 4.387380 4.386484 #>  [56,] 2.166780 4.406430 4.410038 4.413904 4.415387 4.401424 4.387343 4.386446 #>  [57,] 2.166798 4.406467 4.410076 4.413942 4.415425 4.401387 4.387306 4.386409 #>  [58,] 2.166817 4.406505 4.410113 4.413979 4.415462 4.401349 4.387268 4.386371 #>  [59,] 2.166835 4.406542 4.410151 4.414017 4.415439 4.401312 4.387231 4.386334 #>  [60,] 2.166854 4.406580 4.410188 4.414054 4.415401 4.401275 4.387194 4.386297 #>  [61,] 2.166872 4.406617 4.410226 4.414092 4.415364 4.401237 4.387156 4.386259 #>  [62,] 2.166891 4.406655 4.410263 4.414129 4.415326 4.401200 4.387119 4.386222 #>  [63,] 2.166909 4.406692 4.410301 4.414167 4.415289 4.401162 4.387082 4.386185 #>  [64,] 2.166927 4.406730 4.410338 4.414205 4.415251 4.401125 4.387044 4.386147 #>  [65,] 2.166946 4.406767 4.410376 4.414242 4.415213 4.401087 4.387007 4.386110 #>  [66,] 2.166964 4.406805 4.410414 4.414280 4.415176 4.401050 4.386969 4.386073 #>  [67,] 2.166983 4.406842 4.410451 4.414317 4.415138 4.401012 4.386932 4.386035 #>  [68,] 2.167001 4.406880 4.410489 4.414355 4.415101 4.400975 4.386895 4.385998 #>  [69,] 2.167020 4.406917 4.410526 4.414393 4.415063 4.400937 4.386857 4.385961 #>  [70,] 2.167038 4.406955 4.410564 4.414430 4.415026 4.400900 4.386820 4.385923 #>  [71,] 2.167057 4.406993 4.410601 4.414468 4.414988 4.400862 4.386783 4.385886 #>  [72,] 2.167075 4.407030 4.410639 4.414505 4.414950 4.400825 4.386745 4.385849 #>  [73,] 2.167094 4.407068 4.410676 4.414543 4.414913 4.400787 4.386708 4.385811 #>  [74,] 2.167112 4.407105 4.410714 4.414580 4.414875 4.400750 4.386671 4.385774 #>  [75,] 2.167130 4.407143 4.410752 4.414618 4.414838 4.400712 4.386633 4.385737 #>  [76,] 2.167149 4.407180 4.410789 4.414656 4.414800 4.400675 4.386596 4.385699 #>  [77,] 2.167167 4.407218 4.410827 4.414693 4.414762 4.400638 4.386559 4.385662 #>  [78,] 2.167186 4.407255 4.410864 4.414731 4.414725 4.400600 4.386521 4.385625 #>  [79,] 2.167204 4.407293 4.410902 4.414768 4.414687 4.400563 4.386484 4.385587 #>  [80,] 2.167223 4.407330 4.410939 4.414806 4.414650 4.400525 4.386447 4.385550 #>  [81,] 2.167241 4.407368 4.410977 4.414844 4.414612 4.400488 4.386409 4.385513 #>  [82,] 2.167260 4.407405 4.411014 4.414881 4.414574 4.400450 4.386372 4.385475 #>  [83,] 2.167278 4.407443 4.411052 4.414919 4.414537 4.400413 4.386335 4.385438 #>  [84,] 2.167297 4.407480 4.411089 4.414956 4.414499 4.400375 4.386297 4.385401 #>  [85,] 2.167315 4.407518 4.411127 4.414994 4.414462 4.400338 4.386260 4.385363 #>  [86,] 2.167333 4.407555 4.411165 4.415032 4.414424 4.400300 4.386223 4.385326 #>  [87,] 2.167352 4.407593 4.411202 4.415069 4.414387 4.400263 4.386185 4.385289 #>  [88,] 2.167370 4.407630 4.411240 4.415107 4.414349 4.400225 4.386148 4.385251 #>  [89,] 2.167389 4.407668 4.411277 4.415144 4.414311 4.400188 4.386110 4.385214 #>  [90,] 2.167407 4.407705 4.411315 4.415182 4.414274 4.400151 4.386073 4.385177 #>  [91,] 2.167426 4.407743 4.411352 4.415219 4.414236 4.400113 4.386036 4.385139 #>  [92,] 2.167444 4.407781 4.411390 4.415257 4.414199 4.400076 4.385998 4.385102 #>  [93,] 2.167463 4.407818 4.411428 4.415295 4.414161 4.400038 4.385961 4.385065 #>  [94,] 2.167481 4.407856 4.411465 4.415332 4.414123 4.400001 4.385924 4.385027 #>  [95,] 2.167499 4.407893 4.411503 4.415370 4.414086 4.399963 4.385886 4.384990 #>  [96,] 2.167518 4.407931 4.411540 4.415407 4.414048 4.399926 4.385849 4.384953 #>  [97,] 2.167536 4.407968 4.411578 4.415445 4.414011 4.399888 4.385812 4.384915 #>  [98,] 2.167555 4.408006 4.411615 4.415456 4.413973 4.399851 4.385774 4.384878 #>  [99,] 2.167573 4.408043 4.411653 4.415418 4.413936 4.399813 4.385737 4.384841 #> [100,] 2.167592 4.408081 4.411690 4.415381 4.413898 4.399776 4.385700 4.384803 #> [101,] 2.167610 4.408118 4.411728 4.415343 4.413860 4.399738 4.385662 4.384766 #> [102,] 2.167629 4.408156 4.411766 4.415306 4.413823 4.399701 4.385625 4.384729 #> [103,] 2.167647 4.408193 4.411803 4.415268 4.413785 4.399664 4.385588 4.384691 #> [104,] 2.167666 4.408231 4.411841 4.415231 4.413748 4.399626 4.385550 4.384654 #> [105,] 2.167684 4.408268 4.411878 4.415193 4.413710 4.399589 4.385513 4.384617 #> [106,] 2.167702 4.408306 4.411916 4.415155 4.413672 4.399551 4.385476 4.384579 #> [107,] 2.167721 4.408343 4.411953 4.415118 4.413635 4.399514 4.385438 4.384542 #> [108,] 2.167739 4.408381 4.411991 4.415080 4.413597 4.399476 4.385401 4.384505 #> [109,] 2.167758 4.408419 4.412028 4.415043 4.413560 4.399439 4.385364 4.384467 #> [110,] 2.167776 4.408456 4.412066 4.415005 4.413522 4.399401 4.385326 4.384430 #> [111,] 2.167795 4.408494 4.412104 4.414967 4.413485 4.399364 4.385289 4.384393 #> [112,] 2.167813 4.408531 4.412141 4.414930 4.413447 4.399326 4.385252 4.384355 #> [113,] 2.167832 4.408569 4.412179 4.414892 4.413409 4.399289 4.385214 4.384318 #> [114,] 2.167850 4.408606 4.412216 4.414855 4.413372 4.399251 4.385177 4.384281 #> [115,] 2.167869 4.408644 4.412254 4.414817 4.413334 4.399214 4.385140 4.384243 #> [116,] 2.167887 4.408681 4.412291 4.414779 4.413297 4.399177 4.385102 4.384206 #> [117,] 2.167906 4.408719 4.412329 4.414742 4.413259 4.399139 4.385065 4.384169 #> [118,] 2.167924 4.408756 4.412367 4.414704 4.413222 4.399102 4.385028 4.384131 #> [119,] 2.167942 4.408794 4.412404 4.414667 4.413184 4.399064 4.384990 4.384094 #> [120,] 2.167961 4.408831 4.412442 4.414629 4.413146 4.399027 4.384953 4.384057 #> [121,] 2.167979 4.408869 4.412479 4.414592 4.413109 4.398989 4.384916 4.384019 #> [122,] 2.167998 4.408907 4.412517 4.414554 4.413071 4.398952 4.384878 4.383982 #> [123,] 2.168016 4.408944 4.412554 4.414516 4.413034 4.398914 4.384841 4.383945 #> [124,] 2.168035 4.408982 4.412592 4.414479 4.412996 4.398877 4.384804 4.383907 #> [125,] 2.168053 4.409019 4.412630 4.414441 4.412959 4.398840 4.384766 4.383870 #> [126,] 2.168072 4.409057 4.412667 4.414404 4.412921 4.398802 4.384729 4.383833 #> [127,] 2.168090 4.409094 4.412705 4.414366 4.412883 4.398765 4.384692 4.383795 #> [128,] 2.168109 4.409132 4.412742 4.414328 4.412846 4.398727 4.384654 4.383758 #> [129,] 2.168127 4.409169 4.412780 4.414291 4.412808 4.398690 4.384617 4.383721 #> [130,] 2.168145 4.409207 4.412817 4.414253 4.412771 4.398652 4.384580 4.383683 #> [131,] 2.168164 4.409244 4.412855 4.414216 4.412733 4.398615 4.384542 4.383646 #> [132,] 2.168182 4.409282 4.412893 4.414178 4.412696 4.398577 4.384505 4.383609 #> [133,] 2.168201 4.409319 4.412930 4.414141 4.412658 4.398540 4.384468 4.383571 #> [134,] 2.168219 4.409357 4.412968 4.414103 4.412620 4.398502 4.384430 4.383534 #> [135,] 2.168238 4.409395 4.413005 4.414065 4.412583 4.398465 4.384393 4.383497 #> [136,] 2.168256 4.409432 4.413043 4.414028 4.412545 4.398428 4.384356 4.383460 #> [137,] 2.168275 4.409470 4.413080 4.413990 4.412508 4.398390 4.384318 4.383422 #> [138,] 2.168293 4.409507 4.413118 4.413953 4.412470 4.398353 4.384281 4.383385 #> [139,] 2.168312 4.409545 4.413156 4.413915 4.412433 4.398315 4.384244 4.383348 #> [140,] 2.168330 4.409582 4.413193 4.413877 4.412395 4.398278 4.384206 4.383310 #> [141,] 2.168349 4.409620 4.413231 4.413840 4.412357 4.398240 4.384169 4.383273 #> [142,] 2.168367 4.409657 4.413268 4.413802 4.412320 4.398203 4.384132 4.383236 #> [143,] 2.168385 4.409695 4.413306 4.413765 4.412282 4.398165 4.384094 4.383198 #> [144,] 2.168404 4.409732 4.413343 4.413727 4.412245 4.398128 4.384057 4.383161 #> [145,] 2.168422 4.409770 4.413381 4.413690 4.412207 4.398091 4.384020 4.383124 #> [146,] 2.168441 4.409808 4.413419 4.413652 4.412170 4.398053 4.383982 4.383086 #> [147,] 2.168459 4.409845 4.413456 4.413614 4.412132 4.398016 4.383945 4.383049 #> [148,] 2.168478 4.409883 4.413494 4.413577 4.412095 4.397978 4.383908 4.383012 #> [149,] 2.168496 4.409920 4.413531 4.413539 4.412057 4.397941 4.383870 4.382974 #> [150,] 2.168515 4.409958 4.413569 4.413502 4.412019 4.397903 4.383833 4.382937 #> [151,] 2.168533 4.409995 4.413606 4.413464 4.411982 4.397866 4.383796 4.382900 #> [152,] 2.168552 4.410033 4.413644 4.413427 4.411944 4.397828 4.383758 4.382862 #> [153,] 2.168570 4.410070 4.413682 4.413389 4.411907 4.397791 4.383721 4.382825 #> [154,] 2.168589 4.410108 4.413719 4.413351 4.411869 4.397754 4.383684 4.382788 #> [155,] 2.168607 4.410145 4.413757 4.413314 4.411832 4.397716 4.383647 4.382750 #> [156,] 2.168625 4.410183 4.413794 4.413276 4.411794 4.397679 4.383609 4.382713 #> [157,] 2.168644 4.410221 4.413832 4.413239 4.411756 4.397641 4.383572 4.382676 #> [158,] 2.168662 4.410258 4.413870 4.413201 4.411719 4.397604 4.383535 4.382639 #> [159,] 2.168681 4.410296 4.413907 4.413164 4.411681 4.397566 4.383497 4.382601 #> [160,] 2.168699 4.410333 4.413945 4.413126 4.411644 4.397529 4.383460 4.382564 #> [161,] 2.168718 4.410371 4.413982 4.413088 4.411606 4.397491 4.383423 4.382527 #> [162,] 2.168736 4.410408 4.414020 4.413051 4.411569 4.397454 4.383385 4.382489 #> [163,] 2.168755 4.410446 4.414057 4.413013 4.411531 4.397417 4.383348 4.382452 #> [164,] 2.168773 4.410483 4.414095 4.412976 4.411494 4.397379 4.383311 4.382415 #> [165,] 2.168792 4.410521 4.414133 4.412938 4.411456 4.397342 4.383273 4.382377 #> [166,] 2.168810 4.410558 4.414170 4.412900 4.411418 4.397304 4.383236 4.382340 #> [167,] 2.168829 4.410596 4.414208 4.412863 4.411381 4.397267 4.383199 4.382303 #> [168,] 2.168847 4.410634 4.414245 4.412825 4.411343 4.397229 4.383161 4.382265 #> [169,] 2.168866 4.410671 4.414283 4.412788 4.411306 4.397192 4.383124 4.382228 #> [170,] 2.168884 4.410709 4.414320 4.412750 4.411268 4.397155 4.383087 4.382191 #> [171,] 2.168902 4.410746 4.414358 4.412713 4.411231 4.397117 4.383049 4.382153 #> [172,] 2.168921 4.410784 4.414396 4.412675 4.411193 4.397080 4.383012 4.382116 #> [173,] 2.168939 4.410821 4.414433 4.412638 4.411155 4.397042 4.382975 4.382079 #> [174,] 2.168958 4.410859 4.414471 4.412600 4.411118 4.397005 4.382937 4.382042 #> [175,] 2.168976 4.410896 4.414508 4.412562 4.411080 4.396967 4.382900 4.382004 #> [176,] 2.168995 4.410934 4.414546 4.412525 4.411043 4.396930 4.382863 4.381967 #> [177,] 2.169013 4.410972 4.414584 4.412487 4.411005 4.396892 4.382825 4.381930 #> [178,] 2.169032 4.411009 4.414621 4.412450 4.410968 4.396855 4.382788 4.381892 #> [179,] 2.169050 4.411047 4.414659 4.412412 4.410930 4.396818 4.382751 4.381855 #> [180,] 2.169069 4.411084 4.414696 4.412375 4.410893 4.396780 4.382714 4.381818 #> [181,] 2.169087 4.411122 4.414734 4.412337 4.410855 4.396743 4.382676 4.381780 #> [182,] 2.169106 4.411159 4.414772 4.412299 4.410818 4.396705 4.382639 4.381743 #> [183,] 2.169124 4.411197 4.414809 4.412262 4.410780 4.396668 4.382602 4.381706 #> [184,] 2.169143 4.411234 4.414847 4.412224 4.410742 4.396630 4.382564 4.381668 #> [185,] 2.169161 4.411272 4.414884 4.412187 4.410705 4.396593 4.382527 4.381631 #> [186,] 2.169179 4.411310 4.414922 4.412149 4.410667 4.396556 4.382490 4.381594 #> [187,] 2.169198 4.411347 4.414959 4.412112 4.410630 4.396518 4.382452 4.381557 #> [188,] 2.169216 4.411385 4.414997 4.412074 4.410592 4.396481 4.382415 4.381519 #> [189,] 2.169235 4.411422 4.415035 4.412036 4.410555 4.396443 4.382378 4.381482 #> [190,] 2.169253 4.411460 4.415072 4.411999 4.410517 4.396406 4.382340 4.381445 #> [191,] 2.169272 4.411497 4.415110 4.411961 4.410480 4.396368 4.382303 4.381407 #> [192,] 2.169290 4.411535 4.415147 4.411924 4.410442 4.396331 4.382266 4.381370 #> [193,] 2.169309 4.411572 4.415185 4.411886 4.410404 4.396294 4.382228 4.381333 #> [194,] 2.169327 4.411610 4.415223 4.411849 4.410367 4.396256 4.382191 4.381295 #> [195,] 2.169346 4.411648 4.415260 4.411811 4.410329 4.396219 4.382154 4.381258 #> [196,] 2.169364 4.411685 4.415298 4.411774 4.410292 4.396181 4.382117 4.381221 #> [197,] 2.169383 4.411723 4.415335 4.411736 4.410254 4.396144 4.382079 4.381184 #> [198,] 2.169401 4.411760 4.415373 4.411698 4.410217 4.396106 4.382042 4.381146 #> [199,] 2.169420 4.411798 4.415411 4.411661 4.410179 4.396069 4.382005 4.381109 #> [200,] 2.169438 4.411835 4.415448 4.411623 4.410142 4.396032 4.381967 4.381072 #> [201,] 2.169456 4.411873 4.415453 4.411586 4.410104 4.395994 4.381930 4.381034 #> [202,] 2.169475 4.411911 4.415415 4.411548 4.410066 4.395957 4.381893 4.380997 #> [203,] 2.169493 4.411948 4.415378 4.411511 4.410029 4.395919 4.381855 4.380960 #> [204,] 2.169512 4.411986 4.415340 4.411473 4.409991 4.395882 4.381818 4.380922 #> [205,] 2.169530 4.412023 4.415303 4.411435 4.409954 4.395844 4.381781 4.380885 #> [206,] 2.169549 4.412061 4.415265 4.411398 4.409916 4.395807 4.381743 4.380848 #> [207,] 2.169567 4.412098 4.415227 4.411360 4.409879 4.395770 4.381706 4.380811 #> [208,] 2.169586 4.412136 4.415190 4.411323 4.409841 4.395732 4.381669 4.380773 #> [209,] 2.169604 4.412173 4.415152 4.411285 4.409804 4.395695 4.381632 4.380736 #> [210,] 2.169623 4.412211 4.415115 4.411248 4.409766 4.395657 4.381594 4.380699 #> [211,] 2.169641 4.412249 4.415077 4.411210 4.409729 4.395620 4.381557 4.380661 #> [212,] 2.169660 4.412286 4.415039 4.411173 4.409691 4.395582 4.381520 4.380624 #> [213,] 2.169678 4.412324 4.415002 4.411135 4.409653 4.395545 4.381482 4.380587 #> [214,] 2.169697 4.412361 4.414964 4.411097 4.409616 4.395508 4.381445 4.380549 #> [215,] 2.169715 4.412399 4.414927 4.411060 4.409578 4.395470 4.381408 4.380512 #> [216,] 2.169734 4.412436 4.414889 4.411022 4.409541 4.395433 4.381370 4.380475 #> [217,] 2.169752 4.412474 4.414852 4.410985 4.409503 4.395395 4.381333 4.380438 #> [218,] 2.169771 4.412512 4.414814 4.410947 4.409466 4.395358 4.381296 4.380400 #> [219,] 2.169789 4.412549 4.414776 4.410910 4.409428 4.395320 4.381259 4.380363 #> [220,] 2.169807 4.412587 4.414739 4.410872 4.409391 4.395283 4.381221 4.380326 #> [221,] 2.169826 4.412624 4.414701 4.410835 4.409353 4.395246 4.381184 4.380288 #> [222,] 2.169844 4.412662 4.414664 4.410797 4.409316 4.395208 4.381147 4.380251 #> [223,] 2.169863 4.412699 4.414626 4.410759 4.409278 4.395171 4.381109 4.380214 #> [224,] 2.169881 4.412737 4.414588 4.410722 4.409241 4.395133 4.381072 4.380177 #> [225,] 2.169900 4.412775 4.414551 4.410684 4.409203 4.395096 4.381035 4.380139 #> [226,] 2.169918 4.412812 4.414513 4.410647 4.409165 4.395059 4.380997 4.380102 #> [227,] 2.169937 4.412850 4.414476 4.410609 4.409128 4.395021 4.380960 4.380065 #> [228,] 2.169955 4.412887 4.414438 4.410572 4.409090 4.394984 4.380923 4.380027 #> [229,] 2.169974 4.412925 4.414401 4.410534 4.409053 4.394946 4.380886 4.379990 #> [230,] 2.169992 4.412962 4.414363 4.410497 4.409015 4.394909 4.380848 4.379953 #> [231,] 2.170011 4.413000 4.414325 4.410459 4.408978 4.394871 4.380811 4.379915 #> [232,] 2.170029 4.413038 4.414288 4.410421 4.408940 4.394834 4.380774 4.379878 #> [233,] 2.170048 4.413075 4.414250 4.410384 4.408903 4.394797 4.380736 4.379841 #> [234,] 2.170066 4.413113 4.414213 4.410346 4.408865 4.394759 4.380699 4.379804 #> [235,] 2.170085 4.413150 4.414175 4.410309 4.408828 4.394722 4.380662 4.379766 #> [236,] 2.170103 4.413188 4.414137 4.410271 4.408790 4.394684 4.380624 4.379729 #> [237,] 2.170122 4.413225 4.414100 4.410234 4.408753 4.394647 4.380587 4.379692 #> [238,] 2.170140 4.413263 4.414062 4.410196 4.408715 4.394610 4.380550 4.379654 #> [239,] 2.170158 4.413301 4.414025 4.410159 4.408677 4.394572 4.380513 4.379617 #> [240,] 2.170177 4.413338 4.413987 4.410121 4.408640 4.394535 4.380475 4.379580 #> [241,] 2.170195 4.413376 4.413950 4.410084 4.408602 4.394497 4.380438 4.379543 #> [242,] 2.170214 4.413413 4.413912 4.410046 4.408565 4.394460 4.380401 4.379505 #> [243,] 2.170232 4.413451 4.413874 4.410008 4.408527 4.394422 4.380363 4.379468 #> [244,] 2.170251 4.413488 4.413837 4.409971 4.408490 4.394385 4.380326 4.379431 #> [245,] 2.170269 4.413526 4.413799 4.409933 4.408452 4.394348 4.380289 4.379393 #> [246,] 2.170288 4.413564 4.413762 4.409896 4.408415 4.394310 4.380252 4.379356 #> [247,] 2.170306 4.413601 4.413724 4.409858 4.408377 4.394273 4.380214 4.379319 #> [248,] 2.170325 4.413639 4.413686 4.409821 4.408340 4.394235 4.380177 4.379282 #> [249,] 2.170343 4.413676 4.413649 4.409783 4.408302 4.394198 4.380140 4.379244 #> [250,] 2.170362 4.413714 4.413611 4.409746 4.408265 4.394161 4.380102 4.379207 #> [251,] 2.170380 4.413751 4.413574 4.409708 4.408227 4.394123 4.380065 4.379170 #> [252,] 2.170399 4.413789 4.413536 4.409671 4.408190 4.394086 4.380028 4.379132 #> [253,] 2.170417 4.413827 4.413499 4.409633 4.408152 4.394048 4.379990 4.379095 #> [254,] 2.170436 4.413864 4.413461 4.409595 4.408114 4.394011 4.379953 4.379058 #> [255,] 2.170454 4.413902 4.413423 4.409558 4.408077 4.393973 4.379916 4.379021 #> [256,] 2.170473 4.413939 4.413386 4.409520 4.408039 4.393936 4.379879 4.378983 #> [257,] 2.170491 4.413977 4.413348 4.409483 4.408002 4.393899 4.379841 4.378946 #> [258,] 2.170510 4.414015 4.413311 4.409445 4.407964 4.393861 4.379804 4.378909 #> [259,] 2.170528 4.414052 4.413273 4.409408 4.407927 4.393824 4.379767 4.378871 #> [260,] 2.170547 4.414090 4.413236 4.409370 4.407889 4.393786 4.379729 4.378834 #> [261,] 2.170565 4.414127 4.413198 4.409333 4.407852 4.393749 4.379692 4.378797 #> [262,] 2.170584 4.414165 4.413160 4.409295 4.407814 4.393712 4.379655 4.378760 #> [263,] 2.170602 4.414202 4.413123 4.409258 4.407777 4.393674 4.379618 4.378722 #> [264,] 2.170620 4.414240 4.413085 4.409220 4.407739 4.393637 4.379580 4.378685 #> [265,] 2.170639 4.414278 4.413048 4.409183 4.407702 4.393599 4.379543 4.378648 #> [266,] 2.170657 4.414315 4.413010 4.409145 4.407664 4.393562 4.379506 4.378611 #> [267,] 2.170676 4.414353 4.412973 4.409107 4.407627 4.393525 4.379468 4.378573 #> [268,] 2.170694 4.414390 4.412935 4.409070 4.407589 4.393487 4.379431 4.378536 #> [269,] 2.170713 4.414428 4.412897 4.409032 4.407552 4.393450 4.379394 4.378499 #> [270,] 2.170731 4.414466 4.412860 4.408995 4.407514 4.393412 4.379357 4.378461 #> [271,] 2.170750 4.414503 4.412822 4.408957 4.407476 4.393375 4.379319 4.378424 #> [272,] 2.170768 4.414541 4.412785 4.408920 4.407439 4.393338 4.379282 4.378387 #> [273,] 2.170787 4.414578 4.412747 4.408882 4.407401 4.393300 4.379245 4.378350 #> [274,] 2.170805 4.414616 4.412710 4.408845 4.407364 4.393263 4.379207 4.378312 #> [275,] 2.170824 4.414653 4.412672 4.408807 4.407326 4.393225 4.379170 4.378275 #> [276,] 2.170842 4.414691 4.412634 4.408770 4.407289 4.393188 4.379133 4.378238 #> [277,] 2.170861 4.414729 4.412597 4.408732 4.407251 4.393151 4.379096 4.378200 #> [278,] 2.170879 4.414766 4.412559 4.408695 4.407214 4.393113 4.379058 4.378163 #> [279,] 2.170898 4.414804 4.412522 4.408657 4.407176 4.393076 4.379021 4.378126 #> [280,] 2.170916 4.414841 4.412484 4.408619 4.407139 4.393038 4.378984 4.378089 #> [281,] 2.170935 4.414879 4.412447 4.408582 4.407101 4.393001 4.378946 4.378051 #> [282,] 2.170953 4.414917 4.412409 4.408544 4.407064 4.392964 4.378909 4.378014 #> [283,] 2.170972 4.414954 4.412371 4.408507 4.407026 4.392926 4.378872 4.377977 #> [284,] 2.170990 4.414992 4.412334 4.408469 4.406989 4.392889 4.378835 4.377940 #> [285,] 2.171009 4.415029 4.412296 4.408432 4.406951 4.392851 4.378797 4.377902 #> [286,] 2.171027 4.415067 4.412259 4.408394 4.406914 4.392814 4.378760 4.377865 #> [287,] 2.171046 4.415105 4.412221 4.408357 4.406876 4.392777 4.378723 4.377828 #> [288,] 2.171064 4.415142 4.412184 4.408319 4.406839 4.392739 4.378685 4.377790 #> [289,] 2.171083 4.415180 4.412146 4.408282 4.406801 4.392702 4.378648 4.377753 #> [290,] 2.171101 4.415217 4.412108 4.408244 4.406764 4.392664 4.378611 4.377716 #> [291,] 2.171119 4.415255 4.412071 4.408207 4.406726 4.392627 4.378574 4.377679 #> [292,] 2.171138 4.415292 4.412033 4.408169 4.406689 4.392590 4.378536 4.377641 #> [293,] 2.171156 4.415330 4.411996 4.408132 4.406651 4.392552 4.378499 4.377604 #> [294,] 2.171175 4.415368 4.411958 4.408094 4.406614 4.392515 4.378462 4.377567 #> [295,] 2.171193 4.415405 4.411921 4.408056 4.406576 4.392477 4.378425 4.377530 #> [296,] 2.171212 4.415443 4.411883 4.408019 4.406538 4.392440 4.378387 4.377492 #> [297,] 2.171230 4.415458 4.411846 4.407981 4.406501 4.392403 4.378350 4.377455 #> [298,] 2.171249 4.415421 4.411808 4.407944 4.406463 4.392365 4.378313 4.377418 #> [299,] 2.171267 4.415383 4.411770 4.407906 4.406426 4.392328 4.378275 4.377380 #> [300,] 2.171286 4.415345 4.411733 4.407869 4.406388 4.392290 4.378238 4.377343 #> [301,] 2.171304 4.415308 4.411695 4.407831 4.406351 4.392253 4.378201 4.377306 #> [302,] 2.171323 4.415270 4.411658 4.407794 4.406313 4.392216 4.378164 4.377269 #> [303,] 2.171341 4.415233 4.411620 4.407756 4.406276 4.392178 4.378126 4.377231 #> [304,] 2.171360 4.415195 4.411583 4.407719 4.406238 4.392141 4.378089 4.377194 #> [305,] 2.171378 4.415158 4.411545 4.407681 4.406201 4.392103 4.378052 4.377157 #> [306,] 2.171397 4.415120 4.411507 4.407644 4.406163 4.392066 4.378014 4.377120 #> [307,] 2.171415 4.415082 4.411470 4.407606 4.406126 4.392029 4.377977 4.377082 #> [308,] 2.171434 4.415045 4.411432 4.407569 4.406088 4.391991 4.377940 4.377045 #> [309,] 2.160469 4.393596 4.397194 4.401049 4.402527 4.414281 4.400158 4.399259 #> [310,] 2.160488 4.393634 4.397232 4.401086 4.402565 4.414243 4.400121 4.399221 #> [311,] 2.160506 4.393671 4.397269 4.401124 4.402602 4.414206 4.400083 4.399184 #> [312,] 2.160524 4.393709 4.397306 4.401161 4.402640 4.414168 4.400046 4.399146 #> [313,] 2.160543 4.393746 4.397344 4.401199 4.402677 4.414130 4.400008 4.399109 #> [314,] 2.160561 4.393783 4.397381 4.401236 4.402715 4.414093 4.399971 4.399071 #> [315,] 2.160580 4.393821 4.397419 4.401274 4.402752 4.414055 4.399933 4.399034 #> [316,] 2.160598 4.393858 4.397456 4.401311 4.402790 4.414018 4.399896 4.398997 #> [317,] 2.160616 4.393896 4.397494 4.401349 4.402827 4.413980 4.399858 4.398959 #> [318,] 2.160635 4.393933 4.397531 4.401386 4.402865 4.413942 4.399821 4.398922 #> [319,] 2.160653 4.393970 4.397569 4.401424 4.402902 4.413905 4.399784 4.398884 #> [320,] 2.160672 4.394008 4.397606 4.401461 4.402940 4.413867 4.399746 4.398847 #> [321,] 2.160690 4.394045 4.397643 4.401498 4.402977 4.413830 4.399709 4.398809 #> [322,] 2.159523 4.391672 4.395268 4.399121 4.400599 4.414724 4.402086 4.401186 #> [323,] 2.159541 4.391709 4.395306 4.399159 4.400637 4.414762 4.402049 4.401149 #> [324,] 2.159560 4.391747 4.395343 4.399196 4.400674 4.414799 4.402011 4.401111 #> [325,] 2.159578 4.391784 4.395381 4.399234 4.400712 4.414837 4.401974 4.401074 #> [326,] 2.159597 4.391822 4.395418 4.399271 4.400749 4.414874 4.401936 4.401036 #> [327,] 2.159615 4.391859 4.395455 4.399309 4.400787 4.414912 4.401899 4.400999 #> [328,] 2.159633 4.391896 4.395493 4.399346 4.400824 4.414949 4.401861 4.400962 #> [329,] 2.159652 4.391934 4.395530 4.399383 4.400861 4.414987 4.401824 4.400924 #> [330,] 2.159670 4.391971 4.395568 4.399421 4.400899 4.415025 4.401786 4.400887 #> [331,] 2.159689 4.392009 4.395605 4.399458 4.400936 4.415062 4.401749 4.400849 #> [332,] 2.159707 4.392046 4.395642 4.399496 4.400974 4.415100 4.401711 4.400812 #> [333,] 2.159725 4.392083 4.395680 4.399533 4.401011 4.415137 4.401674 4.400774 #> [334,] 2.159744 4.392121 4.395717 4.399571 4.401049 4.415175 4.401636 4.400737 #> [335,] 2.159762 4.392158 4.395755 4.399608 4.401086 4.415213 4.401599 4.400699 #> [336,] 2.159780 4.392196 4.395792 4.399646 4.401124 4.415250 4.401561 4.400662 #> [337,] 2.159799 4.392233 4.395830 4.399683 4.401161 4.415288 4.401524 4.400624 #> [338,] 2.159817 4.392270 4.395867 4.399721 4.401199 4.415325 4.401487 4.400587 #> [339,] 2.159836 4.392308 4.395904 4.399758 4.401236 4.415363 4.401449 4.400549 #> [340,] 2.159854 4.392345 4.395942 4.399795 4.401274 4.415401 4.401412 4.400512 #> [341,] 2.159872 4.392383 4.395979 4.399833 4.401311 4.415438 4.401374 4.400474 #> [342,] 2.159891 4.392420 4.396017 4.399870 4.401349 4.415463 4.401337 4.400437 #> [343,] 2.159909 4.392457 4.396054 4.399908 4.401386 4.415425 4.401299 4.400400 #> [344,] 2.159928 4.392495 4.396092 4.399945 4.401424 4.415388 4.401262 4.400362 #> [345,] 2.159946 4.392532 4.396129 4.399983 4.401461 4.415350 4.401224 4.400325 #> [346,] 2.159964 4.392569 4.396166 4.400020 4.401498 4.415313 4.401187 4.400287 #> [347,] 2.159983 4.392607 4.396204 4.400058 4.401536 4.415275 4.401149 4.400250 #> [348,] 2.160001 4.392644 4.396241 4.400095 4.401573 4.415237 4.401112 4.400212 #> [349,] 2.160020 4.392682 4.396279 4.400133 4.401611 4.415200 4.401074 4.400175 #> [350,] 2.160038 4.392719 4.396316 4.400170 4.401648 4.415162 4.401037 4.400137 #> [351,] 2.160056 4.392756 4.396354 4.400208 4.401686 4.415125 4.400999 4.400100 #> [352,] 2.160075 4.392794 4.396391 4.400245 4.401723 4.415087 4.400962 4.400062 #> [353,] 2.160093 4.392831 4.396428 4.400282 4.401761 4.415049 4.400924 4.400025 #> [354,] 2.160111 4.392869 4.396466 4.400320 4.401798 4.415012 4.400887 4.399987 #> [355,] 2.160130 4.392906 4.396503 4.400357 4.401836 4.414974 4.400850 4.399950 #> [356,] 2.160148 4.392943 4.396541 4.400395 4.401873 4.414937 4.400812 4.399912 #> [357,] 2.160167 4.392981 4.396578 4.400432 4.401911 4.414899 4.400775 4.399875 #> [358,] 2.160185 4.393018 4.396616 4.400470 4.401948 4.414862 4.400737 4.399838 #> [359,] 2.160203 4.393056 4.396653 4.400507 4.401986 4.414824 4.400700 4.399800 #> [360,] 2.160222 4.393093 4.396690 4.400545 4.402023 4.414786 4.400662 4.399763 #> [361,] 2.151164 4.374672 4.378254 4.382092 4.383564 4.397634 4.411749 4.412651 #> [362,] 2.151182 4.374709 4.378291 4.382129 4.383602 4.397672 4.411787 4.412688 #> [363,] 2.151200 4.374746 4.378329 4.382167 4.383639 4.397709 4.411824 4.412726 #> [364,] 2.151218 4.374784 4.378366 4.382204 4.383676 4.397747 4.411862 4.412764 #> [365,] 2.151237 4.374821 4.378403 4.382241 4.383714 4.397784 4.411899 4.412801 #> [366,] 2.151255 4.374858 4.378440 4.382279 4.383751 4.397822 4.411937 4.412839 #> [367,] 2.151273 4.374895 4.378478 4.382316 4.383788 4.397859 4.411974 4.412876 #> [368,] 2.151292 4.374933 4.378515 4.382353 4.383826 4.397897 4.412012 4.412914 #> [369,] 2.151310 4.374970 4.378552 4.382391 4.383863 4.397934 4.412049 4.412951 #> [370,] 2.151328 4.375007 4.378590 4.382428 4.383900 4.397971 4.412087 4.412989 #> [371,] 2.151347 4.375044 4.378627 4.382465 4.383938 4.398009 4.412125 4.413027 #> [372,] 2.151365 4.375082 4.378664 4.382503 4.383975 4.398046 4.412162 4.413064 #> [373,] 2.151383 4.375119 4.378701 4.382540 4.384012 4.398084 4.412200 4.413102 #> [374,] 2.151402 4.375156 4.378739 4.382577 4.384050 4.398121 4.412237 4.413139 #> [375,] 2.152629 4.377652 4.381237 4.385078 4.386551 4.400631 4.414755 4.415281 #> [376,] 2.152648 4.377690 4.381275 4.385115 4.386589 4.400668 4.414792 4.415244 #> [377,] 2.152666 4.377727 4.381312 4.385153 4.386626 4.400706 4.414830 4.415206 #> [378,] 2.152684 4.377764 4.381349 4.385190 4.386663 4.400743 4.414868 4.415168 #> [379,] 2.152703 4.377802 4.381386 4.385227 4.386701 4.400781 4.414905 4.415131 #> [380,] 2.152721 4.377839 4.381424 4.385265 4.386738 4.400818 4.414943 4.415093 #> [381,] 2.152739 4.377876 4.381461 4.385302 4.386775 4.400856 4.414980 4.415056 #> [382,] 2.152758 4.377913 4.381498 4.385339 4.386813 4.400893 4.415018 4.415018 #> [383,] 2.152776 4.377951 4.381536 4.385377 4.386850 4.400931 4.415056 4.414981 #> [384,] 2.152794 4.377988 4.381573 4.385414 4.386887 4.400968 4.415093 4.414943 #> [385,] 2.152812 4.378025 4.381610 4.385451 4.386925 4.401005 4.415131 4.414905 #> [386,] 2.152831 4.378062 4.381648 4.385489 4.386962 4.401043 4.415168 4.414868 #> [387,] 2.152849 4.378100 4.381685 4.385526 4.386999 4.401080 4.415206 4.414830 #> [388,] 2.152867 4.378137 4.381722 4.385563 4.387037 4.401118 4.415244 4.414793 #> [389,] 2.152886 4.378174 4.381759 4.385601 4.387074 4.401155 4.415281 4.414755 #> [390,] 2.152904 4.378212 4.381797 4.385638 4.387111 4.401193 4.415319 4.414717 #> [391,] 2.152922 4.378249 4.381834 4.385675 4.387149 4.401230 4.415356 4.414680 #> [392,] 2.152941 4.378286 4.381871 4.385713 4.387186 4.401268 4.415394 4.414642 #> [393,] 2.152959 4.378323 4.381909 4.385750 4.387223 4.401305 4.415432 4.414605 #> [394,] 2.152977 4.378361 4.381946 4.385787 4.387261 4.401343 4.415469 4.414567 #> [395,] 2.152996 4.378398 4.381983 4.385825 4.387298 4.401380 4.415432 4.414529 #> [396,] 2.153014 4.378435 4.382021 4.385862 4.387336 4.401418 4.415394 4.414492 #> [397,] 2.153032 4.378473 4.382058 4.385899 4.387373 4.401455 4.415357 4.414454 #> [398,] 2.153051 4.378510 4.382095 4.385937 4.387410 4.401493 4.415319 4.414417 #> [399,] 2.153069 4.378547 4.382133 4.385974 4.387448 4.401530 4.415282 4.414379 #> [400,] 2.153087 4.378584 4.382170 4.386011 4.387485 4.401568 4.415244 4.414342 #> [401,] 2.153106 4.378622 4.382207 4.386049 4.387522 4.401605 4.415206 4.414304 #> [402,] 2.153124 4.378659 4.382244 4.386086 4.387560 4.401643 4.415169 4.414266 #> [403,] 2.153142 4.378696 4.382282 4.386123 4.387597 4.401680 4.415131 4.414229 #> [404,] 2.153161 4.378733 4.382319 4.386161 4.387634 4.401717 4.415094 4.414191 #> [405,] 2.153179 4.378771 4.382356 4.386198 4.387672 4.401755 4.415056 4.414154 #> [406,] 2.153197 4.378808 4.382394 4.386235 4.387709 4.401792 4.415019 4.414116 #> [407,] 2.153216 4.378845 4.382431 4.386273 4.387746 4.401830 4.414981 4.414078 #> [408,] 2.153234 4.378883 4.382468 4.386310 4.387784 4.401867 4.414943 4.414041 #> [409,] 2.153252 4.378920 4.382506 4.386347 4.387821 4.401905 4.414906 4.414003 #> [410,] 2.153271 4.378957 4.382543 4.386385 4.387858 4.401942 4.414868 4.413966 #> [411,] 2.153289 4.378994 4.382580 4.386422 4.387896 4.401980 4.414831 4.413928 #> [412,] 2.153307 4.379032 4.382618 4.386460 4.387933 4.402017 4.414793 4.413891 #> [413,] 2.153326 4.379069 4.382655 4.386497 4.387971 4.402055 4.414755 4.413853 #> [414,] 2.153344 4.379106 4.382692 4.386534 4.388008 4.402092 4.414718 4.413815 #> [415,] 2.153362 4.379144 4.382730 4.386572 4.388045 4.402130 4.414680 4.413778 #> [416,] 2.153381 4.379181 4.382767 4.386609 4.388083 4.402167 4.414643 4.413740 #> [417,] 2.153399 4.379218 4.382804 4.386646 4.388120 4.402205 4.414605 4.413703 #> [418,] 2.153417 4.379255 4.382841 4.386684 4.388157 4.402242 4.414567 4.413665 #> [419,] 2.153436 4.379293 4.382879 4.386721 4.388195 4.402280 4.414530 4.413628 #> [420,] 2.153454 4.379330 4.382916 4.386758 4.388232 4.402317 4.414492 4.413590 #> [421,] 2.153472 4.379367 4.382953 4.386796 4.388269 4.402355 4.414455 4.413552 #> [422,] 2.153491 4.379405 4.382991 4.386833 4.388307 4.402392 4.414417 4.413515 #> [423,] 2.153509 4.379442 4.383028 4.386870 4.388344 4.402430 4.414380 4.413477 #> [424,] 2.153527 4.379479 4.383065 4.386908 4.388382 4.402467 4.414342 4.413440 #> [425,] 2.153546 4.379516 4.383103 4.386945 4.388419 4.402505 4.414304 4.413402 #> [426,] 2.153564 4.379554 4.383140 4.386982 4.388456 4.402542 4.414267 4.413364 #> [427,] 2.153582 4.379591 4.383177 4.387020 4.388494 4.402579 4.414229 4.413327 #> [428,] 2.153601 4.379628 4.383215 4.387057 4.388531 4.402617 4.414192 4.413289 #> [429,] 2.153619 4.379666 4.383252 4.387094 4.388568 4.402654 4.414154 4.413252 #> [430,] 2.153637 4.379703 4.383289 4.387132 4.388606 4.402692 4.414116 4.413214 #> [431,] 2.153656 4.379740 4.383327 4.387169 4.388643 4.402729 4.414079 4.413177 #> [432,] 2.153674 4.379777 4.383364 4.387206 4.388680 4.402767 4.414041 4.413139 #> [433,] 2.153692 4.379815 4.383401 4.387244 4.388718 4.402804 4.414004 4.413101 #> [434,] 2.153711 4.379852 4.383439 4.387281 4.388755 4.402842 4.413966 4.413064 #> [435,] 2.153729 4.379889 4.383476 4.387319 4.388793 4.402879 4.413929 4.413026 #> [436,] 2.153747 4.379927 4.383513 4.387356 4.388830 4.402917 4.413891 4.412989 #> [437,] 2.153766 4.379964 4.383551 4.387393 4.388867 4.402954 4.413853 4.412951 #> [438,] 2.153784 4.380001 4.383588 4.387431 4.388905 4.402992 4.413816 4.412914 #> [439,] 2.153802 4.380038 4.383625 4.387468 4.388942 4.403029 4.413778 4.412876 #> [440,] 2.153821 4.380076 4.383663 4.387505 4.388979 4.403067 4.413741 4.412838 #> [441,] 2.153839 4.380113 4.383700 4.387543 4.389017 4.403104 4.413703 4.412801 #> [442,] 2.153858 4.380150 4.383737 4.387580 4.389054 4.403142 4.413666 4.412763 #> [443,] 2.153876 4.380188 4.383774 4.387617 4.389091 4.403179 4.413628 4.412726 #> [444,] 2.153894 4.380225 4.383812 4.387655 4.389129 4.403217 4.413590 4.412688 #> [445,] 2.153913 4.380262 4.383849 4.387692 4.389166 4.403254 4.413553 4.412651 #> [446,] 2.153931 4.380300 4.383886 4.387729 4.389204 4.403292 4.413515 4.412613 #> [447,] 2.153949 4.380337 4.383924 4.387767 4.389241 4.403329 4.413478 4.412575 #> [448,] 2.153968 4.380374 4.383961 4.387804 4.389278 4.403367 4.413440 4.412538 #> [449,] 2.153986 4.380411 4.383998 4.387842 4.389316 4.403404 4.413402 4.412500 #> [450,] 2.154004 4.380449 4.384036 4.387879 4.389353 4.403442 4.413365 4.412463 #> [451,] 2.154023 4.380486 4.384073 4.387916 4.389390 4.403479 4.413327 4.412425 #> [452,] 2.154041 4.380523 4.384110 4.387954 4.389428 4.403517 4.413290 4.412388 #> [453,] 2.154059 4.380561 4.384148 4.387991 4.389465 4.403554 4.413252 4.412350 #> [454,] 2.154078 4.380598 4.384185 4.388028 4.389503 4.403592 4.413215 4.412313 #> [455,] 2.154096 4.380635 4.384222 4.388066 4.389540 4.403629 4.413177 4.412275 #> [456,] 2.154114 4.380672 4.384260 4.388103 4.389577 4.403667 4.413139 4.412237 #> [457,] 2.154133 4.380710 4.384297 4.388140 4.389615 4.403704 4.413102 4.412200 #> [458,] 2.154151 4.380747 4.384334 4.388178 4.389652 4.403742 4.413064 4.412162 #> [459,] 2.154169 4.380784 4.384372 4.388215 4.389689 4.403779 4.413027 4.412125 #> [460,] 2.127075 4.325685 4.329227 4.333022 4.334478 4.348390 4.362347 4.363239 #> [461,] 2.127093 4.325722 4.329264 4.333059 4.334515 4.348427 4.362384 4.363276 #> [462,] 2.118559 4.308367 4.311895 4.315675 4.317125 4.330982 4.344882 4.345771 #> [463,] 2.118577 4.308404 4.311932 4.315712 4.317162 4.331019 4.344919 4.345808 #> [464,] 2.118595 4.308440 4.311968 4.315748 4.317198 4.331055 4.344956 4.345845 #> [465,] 2.118613 4.308477 4.312005 4.315785 4.317235 4.331092 4.344993 4.345882 #> [466,] 2.118632 4.308514 4.312042 4.315822 4.317272 4.331129 4.345030 4.345919 #> [467,] 2.118650 4.308550 4.312079 4.315859 4.317309 4.331166 4.345067 4.345956 #> [468,] 2.154188 4.380822 4.384409 4.388252 4.389727 4.403817 4.412989 4.412087 #> [469,] 2.154206 4.380859 4.384446 4.388290 4.389764 4.403854 4.412952 4.412050 #> [470,] 2.154224 4.380896 4.384484 4.388327 4.389802 4.403892 4.412914 4.412012 #> [471,] 2.118668 4.308587 4.312115 4.315895 4.317345 4.331203 4.345104 4.345993 #> [472,] 2.118686 4.308624 4.312152 4.315932 4.317382 4.331240 4.345141 4.346030 #> [473,] 2.118704 4.308660 4.312189 4.315969 4.317419 4.331277 4.345178 4.346067 #> [474,] 2.118722 4.308697 4.312225 4.316006 4.317456 4.331314 4.345215 4.346104 #> [475,] 2.118740 4.308734 4.312262 4.316042 4.317492 4.331350 4.345252 4.346141 #> [476,] 2.118758 4.308771 4.312299 4.316079 4.317529 4.331387 4.345289 4.346178 #> [477,] 2.118776 4.308807 4.312336 4.316116 4.317566 4.331424 4.345326 4.346215 #> [478,] 2.118794 4.308844 4.312372 4.316153 4.317603 4.331461 4.345363 4.346252 #> [479,] 2.118812 4.308881 4.312409 4.316189 4.317639 4.331498 4.345400 4.346289 #> [480,] 2.118830 4.308917 4.312446 4.316226 4.317676 4.331535 4.345437 4.346326 #> [481,] 2.118848 4.308954 4.312482 4.316263 4.317713 4.331572 4.345474 4.346363 #> [482,] 2.118866 4.308991 4.312519 4.316300 4.317750 4.331609 4.345511 4.346400 #> [483,] 2.118884 4.309027 4.312556 4.316336 4.317787 4.331645 4.345548 4.346437 #> [484,] 2.118902 4.309064 4.312593 4.316373 4.317823 4.331682 4.345585 4.346474 #> [485,] 2.118920 4.309101 4.312629 4.316410 4.317860 4.331719 4.345622 4.346511 #> [486,] 2.118938 4.309137 4.312666 4.316447 4.317897 4.331756 4.345659 4.346548 #> [487,] 2.118956 4.309174 4.312703 4.316483 4.317934 4.331793 4.345696 4.346585 #> [488,] 2.118974 4.309211 4.312739 4.316520 4.317970 4.331830 4.345733 4.346622 #> [489,] 2.118992 4.309247 4.312776 4.316557 4.318007 4.331867 4.345770 4.346659 #> [490,] 2.119010 4.309284 4.312813 4.316594 4.318044 4.331904 4.345807 4.346696 #> [491,] 2.119028 4.309321 4.312850 4.316630 4.318081 4.331940 4.345844 4.346733 #> [492,] 2.119046 4.309358 4.312886 4.316667 4.318117 4.331977 4.345881 4.346770 #> [493,] 2.119064 4.309394 4.312923 4.316704 4.318154 4.332014 4.345918 4.346807 #> [494,] 2.119083 4.309431 4.312960 4.316741 4.318191 4.332051 4.345955 4.346844 #> [495,] 2.119101 4.309468 4.312997 4.316777 4.318228 4.332088 4.345992 4.346881 #> [496,] 2.119119 4.309504 4.313033 4.316814 4.318264 4.332125 4.346029 4.346918 #> [497,] 2.119137 4.309541 4.313070 4.316851 4.318301 4.332162 4.346066 4.346955 #> [498,] 2.119155 4.309578 4.313107 4.316888 4.318338 4.332199 4.346103 4.346992 #> [499,] 2.119173 4.309614 4.313143 4.316924 4.318375 4.332236 4.346140 4.347029 #> [500,] 2.119191 4.309651 4.313180 4.316961 4.318412 4.332272 4.346177 4.347066 #> [501,] 2.119209 4.309688 4.313217 4.316998 4.318448 4.332309 4.346214 4.347103 #> [502,] 2.119227 4.309724 4.313254 4.317035 4.318485 4.332346 4.346251 4.347140 #> [503,] 2.119245 4.309761 4.313290 4.317071 4.318522 4.332383 4.346288 4.347177 #> [504,] 2.119263 4.309798 4.313327 4.317108 4.318559 4.332420 4.346325 4.347214 #> [505,] 2.119281 4.309835 4.313364 4.317145 4.318595 4.332457 4.346362 4.347251 #> [506,] 2.119299 4.309871 4.313400 4.317182 4.318632 4.332494 4.346399 4.347288 #> [507,] 2.119317 4.309908 4.313437 4.317218 4.318669 4.332531 4.346436 4.347325 #> [508,] 2.119335 4.309945 4.313474 4.317255 4.318706 4.332568 4.346473 4.347362 #> [509,] 2.171452 4.415007 4.411395 4.407531 4.406051 4.391954 4.377903 4.377008 #> [510,] 2.171471 4.414970 4.411357 4.407494 4.406013 4.391916 4.377865 4.376971 #> [511,] 2.171489 4.414932 4.411320 4.407456 4.405976 4.391879 4.377828 4.376933 #> [512,] 2.171508 4.414894 4.411282 4.407418 4.405938 4.391842 4.377791 4.376896 #> [513,] 2.171526 4.414857 4.411245 4.407381 4.405901 4.391804 4.377754 4.376859 #> [514,] 2.171545 4.414819 4.411207 4.407343 4.405863 4.391767 4.377716 4.376821 #> [515,] 2.171563 4.414782 4.411169 4.407306 4.405826 4.391729 4.377679 4.376784 #> [516,] 2.171582 4.414744 4.411132 4.407268 4.405788 4.391692 4.377642 4.376747 #> [517,] 2.171600 4.414706 4.411094 4.407231 4.405751 4.391655 4.377604 4.376710 #> [518,] 2.171619 4.414669 4.411057 4.407193 4.405713 4.391617 4.377567 4.376672 #> [519,] 2.160249 4.393147 4.396745 4.400599 4.402078 4.414732 4.400608 4.399708 #> [520,] 2.160267 4.393185 4.396782 4.400637 4.402115 4.414694 4.400570 4.399671 #> [521,] 2.160285 4.393222 4.396820 4.400674 4.402153 4.414657 4.400533 4.399633 #> [522,] 2.160304 4.393260 4.396857 4.400712 4.402190 4.414619 4.400495 4.399596 #> [523,] 2.160322 4.393297 4.396895 4.400749 4.402228 4.414581 4.400458 4.399558 #> [524,] 2.160341 4.393335 4.396932 4.400787 4.402265 4.414544 4.400420 4.399521 #> [525,] 2.160359 4.393372 4.396970 4.400824 4.402303 4.414506 4.400383 4.399483 #> [526,] 2.160377 4.393409 4.397007 4.400861 4.402340 4.414469 4.400345 4.399446 #> [527,] 2.160396 4.393447 4.397044 4.400899 4.402377 4.414431 4.400308 4.399409 #> [528,] 2.160414 4.393484 4.397082 4.400936 4.402415 4.414393 4.400271 4.399371 #> [529,] 2.160433 4.393522 4.397119 4.400974 4.402452 4.414356 4.400233 4.399334 #> [530,] 2.160451 4.393559 4.397157 4.401011 4.402490 4.414318 4.400196 4.399296 #> [531,] 2.151420 4.375193 4.378776 4.382615 4.384087 4.398159 4.412275 4.413177 #> [532,] 2.151438 4.375231 4.378813 4.382652 4.384124 4.398196 4.412312 4.413214 #> [533,] 2.151457 4.375268 4.378851 4.382689 4.384162 4.398234 4.412350 4.413252 #> [534,] 2.151475 4.375305 4.378888 4.382726 4.384199 4.398271 4.412388 4.413290 #> [535,] 2.151493 4.375342 4.378925 4.382764 4.384236 4.398308 4.412425 4.413327 #> [536,] 2.151512 4.375380 4.378962 4.382801 4.384274 4.398346 4.412463 4.413365 #> [537,] 2.151530 4.375417 4.379000 4.382838 4.384311 4.398383 4.412500 4.413402 #> [538,] 2.151548 4.375454 4.379037 4.382876 4.384348 4.398421 4.412538 4.413440 #> [539,] 2.151566 4.375491 4.379074 4.382913 4.384386 4.398458 4.412575 4.413478 #> [540,] 2.151585 4.375529 4.379112 4.382950 4.384423 4.398496 4.412613 4.413515 #> [541,] 2.151603 4.375566 4.379149 4.382988 4.384460 4.398533 4.412651 4.413553 #> [542,] 2.151621 4.375603 4.379186 4.383025 4.384498 4.398571 4.412688 4.413590 #> [543,] 2.151640 4.375640 4.379223 4.383062 4.384535 4.398608 4.412726 4.413628 #> [544,] 2.151658 4.375678 4.379261 4.383100 4.384572 4.398645 4.412763 4.413665 #> [545,] 2.151676 4.375715 4.379298 4.383137 4.384610 4.398683 4.412801 4.413703 #> [546,] 2.151695 4.375752 4.379335 4.383174 4.384647 4.398720 4.412838 4.413741 #> [547,] 2.151713 4.375789 4.379373 4.383212 4.384684 4.398758 4.412876 4.413778 #> [548,] 2.151731 4.375827 4.379410 4.383249 4.384722 4.398795 4.412914 4.413816 #> [549,] 2.151750 4.375864 4.379447 4.383286 4.384759 4.398833 4.412951 4.413853 #> [550,] 2.151768 4.375901 4.379484 4.383324 4.384796 4.398870 4.412989 4.413891 #> [551,] 2.151786 4.375938 4.379522 4.383361 4.384834 4.398908 4.413026 4.413928 #> [552,] 2.151805 4.375976 4.379559 4.383398 4.384871 4.398945 4.413064 4.413966 #> [553,] 2.151823 4.376013 4.379596 4.383435 4.384908 4.398983 4.413101 4.414004 #> [554,] 2.151841 4.376050 4.379634 4.383473 4.384946 4.399020 4.413139 4.414041 #> [555,] 2.151860 4.376087 4.379671 4.383510 4.384983 4.399057 4.413177 4.414079 #> [556,] 2.151878 4.376125 4.379708 4.383547 4.385020 4.399095 4.413214 4.414116 #> [557,] 2.151896 4.376162 4.379745 4.383585 4.385058 4.399132 4.413252 4.414154 #> [558,] 2.151915 4.376199 4.379783 4.383622 4.385095 4.399170 4.413289 4.414192 #> [559,] 2.151933 4.376236 4.379820 4.383659 4.385132 4.399207 4.413327 4.414229 #> [560,] 2.151951 4.376274 4.379857 4.383697 4.385170 4.399245 4.413364 4.414267 #> [561,] 2.151970 4.376311 4.379895 4.383734 4.385207 4.399282 4.413402 4.414304 #> [562,] 2.151988 4.376348 4.379932 4.383771 4.385244 4.399320 4.413440 4.414342 #> [563,] 2.152006 4.376385 4.379969 4.383809 4.385282 4.399357 4.413477 4.414379 #> [564,] 2.152024 4.376423 4.380006 4.383846 4.385319 4.399395 4.413515 4.414417 #> [565,] 2.152043 4.376460 4.380044 4.383883 4.385356 4.399432 4.413552 4.414455 #> [566,] 2.152061 4.376497 4.380081 4.383921 4.385394 4.399469 4.413590 4.414492 #> [567,] 2.152079 4.376534 4.380118 4.383958 4.385431 4.399507 4.413627 4.414530 #> [568,] 2.152098 4.376572 4.380156 4.383995 4.385468 4.399544 4.413665 4.414567 #> [569,] 2.152116 4.376609 4.380193 4.384033 4.385506 4.399582 4.413703 4.414605 #> [570,] 2.152134 4.376646 4.380230 4.384070 4.385543 4.399619 4.413740 4.414643 #> [571,] 2.152153 4.376684 4.380267 4.384107 4.385580 4.399657 4.413778 4.414680 #> [572,] 2.152171 4.376721 4.380305 4.384145 4.385618 4.399694 4.413815 4.414718 #> [573,] 2.152189 4.376758 4.380342 4.384182 4.385655 4.399732 4.413853 4.414755 #> [574,] 2.152208 4.376795 4.380379 4.384219 4.385692 4.399769 4.413890 4.414793 #> [575,] 2.152226 4.376833 4.380417 4.384257 4.385730 4.399807 4.413928 4.414830 #> [576,] 2.152244 4.376870 4.380454 4.384294 4.385767 4.399844 4.413966 4.414868 #> [577,] 2.152263 4.376907 4.380491 4.384331 4.385804 4.399882 4.414003 4.414906 #> [578,] 2.152281 4.376944 4.380529 4.384369 4.385842 4.399919 4.414041 4.414943 #> [579,] 2.152299 4.376982 4.380566 4.384406 4.385879 4.399956 4.414078 4.414981 #> [580,] 2.152318 4.377019 4.380603 4.384443 4.385916 4.399994 4.414116 4.415018 #> [581,] 2.152336 4.377056 4.380640 4.384481 4.385954 4.400031 4.414154 4.415056 #> [582,] 2.152354 4.377093 4.380678 4.384518 4.385991 4.400069 4.414191 4.415094 #> [583,] 2.152373 4.377131 4.380715 4.384555 4.386028 4.400106 4.414229 4.415131 #> [584,] 2.152391 4.377168 4.380752 4.384593 4.386066 4.400144 4.414266 4.415169 #> [585,] 2.152409 4.377205 4.380790 4.384630 4.386103 4.400181 4.414304 4.415206 #> [586,] 2.152428 4.377243 4.380827 4.384667 4.386140 4.400219 4.414341 4.415244 #> [587,] 2.152446 4.377280 4.380864 4.384705 4.386178 4.400256 4.414379 4.415282 #> [588,] 2.152464 4.377317 4.380902 4.384742 4.386215 4.400294 4.414417 4.415319 #> [589,] 2.152483 4.377354 4.380939 4.384779 4.386252 4.400331 4.414454 4.415357 #> [590,] 2.152501 4.377392 4.380976 4.384817 4.386290 4.400369 4.414492 4.415394 #> [591,] 2.152519 4.377429 4.381013 4.384854 4.386327 4.400406 4.414529 4.415432 #> [592,] 2.152538 4.377466 4.381051 4.384891 4.386364 4.400443 4.414567 4.415469 #> [593,] 2.152556 4.377503 4.381088 4.384929 4.386402 4.400481 4.414605 4.415432 #> [594,] 2.152574 4.377541 4.381125 4.384966 4.386439 4.400518 4.414642 4.415394 #> [595,] 2.152593 4.377578 4.381163 4.385003 4.386476 4.400556 4.414680 4.415356 #> [596,] 2.152611 4.377615 4.381200 4.385041 4.386514 4.400593 4.414717 4.415319 #> [597,] 2.154243 4.380934 4.384521 4.388365 4.389839 4.403929 4.412876 4.411974 #> [598,] 2.154261 4.380971 4.384558 4.388402 4.389876 4.403967 4.412839 4.411937 #> [599,] 2.154279 4.381008 4.384596 4.388439 4.389914 4.404004 4.412801 4.411899 #> [600,] 2.154298 4.381045 4.384633 4.388477 4.389951 4.404042 4.412764 4.411862 #> [601,] 2.154316 4.381083 4.384670 4.388514 4.389988 4.404079 4.412726 4.411824 #> [602,] 2.154334 4.381120 4.384708 4.388551 4.390026 4.404117 4.412689 4.411787 #> [603,] 2.154353 4.381157 4.384745 4.388589 4.390063 4.404154 4.412651 4.411749 #> [604,] 2.154371 4.381195 4.384782 4.388626 4.390101 4.404192 4.412613 4.411711 #> [605,] 2.154389 4.381232 4.384820 4.388663 4.390138 4.404229 4.412576 4.411674 #> [606,] 2.154408 4.381269 4.384857 4.388701 4.390175 4.404267 4.412538 4.411636 #> [607,] 2.154426 4.381307 4.384894 4.388738 4.390213 4.404304 4.412501 4.411599 #> [608,] 2.154444 4.381344 4.384932 4.388776 4.390250 4.404342 4.412463 4.411561 #> [609,] 2.154463 4.381381 4.384969 4.388813 4.390287 4.404379 4.412426 4.411524 #> [610,] 2.154481 4.381419 4.385006 4.388850 4.390325 4.404417 4.412388 4.411486 #> [611,] 2.154499 4.381456 4.385044 4.388888 4.390362 4.404454 4.412350 4.411449 #> [612,] 2.154518 4.381493 4.385081 4.388925 4.390400 4.404492 4.412313 4.411411 #> [613,] 2.154536 4.381530 4.385118 4.388962 4.390437 4.404529 4.412275 4.411373 #> [614,] 2.154554 4.381568 4.385156 4.389000 4.390474 4.404567 4.412238 4.411336 #> [615,] 2.154573 4.381605 4.385193 4.389037 4.390512 4.404604 4.412200 4.411298 #> [616,] 2.126369 4.324249 4.327790 4.331584 4.333039 4.346947 4.360898 4.361790 #> [617,] 2.126387 4.324285 4.327827 4.331620 4.333076 4.346984 4.360936 4.361827 #> [618,] 2.126405 4.324322 4.327863 4.331657 4.333113 4.347021 4.360973 4.361864 #> [619,] 2.126423 4.324359 4.327900 4.331694 4.333149 4.347058 4.361010 4.361901 #> [620,] 2.126441 4.324396 4.327937 4.331731 4.333186 4.347095 4.361047 4.361939 #> [621,] 2.126459 4.324433 4.327974 4.331768 4.333223 4.347132 4.361084 4.361976 #> [622,] 2.126478 4.324470 4.328011 4.331805 4.333260 4.347169 4.361121 4.362013 #> [623,] 2.126496 4.324506 4.328048 4.331842 4.333297 4.347206 4.361158 4.362050 #> [624,] 2.126514 4.324543 4.328084 4.331879 4.333334 4.347243 4.361195 4.362087 #> [625,] 2.126532 4.324580 4.328121 4.331915 4.333371 4.347280 4.361233 4.362124 #> [626,] 2.126550 4.324617 4.328158 4.331952 4.333408 4.347317 4.361270 4.362161 #> [627,] 2.126568 4.324654 4.328195 4.331989 4.333445 4.347354 4.361307 4.362199 #> [628,] 2.126586 4.324690 4.328232 4.332026 4.333482 4.347391 4.361344 4.362236 #> [629,] 2.126599 4.324717 4.328258 4.332053 4.333508 4.347417 4.361371 4.362262 #> [630,] 2.126622 4.324764 4.328306 4.332100 4.333555 4.347465 4.361418 4.362310 #> [631,] 2.126640 4.324801 4.328342 4.332137 4.333592 4.347502 4.361455 4.362347 #> [632,] 2.126659 4.324838 4.328379 4.332174 4.333629 4.347539 4.361493 4.362384 #> [633,] 2.126677 4.324875 4.328416 4.332210 4.333666 4.347576 4.361530 4.362421 #> [634,] 2.126695 4.324911 4.328453 4.332247 4.333703 4.347613 4.361567 4.362459 #> [635,] 2.126713 4.324948 4.328490 4.332284 4.333740 4.347650 4.361604 4.362496 #> [636,] 2.126731 4.324985 4.328527 4.332321 4.333777 4.347687 4.361641 4.362533 #> [637,] 2.126749 4.325022 4.328564 4.332358 4.333814 4.347724 4.361678 4.362570 #> [638,] 2.126767 4.325059 4.328600 4.332395 4.333850 4.347761 4.361715 4.362607 #> [639,] 2.126785 4.325096 4.328637 4.332432 4.333887 4.347798 4.361752 4.362644 #> [640,] 2.126803 4.325132 4.328674 4.332469 4.333924 4.347835 4.361790 4.362681 #> [641,] 2.126822 4.325169 4.328711 4.332506 4.333961 4.347872 4.361827 4.362719 #> [642,] 2.126840 4.325206 4.328748 4.332542 4.333998 4.347909 4.361864 4.362756 #> [643,] 2.126858 4.325243 4.328785 4.332579 4.334035 4.347946 4.361901 4.362793 #> [644,] 2.126876 4.325280 4.328822 4.332616 4.334072 4.347983 4.361938 4.362830 #> [645,] 2.126894 4.325316 4.328858 4.332653 4.334109 4.348020 4.361975 4.362867 #> [646,] 2.126912 4.325353 4.328895 4.332690 4.334146 4.348057 4.362012 4.362904 #> [647,] 2.126930 4.325390 4.328932 4.332727 4.334183 4.348094 4.362050 4.362941 #> [648,] 2.126948 4.325427 4.328969 4.332764 4.334219 4.348131 4.362087 4.362979 #> [649,] 2.126966 4.325464 4.329006 4.332801 4.334256 4.348168 4.362124 4.363016 #> [650,] 2.126984 4.325501 4.329043 4.332838 4.334293 4.348205 4.362161 4.363053 #> [651,] 2.127003 4.325537 4.329079 4.332874 4.334330 4.348242 4.362198 4.363090 #> [652,] 2.127021 4.325574 4.329116 4.332911 4.334367 4.348279 4.362235 4.363127 #> [653,] 2.127039 4.325611 4.329153 4.332948 4.334404 4.348316 4.362272 4.363164 #> [654,] 2.127057 4.325648 4.329190 4.332985 4.334441 4.348353 4.362310 4.363201 #>            [,9] [,10] [,11] [,12] [,13] [,14] [,15] [,16] [,17] [,18] [,19] #>   [1,] 4.320037     0     0     0     0     0     0     0     0     0     0 #>   [2,] 4.320001     0     0     0     0     0     0     0     0     0     0 #>   [3,] 4.319964     0     0     0     0     0     0     0     0     0     0 #>   [4,] 4.319927     0     0     0     0     0     0     0     0     0     0 #>   [5,] 4.319890     0     0     0     0     0     0     0     0     0     0 #>   [6,] 4.319853     0     0     0     0     0     0     0     0     0     0 #>   [7,] 4.319817     0     0     0     0     0     0     0     0     0     0 #>   [8,] 4.319780     0     0     0     0     0     0     0     0     0     0 #>   [9,] 4.319743     0     0     0     0     0     0     0     0     0     0 #>  [10,] 4.319706     0     0     0     0     0     0     0     0     0     0 #>  [11,] 4.319670     0     0     0     0     0     0     0     0     0     0 #>  [12,] 4.319633     0     0     0     0     0     0     0     0     0     0 #>  [13,] 4.319596     0     0     0     0     0     0     0     0     0     0 #>  [14,] 4.319559     0     0     0     0     0     0     0     0     0     0 #>  [15,] 4.319522     0     0     0     0     0     0     0     0     0     0 #>  [16,] 4.319486     0     0     0     0     0     0     0     0     0     0 #>  [17,] 4.319449     0     0     0     0     0     0     0     0     0     0 #>  [18,] 4.319412     0     0     0     0     0     0     0     0     0     0 #>  [19,] 4.319375     0     0     0     0     0     0     0     0     0     0 #>  [20,] 4.319339     0     0     0     0     0     0     0     0     0     0 #>  [21,] 4.319302     0     0     0     0     0     0     0     0     0     0 #>  [22,] 4.319265     0     0     0     0     0     0     0     0     0     0 #>  [23,] 4.319228     0     0     0     0     0     0     0     0     0     0 #>  [24,] 4.319192     0     0     0     0     0     0     0     0     0     0 #>  [25,] 4.319155     0     0     0     0     0     0     0     0     0     0 #>  [26,] 4.319118     0     0     0     0     0     0     0     0     0     0 #>  [27,] 4.319081     0     0     0     0     0     0     0     0     0     0 #>  [28,] 4.319044     0     0     0     0     0     0     0     0     0     0 #>  [29,] 4.319008     0     0     0     0     0     0     0     0     0     0 #>  [30,] 4.318971     0     0     0     0     0     0     0     0     0     0 #>  [31,] 4.318934     0     0     0     0     0     0     0     0     0     0 #>  [32,] 4.318897     0     0     0     0     0     0     0     0     0     0 #>  [33,] 4.318861     0     0     0     0     0     0     0     0     0     0 #>  [34,] 4.318824     0     0     0     0     0     0     0     0     0     0 #>  [35,] 4.318787     0     0     0     0     0     0     0     0     0     0 #>  [36,] 4.318750     0     0     0     0     0     0     0     0     0     0 #>  [37,] 4.318713     0     0     0     0     0     0     0     0     0     0 #>  [38,] 4.318677     0     0     0     0     0     0     0     0     0     0 #>  [39,] 4.318640     0     0     0     0     0     0     0     0     0     0 #>  [40,] 4.318603     0     0     0     0     0     0     0     0     0     0 #>  [41,] 4.318566     0     0     0     0     0     0     0     0     0     0 #>  [42,] 4.318530     0     0     0     0     0     0     0     0     0     0 #>  [43,] 4.318493     0     0     0     0     0     0     0     0     0     0 #>  [44,] 4.318456     0     0     0     0     0     0     0     0     0     0 #>  [45,] 4.318419     0     0     0     0     0     0     0     0     0     0 #>  [46,] 4.318383     0     0     0     0     0     0     0     0     0     0 #>  [47,] 4.318346     0     0     0     0     0     0     0     0     0     0 #>  [48,] 4.318309     0     0     0     0     0     0     0     0     0     0 #>  [49,] 4.318272     0     0     0     0     0     0     0     0     0     0 #>  [50,] 4.318236     0     0     0     0     0     0     0     0     0     0 #>  [51,] 4.318199     0     0     0     0     0     0     0     0     0     0 #>  [52,] 4.318162     0     0     0     0     0     0     0     0     0     0 #>  [53,] 4.318125     0     0     0     0     0     0     0     0     0     0 #>  [54,] 4.318088     0     0     0     0     0     0     0     0     0     0 #>  [55,] 4.318052     0     0     0     0     0     0     0     0     0     0 #>  [56,] 4.318015     0     0     0     0     0     0     0     0     0     0 #>  [57,] 4.317978     0     0     0     0     0     0     0     0     0     0 #>  [58,] 4.317941     0     0     0     0     0     0     0     0     0     0 #>  [59,] 4.317905     0     0     0     0     0     0     0     0     0     0 #>  [60,] 4.317868     0     0     0     0     0     0     0     0     0     0 #>  [61,] 4.317831     0     0     0     0     0     0     0     0     0     0 #>  [62,] 4.317794     0     0     0     0     0     0     0     0     0     0 #>  [63,] 4.317758     0     0     0     0     0     0     0     0     0     0 #>  [64,] 4.317721     0     0     0     0     0     0     0     0     0     0 #>  [65,] 4.317684     0     0     0     0     0     0     0     0     0     0 #>  [66,] 4.317647     0     0     0     0     0     0     0     0     0     0 #>  [67,] 4.317611     0     0     0     0     0     0     0     0     0     0 #>  [68,] 4.317574     0     0     0     0     0     0     0     0     0     0 #>  [69,] 4.317537     0     0     0     0     0     0     0     0     0     0 #>  [70,] 4.317500     0     0     0     0     0     0     0     0     0     0 #>  [71,] 4.317464     0     0     0     0     0     0     0     0     0     0 #>  [72,] 4.317427     0     0     0     0     0     0     0     0     0     0 #>  [73,] 4.317390     0     0     0     0     0     0     0     0     0     0 #>  [74,] 4.317353     0     0     0     0     0     0     0     0     0     0 #>  [75,] 4.317316     0     0     0     0     0     0     0     0     0     0 #>  [76,] 4.317280     0     0     0     0     0     0     0     0     0     0 #>  [77,] 4.317243     0     0     0     0     0     0     0     0     0     0 #>  [78,] 4.317206     0     0     0     0     0     0     0     0     0     0 #>  [79,] 4.317169     0     0     0     0     0     0     0     0     0     0 #>  [80,] 4.317133     0     0     0     0     0     0     0     0     0     0 #>  [81,] 4.317096     0     0     0     0     0     0     0     0     0     0 #>  [82,] 4.317059     0     0     0     0     0     0     0     0     0     0 #>  [83,] 4.317022     0     0     0     0     0     0     0     0     0     0 #>  [84,] 4.316986     0     0     0     0     0     0     0     0     0     0 #>  [85,] 4.316949     0     0     0     0     0     0     0     0     0     0 #>  [86,] 4.316912     0     0     0     0     0     0     0     0     0     0 #>  [87,] 4.316875     0     0     0     0     0     0     0     0     0     0 #>  [88,] 4.316839     0     0     0     0     0     0     0     0     0     0 #>  [89,] 4.316802     0     0     0     0     0     0     0     0     0     0 #>  [90,] 4.316765     0     0     0     0     0     0     0     0     0     0 #>  [91,] 4.316728     0     0     0     0     0     0     0     0     0     0 #>  [92,] 4.316692     0     0     0     0     0     0     0     0     0     0 #>  [93,] 4.316655     0     0     0     0     0     0     0     0     0     0 #>  [94,] 4.316618     0     0     0     0     0     0     0     0     0     0 #>  [95,] 4.316581     0     0     0     0     0     0     0     0     0     0 #>  [96,] 4.316545     0     0     0     0     0     0     0     0     0     0 #>  [97,] 4.316508     0     0     0     0     0     0     0     0     0     0 #>  [98,] 4.316471     0     0     0     0     0     0     0     0     0     0 #>  [99,] 4.316434     0     0     0     0     0     0     0     0     0     0 #> [100,] 4.316398     0     0     0     0     0     0     0     0     0     0 #> [101,] 4.316361     0     0     0     0     0     0     0     0     0     0 #> [102,] 4.316324     0     0     0     0     0     0     0     0     0     0 #> [103,] 4.316287     0     0     0     0     0     0     0     0     0     0 #> [104,] 4.316251     0     0     0     0     0     0     0     0     0     0 #> [105,] 4.316214     0     0     0     0     0     0     0     0     0     0 #> [106,] 4.316177     0     0     0     0     0     0     0     0     0     0 #> [107,] 4.316140     0     0     0     0     0     0     0     0     0     0 #> [108,] 4.316104     0     0     0     0     0     0     0     0     0     0 #> [109,] 4.316067     0     0     0     0     0     0     0     0     0     0 #> [110,] 4.316030     0     0     0     0     0     0     0     0     0     0 #> [111,] 4.315993     0     0     0     0     0     0     0     0     0     0 #> [112,] 4.315957     0     0     0     0     0     0     0     0     0     0 #> [113,] 4.315920     0     0     0     0     0     0     0     0     0     0 #> [114,] 4.315883     0     0     0     0     0     0     0     0     0     0 #> [115,] 4.315846     0     0     0     0     0     0     0     0     0     0 #> [116,] 4.315810     0     0     0     0     0     0     0     0     0     0 #> [117,] 4.315773     0     0     0     0     0     0     0     0     0     0 #> [118,] 4.315736     0     0     0     0     0     0     0     0     0     0 #> [119,] 4.315699     0     0     0     0     0     0     0     0     0     0 #> [120,] 4.315663     0     0     0     0     0     0     0     0     0     0 #> [121,] 4.315626     0     0     0     0     0     0     0     0     0     0 #> [122,] 4.315589     0     0     0     0     0     0     0     0     0     0 #> [123,] 4.315552     0     0     0     0     0     0     0     0     0     0 #> [124,] 4.315516     0     0     0     0     0     0     0     0     0     0 #> [125,] 4.315479     0     0     0     0     0     0     0     0     0     0 #> [126,] 4.315442     0     0     0     0     0     0     0     0     0     0 #> [127,] 4.315406     0     0     0     0     0     0     0     0     0     0 #> [128,] 4.315369     0     0     0     0     0     0     0     0     0     0 #> [129,] 4.315332     0     0     0     0     0     0     0     0     0     0 #> [130,] 4.315295     0     0     0     0     0     0     0     0     0     0 #> [131,] 4.315259     0     0     0     0     0     0     0     0     0     0 #> [132,] 4.315222     0     0     0     0     0     0     0     0     0     0 #> [133,] 4.315185     0     0     0     0     0     0     0     0     0     0 #> [134,] 4.315148     0     0     0     0     0     0     0     0     0     0 #> [135,] 4.315112     0     0     0     0     0     0     0     0     0     0 #> [136,] 4.315075     0     0     0     0     0     0     0     0     0     0 #> [137,] 4.315038     0     0     0     0     0     0     0     0     0     0 #> [138,] 4.315001     0     0     0     0     0     0     0     0     0     0 #> [139,] 4.314965     0     0     0     0     0     0     0     0     0     0 #> [140,] 4.314928     0     0     0     0     0     0     0     0     0     0 #> [141,] 4.314891     0     0     0     0     0     0     0     0     0     0 #> [142,] 4.314854     0     0     0     0     0     0     0     0     0     0 #> [143,] 4.314818     0     0     0     0     0     0     0     0     0     0 #> [144,] 4.314781     0     0     0     0     0     0     0     0     0     0 #> [145,] 4.314744     0     0     0     0     0     0     0     0     0     0 #> [146,] 4.314707     0     0     0     0     0     0     0     0     0     0 #> [147,] 4.314671     0     0     0     0     0     0     0     0     0     0 #> [148,] 4.314634     0     0     0     0     0     0     0     0     0     0 #> [149,] 4.314597     0     0     0     0     0     0     0     0     0     0 #> [150,] 4.314561     0     0     0     0     0     0     0     0     0     0 #> [151,] 4.314524     0     0     0     0     0     0     0     0     0     0 #> [152,] 4.314487     0     0     0     0     0     0     0     0     0     0 #> [153,] 4.314450     0     0     0     0     0     0     0     0     0     0 #> [154,] 4.314414     0     0     0     0     0     0     0     0     0     0 #> [155,] 4.314377     0     0     0     0     0     0     0     0     0     0 #> [156,] 4.314340     0     0     0     0     0     0     0     0     0     0 #> [157,] 4.314303     0     0     0     0     0     0     0     0     0     0 #> [158,] 4.314267     0     0     0     0     0     0     0     0     0     0 #> [159,] 4.314230     0     0     0     0     0     0     0     0     0     0 #> [160,] 4.314193     0     0     0     0     0     0     0     0     0     0 #> [161,] 4.314156     0     0     0     0     0     0     0     0     0     0 #> [162,] 4.314120     0     0     0     0     0     0     0     0     0     0 #> [163,] 4.314083     0     0     0     0     0     0     0     0     0     0 #> [164,] 4.314046     0     0     0     0     0     0     0     0     0     0 #> [165,] 4.314010     0     0     0     0     0     0     0     0     0     0 #> [166,] 4.313973     0     0     0     0     0     0     0     0     0     0 #> [167,] 4.313936     0     0     0     0     0     0     0     0     0     0 #> [168,] 4.313899     0     0     0     0     0     0     0     0     0     0 #> [169,] 4.313863     0     0     0     0     0     0     0     0     0     0 #> [170,] 4.313826     0     0     0     0     0     0     0     0     0     0 #> [171,] 4.313789     0     0     0     0     0     0     0     0     0     0 #> [172,] 4.313752     0     0     0     0     0     0     0     0     0     0 #> [173,] 4.313716     0     0     0     0     0     0     0     0     0     0 #> [174,] 4.313679     0     0     0     0     0     0     0     0     0     0 #> [175,] 4.313642     0     0     0     0     0     0     0     0     0     0 #> [176,] 4.313606     0     0     0     0     0     0     0     0     0     0 #> [177,] 4.313569     0     0     0     0     0     0     0     0     0     0 #> [178,] 4.313532     0     0     0     0     0     0     0     0     0     0 #> [179,] 4.313495     0     0     0     0     0     0     0     0     0     0 #> [180,] 4.313459     0     0     0     0     0     0     0     0     0     0 #> [181,] 4.313422     0     0     0     0     0     0     0     0     0     0 #> [182,] 4.313385     0     0     0     0     0     0     0     0     0     0 #> [183,] 4.313348     0     0     0     0     0     0     0     0     0     0 #> [184,] 4.313312     0     0     0     0     0     0     0     0     0     0 #> [185,] 4.313275     0     0     0     0     0     0     0     0     0     0 #> [186,] 4.313238     0     0     0     0     0     0     0     0     0     0 #> [187,] 4.313202     0     0     0     0     0     0     0     0     0     0 #> [188,] 4.313165     0     0     0     0     0     0     0     0     0     0 #> [189,] 4.313128     0     0     0     0     0     0     0     0     0     0 #> [190,] 4.313091     0     0     0     0     0     0     0     0     0     0 #> [191,] 4.313055     0     0     0     0     0     0     0     0     0     0 #> [192,] 4.313018     0     0     0     0     0     0     0     0     0     0 #> [193,] 4.312981     0     0     0     0     0     0     0     0     0     0 #> [194,] 4.312945     0     0     0     0     0     0     0     0     0     0 #> [195,] 4.312908     0     0     0     0     0     0     0     0     0     0 #> [196,] 4.312871     0     0     0     0     0     0     0     0     0     0 #> [197,] 4.312834     0     0     0     0     0     0     0     0     0     0 #> [198,] 4.312798     0     0     0     0     0     0     0     0     0     0 #> [199,] 4.312761     0     0     0     0     0     0     0     0     0     0 #> [200,] 4.312724     0     0     0     0     0     0     0     0     0     0 #> [201,] 4.312688     0     0     0     0     0     0     0     0     0     0 #> [202,] 4.312651     0     0     0     0     0     0     0     0     0     0 #> [203,] 4.312614     0     0     0     0     0     0     0     0     0     0 #> [204,] 4.312577     0     0     0     0     0     0     0     0     0     0 #> [205,] 4.312541     0     0     0     0     0     0     0     0     0     0 #> [206,] 4.312504     0     0     0     0     0     0     0     0     0     0 #> [207,] 4.312467     0     0     0     0     0     0     0     0     0     0 #> [208,] 4.312430     0     0     0     0     0     0     0     0     0     0 #> [209,] 4.312394     0     0     0     0     0     0     0     0     0     0 #> [210,] 4.312357     0     0     0     0     0     0     0     0     0     0 #> [211,] 4.312320     0     0     0     0     0     0     0     0     0     0 #> [212,] 4.312284     0     0     0     0     0     0     0     0     0     0 #> [213,] 4.312247     0     0     0     0     0     0     0     0     0     0 #> [214,] 4.312210     0     0     0     0     0     0     0     0     0     0 #> [215,] 4.312173     0     0     0     0     0     0     0     0     0     0 #> [216,] 4.312137     0     0     0     0     0     0     0     0     0     0 #> [217,] 4.312100     0     0     0     0     0     0     0     0     0     0 #> [218,] 4.312063     0     0     0     0     0     0     0     0     0     0 #> [219,] 4.312027     0     0     0     0     0     0     0     0     0     0 #> [220,] 4.311990     0     0     0     0     0     0     0     0     0     0 #> [221,] 4.311953     0     0     0     0     0     0     0     0     0     0 #> [222,] 4.311916     0     0     0     0     0     0     0     0     0     0 #> [223,] 4.311880     0     0     0     0     0     0     0     0     0     0 #> [224,] 4.311843     0     0     0     0     0     0     0     0     0     0 #> [225,] 4.311806     0     0     0     0     0     0     0     0     0     0 #> [226,] 4.311770     0     0     0     0     0     0     0     0     0     0 #> [227,] 4.311733     0     0     0     0     0     0     0     0     0     0 #> [228,] 4.311696     0     0     0     0     0     0     0     0     0     0 #> [229,] 4.311660     0     0     0     0     0     0     0     0     0     0 #> [230,] 4.311623     0     0     0     0     0     0     0     0     0     0 #> [231,] 4.311586     0     0     0     0     0     0     0     0     0     0 #> [232,] 4.311549     0     0     0     0     0     0     0     0     0     0 #> [233,] 4.311513     0     0     0     0     0     0     0     0     0     0 #> [234,] 4.311476     0     0     0     0     0     0     0     0     0     0 #> [235,] 4.311439     0     0     0     0     0     0     0     0     0     0 #> [236,] 4.311403     0     0     0     0     0     0     0     0     0     0 #> [237,] 4.311366     0     0     0     0     0     0     0     0     0     0 #> [238,] 4.311329     0     0     0     0     0     0     0     0     0     0 #> [239,] 4.311292     0     0     0     0     0     0     0     0     0     0 #> [240,] 4.311256     0     0     0     0     0     0     0     0     0     0 #> [241,] 4.311219     0     0     0     0     0     0     0     0     0     0 #> [242,] 4.311182     0     0     0     0     0     0     0     0     0     0 #> [243,] 4.311146     0     0     0     0     0     0     0     0     0     0 #> [244,] 4.311109     0     0     0     0     0     0     0     0     0     0 #> [245,] 4.311072     0     0     0     0     0     0     0     0     0     0 #> [246,] 4.311036     0     0     0     0     0     0     0     0     0     0 #> [247,] 4.310999     0     0     0     0     0     0     0     0     0     0 #> [248,] 4.310962     0     0     0     0     0     0     0     0     0     0 #> [249,] 4.310925     0     0     0     0     0     0     0     0     0     0 #> [250,] 4.310889     0     0     0     0     0     0     0     0     0     0 #> [251,] 4.310852     0     0     0     0     0     0     0     0     0     0 #> [252,] 4.310815     0     0     0     0     0     0     0     0     0     0 #> [253,] 4.310779     0     0     0     0     0     0     0     0     0     0 #> [254,] 4.310742     0     0     0     0     0     0     0     0     0     0 #> [255,] 4.310705     0     0     0     0     0     0     0     0     0     0 #> [256,] 4.310668     0     0     0     0     0     0     0     0     0     0 #> [257,] 4.310632     0     0     0     0     0     0     0     0     0     0 #> [258,] 4.310595     0     0     0     0     0     0     0     0     0     0 #> [259,] 4.310558     0     0     0     0     0     0     0     0     0     0 #> [260,] 4.310522     0     0     0     0     0     0     0     0     0     0 #> [261,] 4.310485     0     0     0     0     0     0     0     0     0     0 #> [262,] 4.310448     0     0     0     0     0     0     0     0     0     0 #> [263,] 4.310412     0     0     0     0     0     0     0     0     0     0 #> [264,] 4.310375     0     0     0     0     0     0     0     0     0     0 #> [265,] 4.310338     0     0     0     0     0     0     0     0     0     0 #> [266,] 4.310301     0     0     0     0     0     0     0     0     0     0 #> [267,] 4.310265     0     0     0     0     0     0     0     0     0     0 #> [268,] 4.310228     0     0     0     0     0     0     0     0     0     0 #> [269,] 4.310191     0     0     0     0     0     0     0     0     0     0 #> [270,] 4.310155     0     0     0     0     0     0     0     0     0     0 #> [271,] 4.310118     0     0     0     0     0     0     0     0     0     0 #> [272,] 4.310081     0     0     0     0     0     0     0     0     0     0 #> [273,] 4.310045     0     0     0     0     0     0     0     0     0     0 #> [274,] 4.310008     0     0     0     0     0     0     0     0     0     0 #> [275,] 4.309971     0     0     0     0     0     0     0     0     0     0 #> [276,] 4.309935     0     0     0     0     0     0     0     0     0     0 #> [277,] 4.309898     0     0     0     0     0     0     0     0     0     0 #> [278,] 4.309861     0     0     0     0     0     0     0     0     0     0 #> [279,] 4.309824     0     0     0     0     0     0     0     0     0     0 #> [280,] 4.309788     0     0     0     0     0     0     0     0     0     0 #> [281,] 4.309751     0     0     0     0     0     0     0     0     0     0 #> [282,] 4.309714     0     0     0     0     0     0     0     0     0     0 #> [283,] 4.309678     0     0     0     0     0     0     0     0     0     0 #> [284,] 4.309641     0     0     0     0     0     0     0     0     0     0 #> [285,] 4.309604     0     0     0     0     0     0     0     0     0     0 #> [286,] 4.309568     0     0     0     0     0     0     0     0     0     0 #> [287,] 4.309531     0     0     0     0     0     0     0     0     0     0 #> [288,] 4.309494     0     0     0     0     0     0     0     0     0     0 #> [289,] 4.309458     0     0     0     0     0     0     0     0     0     0 #> [290,] 4.309421     0     0     0     0     0     0     0     0     0     0 #> [291,] 4.309384     0     0     0     0     0     0     0     0     0     0 #> [292,] 4.309347     0     0     0     0     0     0     0     0     0     0 #> [293,] 4.309311     0     0     0     0     0     0     0     0     0     0 #> [294,] 4.309274     0     0     0     0     0     0     0     0     0     0 #> [295,] 4.309237     0     0     0     0     0     0     0     0     0     0 #> [296,] 4.309201     0     0     0     0     0     0     0     0     0     0 #> [297,] 4.309164     0     0     0     0     0     0     0     0     0     0 #> [298,] 4.309127     0     0     0     0     0     0     0     0     0     0 #> [299,] 4.309091     0     0     0     0     0     0     0     0     0     0 #> [300,] 4.309054     0     0     0     0     0     0     0     0     0     0 #> [301,] 4.309017     0     0     0     0     0     0     0     0     0     0 #> [302,] 4.308981     0     0     0     0     0     0     0     0     0     0 #> [303,] 4.308944     0     0     0     0     0     0     0     0     0     0 #> [304,] 4.308907     0     0     0     0     0     0     0     0     0     0 #> [305,] 4.308871     0     0     0     0     0     0     0     0     0     0 #> [306,] 4.308834     0     0     0     0     0     0     0     0     0     0 #> [307,] 4.308797     0     0     0     0     0     0     0     0     0     0 #> [308,] 4.308760     0     0     0     0     0     0     0     0     0     0 #> [309,] 4.330628     0     0     0     0     0     0     0     0     0     0 #> [310,] 4.330591     0     0     0     0     0     0     0     0     0     0 #> [311,] 4.330554     0     0     0     0     0     0     0     0     0     0 #> [312,] 4.330517     0     0     0     0     0     0     0     0     0     0 #> [313,] 4.330480     0     0     0     0     0     0     0     0     0     0 #> [314,] 4.330443     0     0     0     0     0     0     0     0     0     0 #> [315,] 4.330406     0     0     0     0     0     0     0     0     0     0 #> [316,] 4.330369     0     0     0     0     0     0     0     0     0     0 #> [317,] 4.330333     0     0     0     0     0     0     0     0     0     0 #> [318,] 4.330296     0     0     0     0     0     0     0     0     0     0 #> [319,] 4.330259     0     0     0     0     0     0     0     0     0     0 #> [320,] 4.330222     0     0     0     0     0     0     0     0     0     0 #> [321,] 4.330185     0     0     0     0     0     0     0     0     0     0 #> [322,] 4.332525     0     0     0     0     0     0     0     0     0     0 #> [323,] 4.332488     0     0     0     0     0     0     0     0     0     0 #> [324,] 4.332451     0     0     0     0     0     0     0     0     0     0 #> [325,] 4.332414     0     0     0     0     0     0     0     0     0     0 #> [326,] 4.332378     0     0     0     0     0     0     0     0     0     0 #> [327,] 4.332341     0     0     0     0     0     0     0     0     0     0 #> [328,] 4.332304     0     0     0     0     0     0     0     0     0     0 #> [329,] 4.332267     0     0     0     0     0     0     0     0     0     0 #> [330,] 4.332230     0     0     0     0     0     0     0     0     0     0 #> [331,] 4.332193     0     0     0     0     0     0     0     0     0     0 #> [332,] 4.332156     0     0     0     0     0     0     0     0     0     0 #> [333,] 4.332119     0     0     0     0     0     0     0     0     0     0 #> [334,] 4.332083     0     0     0     0     0     0     0     0     0     0 #> [335,] 4.332046     0     0     0     0     0     0     0     0     0     0 #> [336,] 4.332009     0     0     0     0     0     0     0     0     0     0 #> [337,] 4.331972     0     0     0     0     0     0     0     0     0     0 #> [338,] 4.331935     0     0     0     0     0     0     0     0     0     0 #> [339,] 4.331898     0     0     0     0     0     0     0     0     0     0 #> [340,] 4.331861     0     0     0     0     0     0     0     0     0     0 #> [341,] 4.331824     0     0     0     0     0     0     0     0     0     0 #> [342,] 4.331787     0     0     0     0     0     0     0     0     0     0 #> [343,] 4.331751     0     0     0     0     0     0     0     0     0     0 #> [344,] 4.331714     0     0     0     0     0     0     0     0     0     0 #> [345,] 4.331677     0     0     0     0     0     0     0     0     0     0 #> [346,] 4.331640     0     0     0     0     0     0     0     0     0     0 #> [347,] 4.331603     0     0     0     0     0     0     0     0     0     0 #> [348,] 4.331566     0     0     0     0     0     0     0     0     0     0 #> [349,] 4.331529     0     0     0     0     0     0     0     0     0     0 #> [350,] 4.331492     0     0     0     0     0     0     0     0     0     0 #> [351,] 4.331456     0     0     0     0     0     0     0     0     0     0 #> [352,] 4.331419     0     0     0     0     0     0     0     0     0     0 #> [353,] 4.331382     0     0     0     0     0     0     0     0     0     0 #> [354,] 4.331345     0     0     0     0     0     0     0     0     0     0 #> [355,] 4.331308     0     0     0     0     0     0     0     0     0     0 #> [356,] 4.331271     0     0     0     0     0     0     0     0     0     0 #> [357,] 4.331234     0     0     0     0     0     0     0     0     0     0 #> [358,] 4.331197     0     0     0     0     0     0     0     0     0     0 #> [359,] 4.331161     0     0     0     0     0     0     0     0     0     0 #> [360,] 4.331124     0     0     0     0     0     0     0     0     0     0 #> [361,] 4.349362     0     0     0     0     0     0     0     0     0     0 #> [362,] 4.349325     0     0     0     0     0     0     0     0     0     0 #> [363,] 4.349288     0     0     0     0     0     0     0     0     0     0 #> [364,] 4.349250     0     0     0     0     0     0     0     0     0     0 #> [365,] 4.349213     0     0     0     0     0     0     0     0     0     0 #> [366,] 4.349176     0     0     0     0     0     0     0     0     0     0 #> [367,] 4.349139     0     0     0     0     0     0     0     0     0     0 #> [368,] 4.349102     0     0     0     0     0     0     0     0     0     0 #> [369,] 4.349065     0     0     0     0     0     0     0     0     0     0 #> [370,] 4.349028     0     0     0     0     0     0     0     0     0     0 #> [371,] 4.348991     0     0     0     0     0     0     0     0     0     0 #> [372,] 4.348954     0     0     0     0     0     0     0     0     0     0 #> [373,] 4.348917     0     0     0     0     0     0     0     0     0     0 #> [374,] 4.348880     0     0     0     0     0     0     0     0     0     0 #> [375,] 4.346400     0     0     0     0     0     0     0     0     0     0 #> [376,] 4.346363     0     0     0     0     0     0     0     0     0     0 #> [377,] 4.346326     0     0     0     0     0     0     0     0     0     0 #> [378,] 4.346289     0     0     0     0     0     0     0     0     0     0 #> [379,] 4.346252     0     0     0     0     0     0     0     0     0     0 #> [380,] 4.346215     0     0     0     0     0     0     0     0     0     0 #> [381,] 4.346178     0     0     0     0     0     0     0     0     0     0 #> [382,] 4.346141     0     0     0     0     0     0     0     0     0     0 #> [383,] 4.346104     0     0     0     0     0     0     0     0     0     0 #> [384,] 4.346067     0     0     0     0     0     0     0     0     0     0 #> [385,] 4.346030     0     0     0     0     0     0     0     0     0     0 #> [386,] 4.345993     0     0     0     0     0     0     0     0     0     0 #> [387,] 4.345956     0     0     0     0     0     0     0     0     0     0 #> [388,] 4.345919     0     0     0     0     0     0     0     0     0     0 #> [389,] 4.345882     0     0     0     0     0     0     0     0     0     0 #> [390,] 4.345845     0     0     0     0     0     0     0     0     0     0 #> [391,] 4.345808     0     0     0     0     0     0     0     0     0     0 #> [392,] 4.345771     0     0     0     0     0     0     0     0     0     0 #> [393,] 4.345734     0     0     0     0     0     0     0     0     0     0 #> [394,] 4.345697     0     0     0     0     0     0     0     0     0     0 #> [395,] 4.345660     0     0     0     0     0     0     0     0     0     0 #> [396,] 4.345623     0     0     0     0     0     0     0     0     0     0 #> [397,] 4.345586     0     0     0     0     0     0     0     0     0     0 #> [398,] 4.345549     0     0     0     0     0     0     0     0     0     0 #> [399,] 4.345512     0     0     0     0     0     0     0     0     0     0 #> [400,] 4.345475     0     0     0     0     0     0     0     0     0     0 #> [401,] 4.345438     0     0     0     0     0     0     0     0     0     0 #> [402,] 4.345401     0     0     0     0     0     0     0     0     0     0 #> [403,] 4.345364     0     0     0     0     0     0     0     0     0     0 #> [404,] 4.345327     0     0     0     0     0     0     0     0     0     0 #> [405,] 4.345290     0     0     0     0     0     0     0     0     0     0 #> [406,] 4.345253     0     0     0     0     0     0     0     0     0     0 #> [407,] 4.345216     0     0     0     0     0     0     0     0     0     0 #> [408,] 4.345179     0     0     0     0     0     0     0     0     0     0 #> [409,] 4.345142     0     0     0     0     0     0     0     0     0     0 #> [410,] 4.345105     0     0     0     0     0     0     0     0     0     0 #> [411,] 4.345068     0     0     0     0     0     0     0     0     0     0 #> [412,] 4.345031     0     0     0     0     0     0     0     0     0     0 #> [413,] 4.344994     0     0     0     0     0     0     0     0     0     0 #> [414,] 4.344957     0     0     0     0     0     0     0     0     0     0 #> [415,] 4.344920     0     0     0     0     0     0     0     0     0     0 #> [416,] 4.344883     0     0     0     0     0     0     0     0     0     0 #> [417,] 4.344846     0     0     0     0     0     0     0     0     0     0 #> [418,] 4.344809     0     0     0     0     0     0     0     0     0     0 #> [419,] 4.344772     0     0     0     0     0     0     0     0     0     0 #> [420,] 4.344735     0     0     0     0     0     0     0     0     0     0 #> [421,] 4.344698     0     0     0     0     0     0     0     0     0     0 #> [422,] 4.344661     0     0     0     0     0     0     0     0     0     0 #> [423,] 4.344624     0     0     0     0     0     0     0     0     0     0 #> [424,] 4.344587     0     0     0     0     0     0     0     0     0     0 #> [425,] 4.344550     0     0     0     0     0     0     0     0     0     0 #> [426,] 4.344513     0     0     0     0     0     0     0     0     0     0 #> [427,] 4.344476     0     0     0     0     0     0     0     0     0     0 #> [428,] 4.344439     0     0     0     0     0     0     0     0     0     0 #> [429,] 4.344402     0     0     0     0     0     0     0     0     0     0 #> [430,] 4.344365     0     0     0     0     0     0     0     0     0     0 #> [431,] 4.344328     0     0     0     0     0     0     0     0     0     0 #> [432,] 4.344291     0     0     0     0     0     0     0     0     0     0 #> [433,] 4.344254     0     0     0     0     0     0     0     0     0     0 #> [434,] 4.344217     0     0     0     0     0     0     0     0     0     0 #> [435,] 4.344180     0     0     0     0     0     0     0     0     0     0 #> [436,] 4.344143     0     0     0     0     0     0     0     0     0     0 #> [437,] 4.344106     0     0     0     0     0     0     0     0     0     0 #> [438,] 4.344069     0     0     0     0     0     0     0     0     0     0 #> [439,] 4.344032     0     0     0     0     0     0     0     0     0     0 #> [440,] 4.343995     0     0     0     0     0     0     0     0     0     0 #> [441,] 4.343958     0     0     0     0     0     0     0     0     0     0 #> [442,] 4.343922     0     0     0     0     0     0     0     0     0     0 #> [443,] 4.343885     0     0     0     0     0     0     0     0     0     0 #> [444,] 4.343848     0     0     0     0     0     0     0     0     0     0 #> [445,] 4.343811     0     0     0     0     0     0     0     0     0     0 #> [446,] 4.343774     0     0     0     0     0     0     0     0     0     0 #> [447,] 4.343737     0     0     0     0     0     0     0     0     0     0 #> [448,] 4.343700     0     0     0     0     0     0     0     0     0     0 #> [449,] 4.343663     0     0     0     0     0     0     0     0     0     0 #> [450,] 4.343626     0     0     0     0     0     0     0     0     0     0 #> [451,] 4.343589     0     0     0     0     0     0     0     0     0     0 #> [452,] 4.343552     0     0     0     0     0     0     0     0     0     0 #> [453,] 4.343515     0     0     0     0     0     0     0     0     0     0 #> [454,] 4.343478     0     0     0     0     0     0     0     0     0     0 #> [455,] 4.343441     0     0     0     0     0     0     0     0     0     0 #> [456,] 4.343404     0     0     0     0     0     0     0     0     0     0 #> [457,] 4.343367     0     0     0     0     0     0     0     0     0     0 #> [458,] 4.343330     0     0     0     0     0     0     0     0     0     0 #> [459,] 4.343293     0     0     0     0     0     0     0     0     0     0 #> [460,] 4.398617     0     0     0     0     0     0     0     0     0     0 #> [461,] 4.398579     0     0     0     0     0     0     0     0     0     0 #> [462,] 4.414642     0     0     0     0     0     0     0     0     0     0 #> [463,] 4.414679     0     0     0     0     0     0     0     0     0     0 #> [464,] 4.414717     0     0     0     0     0     0     0     0     0     0 #> [465,] 4.414754     0     0     0     0     0     0     0     0     0     0 #> [466,] 4.414792     0     0     0     0     0     0     0     0     0     0 #> [467,] 4.414830     0     0     0     0     0     0     0     0     0     0 #> [468,] 4.343256     0     0     0     0     0     0     0     0     0     0 #> [469,] 4.343219     0     0     0     0     0     0     0     0     0     0 #> [470,] 4.343182     0     0     0     0     0     0     0     0     0     0 #> [471,] 4.414867     0     0     0     0     0     0     0     0     0     0 #> [472,] 4.414905     0     0     0     0     0     0     0     0     0     0 #> [473,] 4.414942     0     0     0     0     0     0     0     0     0     0 #> [474,] 4.414980     0     0     0     0     0     0     0     0     0     0 #> [475,] 4.415018     0     0     0     0     0     0     0     0     0     0 #> [476,] 4.415055     0     0     0     0     0     0     0     0     0     0 #> [477,] 4.415093     0     0     0     0     0     0     0     0     0     0 #> [478,] 4.415130     0     0     0     0     0     0     0     0     0     0 #> [479,] 4.415168     0     0     0     0     0     0     0     0     0     0 #> [480,] 4.415205     0     0     0     0     0     0     0     0     0     0 #> [481,] 4.415243     0     0     0     0     0     0     0     0     0     0 #> [482,] 4.415281     0     0     0     0     0     0     0     0     0     0 #> [483,] 4.415318     0     0     0     0     0     0     0     0     0     0 #> [484,] 4.415356     0     0     0     0     0     0     0     0     0     0 #> [485,] 4.415393     0     0     0     0     0     0     0     0     0     0 #> [486,] 4.415431     0     0     0     0     0     0     0     0     0     0 #> [487,] 4.415469     0     0     0     0     0     0     0     0     0     0 #> [488,] 4.415433     0     0     0     0     0     0     0     0     0     0 #> [489,] 4.415395     0     0     0     0     0     0     0     0     0     0 #> [490,] 4.415357     0     0     0     0     0     0     0     0     0     0 #> [491,] 4.415320     0     0     0     0     0     0     0     0     0     0 #> [492,] 4.415282     0     0     0     0     0     0     0     0     0     0 #> [493,] 4.415245     0     0     0     0     0     0     0     0     0     0 #> [494,] 4.415207     0     0     0     0     0     0     0     0     0     0 #> [495,] 4.415169     0     0     0     0     0     0     0     0     0     0 #> [496,] 4.415132     0     0     0     0     0     0     0     0     0     0 #> [497,] 4.415094     0     0     0     0     0     0     0     0     0     0 #> [498,] 4.415057     0     0     0     0     0     0     0     0     0     0 #> [499,] 4.415019     0     0     0     0     0     0     0     0     0     0 #> [500,] 4.414981     0     0     0     0     0     0     0     0     0     0 #> [501,] 4.414944     0     0     0     0     0     0     0     0     0     0 #> [502,] 4.414906     0     0     0     0     0     0     0     0     0     0 #> [503,] 4.414869     0     0     0     0     0     0     0     0     0     0 #> [504,] 4.414831     0     0     0     0     0     0     0     0     0     0 #> [505,] 4.414793     0     0     0     0     0     0     0     0     0     0 #> [506,] 4.414756     0     0     0     0     0     0     0     0     0     0 #> [507,] 4.414718     0     0     0     0     0     0     0     0     0     0 #> [508,] 4.414681     0     0     0     0     0     0     0     0     0     0 #> [509,] 4.308724     0     0     0     0     0     0     0     0     0     0 #> [510,] 4.308687     0     0     0     0     0     0     0     0     0     0 #> [511,] 4.308650     0     0     0     0     0     0     0     0     0     0 #> [512,] 4.308614     0     0     0     0     0     0     0     0     0     0 #> [513,] 4.308577     0     0     0     0     0     0     0     0     0     0 #> [514,] 4.308540     0     0     0     0     0     0     0     0     0     0 #> [515,] 4.308504     0     0     0     0     0     0     0     0     0     0 #> [516,] 4.308467     0     0     0     0     0     0     0     0     0     0 #> [517,] 4.308430     0     0     0     0     0     0     0     0     0     0 #> [518,] 4.308394     0     0     0     0     0     0     0     0     0     0 #> [519,] 4.331070     0     0     0     0     0     0     0     0     0     0 #> [520,] 4.331033     0     0     0     0     0     0     0     0     0     0 #> [521,] 4.330996     0     0     0     0     0     0     0     0     0     0 #> [522,] 4.330959     0     0     0     0     0     0     0     0     0     0 #> [523,] 4.330923     0     0     0     0     0     0     0     0     0     0 #> [524,] 4.330886     0     0     0     0     0     0     0     0     0     0 #> [525,] 4.330849     0     0     0     0     0     0     0     0     0     0 #> [526,] 4.330812     0     0     0     0     0     0     0     0     0     0 #> [527,] 4.330775     0     0     0     0     0     0     0     0     0     0 #> [528,] 4.330738     0     0     0     0     0     0     0     0     0     0 #> [529,] 4.330701     0     0     0     0     0     0     0     0     0     0 #> [530,] 4.330664     0     0     0     0     0     0     0     0     0     0 #> [531,] 4.348843     0     0     0     0     0     0     0     0     0     0 #> [532,] 4.348806     0     0     0     0     0     0     0     0     0     0 #> [533,] 4.348769     0     0     0     0     0     0     0     0     0     0 #> [534,] 4.348732     0     0     0     0     0     0     0     0     0     0 #> [535,] 4.348695     0     0     0     0     0     0     0     0     0     0 #> [536,] 4.348658     0     0     0     0     0     0     0     0     0     0 #> [537,] 4.348621     0     0     0     0     0     0     0     0     0     0 #> [538,] 4.348584     0     0     0     0     0     0     0     0     0     0 #> [539,] 4.348547     0     0     0     0     0     0     0     0     0     0 #> [540,] 4.348510     0     0     0     0     0     0     0     0     0     0 #> [541,] 4.348473     0     0     0     0     0     0     0     0     0     0 #> [542,] 4.348436     0     0     0     0     0     0     0     0     0     0 #> [543,] 4.348399     0     0     0     0     0     0     0     0     0     0 #> [544,] 4.348362     0     0     0     0     0     0     0     0     0     0 #> [545,] 4.348325     0     0     0     0     0     0     0     0     0     0 #> [546,] 4.348288     0     0     0     0     0     0     0     0     0     0 #> [547,] 4.348251     0     0     0     0     0     0     0     0     0     0 #> [548,] 4.348214     0     0     0     0     0     0     0     0     0     0 #> [549,] 4.348177     0     0     0     0     0     0     0     0     0     0 #> [550,] 4.348140     0     0     0     0     0     0     0     0     0     0 #> [551,] 4.348103     0     0     0     0     0     0     0     0     0     0 #> [552,] 4.348066     0     0     0     0     0     0     0     0     0     0 #> [553,] 4.348029     0     0     0     0     0     0     0     0     0     0 #> [554,] 4.347992     0     0     0     0     0     0     0     0     0     0 #> [555,] 4.347955     0     0     0     0     0     0     0     0     0     0 #> [556,] 4.347918     0     0     0     0     0     0     0     0     0     0 #> [557,] 4.347881     0     0     0     0     0     0     0     0     0     0 #> [558,] 4.347844     0     0     0     0     0     0     0     0     0     0 #> [559,] 4.347807     0     0     0     0     0     0     0     0     0     0 #> [560,] 4.347770     0     0     0     0     0     0     0     0     0     0 #> [561,] 4.347733     0     0     0     0     0     0     0     0     0     0 #> [562,] 4.347696     0     0     0     0     0     0     0     0     0     0 #> [563,] 4.347659     0     0     0     0     0     0     0     0     0     0 #> [564,] 4.347621     0     0     0     0     0     0     0     0     0     0 #> [565,] 4.347584     0     0     0     0     0     0     0     0     0     0 #> [566,] 4.347547     0     0     0     0     0     0     0     0     0     0 #> [567,] 4.347510     0     0     0     0     0     0     0     0     0     0 #> [568,] 4.347473     0     0     0     0     0     0     0     0     0     0 #> [569,] 4.347436     0     0     0     0     0     0     0     0     0     0 #> [570,] 4.347399     0     0     0     0     0     0     0     0     0     0 #> [571,] 4.347362     0     0     0     0     0     0     0     0     0     0 #> [572,] 4.347325     0     0     0     0     0     0     0     0     0     0 #> [573,] 4.347288     0     0     0     0     0     0     0     0     0     0 #> [574,] 4.347251     0     0     0     0     0     0     0     0     0     0 #> [575,] 4.347214     0     0     0     0     0     0     0     0     0     0 #> [576,] 4.347177     0     0     0     0     0     0     0     0     0     0 #> [577,] 4.347140     0     0     0     0     0     0     0     0     0     0 #> [578,] 4.347103     0     0     0     0     0     0     0     0     0     0 #> [579,] 4.347066     0     0     0     0     0     0     0     0     0     0 #> [580,] 4.347029     0     0     0     0     0     0     0     0     0     0 #> [581,] 4.346992     0     0     0     0     0     0     0     0     0     0 #> [582,] 4.346955     0     0     0     0     0     0     0     0     0     0 #> [583,] 4.346918     0     0     0     0     0     0     0     0     0     0 #> [584,] 4.346881     0     0     0     0     0     0     0     0     0     0 #> [585,] 4.346844     0     0     0     0     0     0     0     0     0     0 #> [586,] 4.346807     0     0     0     0     0     0     0     0     0     0 #> [587,] 4.346770     0     0     0     0     0     0     0     0     0     0 #> [588,] 4.346733     0     0     0     0     0     0     0     0     0     0 #> [589,] 4.346696     0     0     0     0     0     0     0     0     0     0 #> [590,] 4.346659     0     0     0     0     0     0     0     0     0     0 #> [591,] 4.346622     0     0     0     0     0     0     0     0     0     0 #> [592,] 4.346585     0     0     0     0     0     0     0     0     0     0 #> [593,] 4.346548     0     0     0     0     0     0     0     0     0     0 #> [594,] 4.346511     0     0     0     0     0     0     0     0     0     0 #> [595,] 4.346474     0     0     0     0     0     0     0     0     0     0 #> [596,] 4.346437     0     0     0     0     0     0     0     0     0     0 #> [597,] 4.343145     0     0     0     0     0     0     0     0     0     0 #> [598,] 4.343108     0     0     0     0     0     0     0     0     0     0 #> [599,] 4.343071     0     0     0     0     0     0     0     0     0     0 #> [600,] 4.343034     0     0     0     0     0     0     0     0     0     0 #> [601,] 4.342997     0     0     0     0     0     0     0     0     0     0 #> [602,] 4.342960     0     0     0     0     0     0     0     0     0     0 #> [603,] 4.342923     0     0     0     0     0     0     0     0     0     0 #> [604,] 4.342886     0     0     0     0     0     0     0     0     0     0 #> [605,] 4.342849     0     0     0     0     0     0     0     0     0     0 #> [606,] 4.342812     0     0     0     0     0     0     0     0     0     0 #> [607,] 4.342775     0     0     0     0     0     0     0     0     0     0 #> [608,] 4.342738     0     0     0     0     0     0     0     0     0     0 #> [609,] 4.342701     0     0     0     0     0     0     0     0     0     0 #> [610,] 4.342664     0     0     0     0     0     0     0     0     0     0 #> [611,] 4.342627     0     0     0     0     0     0     0     0     0     0 #> [612,] 4.342590     0     0     0     0     0     0     0     0     0     0 #> [613,] 4.342553     0     0     0     0     0     0     0     0     0     0 #> [614,] 4.342516     0     0     0     0     0     0     0     0     0     0 #> [615,] 4.342479     0     0     0     0     0     0     0     0     0     0 #> [616,] 4.400078     0     0     0     0     0     0     0     0     0     0 #> [617,] 4.400040     0     0     0     0     0     0     0     0     0     0 #> [618,] 4.400003     0     0     0     0     0     0     0     0     0     0 #> [619,] 4.399965     0     0     0     0     0     0     0     0     0     0 #> [620,] 4.399928     0     0     0     0     0     0     0     0     0     0 #> [621,] 4.399890     0     0     0     0     0     0     0     0     0     0 #> [622,] 4.399853     0     0     0     0     0     0     0     0     0     0 #> [623,] 4.399815     0     0     0     0     0     0     0     0     0     0 #> [624,] 4.399778     0     0     0     0     0     0     0     0     0     0 #> [625,] 4.399740     0     0     0     0     0     0     0     0     0     0 #> [626,] 4.399703     0     0     0     0     0     0     0     0     0     0 #> [627,] 4.399665     0     0     0     0     0     0     0     0     0     0 #> [628,] 4.399628     0     0     0     0     0     0     0     0     0     0 #> [629,] 4.399601     0     0     0     0     0     0     0     0     0     0 #> [630,] 4.399553     0     0     0     0     0     0     0     0     0     0 #> [631,] 4.399516     0     0     0     0     0     0     0     0     0     0 #> [632,] 4.399478     0     0     0     0     0     0     0     0     0     0 #> [633,] 4.399441     0     0     0     0     0     0     0     0     0     0 #> [634,] 4.399403     0     0     0     0     0     0     0     0     0     0 #> [635,] 4.399366     0     0     0     0     0     0     0     0     0     0 #> [636,] 4.399328     0     0     0     0     0     0     0     0     0     0 #> [637,] 4.399291     0     0     0     0     0     0     0     0     0     0 #> [638,] 4.399253     0     0     0     0     0     0     0     0     0     0 #> [639,] 4.399216     0     0     0     0     0     0     0     0     0     0 #> [640,] 4.399179     0     0     0     0     0     0     0     0     0     0 #> [641,] 4.399141     0     0     0     0     0     0     0     0     0     0 #> [642,] 4.399104     0     0     0     0     0     0     0     0     0     0 #> [643,] 4.399066     0     0     0     0     0     0     0     0     0     0 #> [644,] 4.399029     0     0     0     0     0     0     0     0     0     0 #> [645,] 4.398991     0     0     0     0     0     0     0     0     0     0 #> [646,] 4.398954     0     0     0     0     0     0     0     0     0     0 #> [647,] 4.398916     0     0     0     0     0     0     0     0     0     0 #> [648,] 4.398879     0     0     0     0     0     0     0     0     0     0 #> [649,] 4.398841     0     0     0     0     0     0     0     0     0     0 #> [650,] 4.398804     0     0     0     0     0     0     0     0     0     0 #> [651,] 4.398767     0     0     0     0     0     0     0     0     0     0 #> [652,] 4.398729     0     0     0     0     0     0     0     0     0     0 #> [653,] 4.398692     0     0     0     0     0     0     0     0     0     0 #> [654,] 4.398654     0     0     0     0     0     0     0     0     0     0 #>        [,20] [,21] [,22] [,23] [,24] [,25] [,26] [,27] [,28]    [,29] [,30] #>   [1,]     0     0     0     0     0     0     0     0     0 3.892687     0 #>   [2,]     0     0     0     0     0     0     0     0     0 3.892654     0 #>   [3,]     0     0     0     0     0     0     0     0     0 3.892621     0 #>   [4,]     0     0     0     0     0     0     0     0     0 3.892588     0 #>   [5,]     0     0     0     0     0     0     0     0     0 3.892555     0 #>   [6,]     0     0     0     0     0     0     0     0     0 3.892522     0 #>   [7,]     0     0     0     0     0     0     0     0     0 3.892489     0 #>   [8,]     0     0     0     0     0     0     0     0     0 3.892455     0 #>   [9,]     0     0     0     0     0     0     0     0     0 3.892422     0 #>  [10,]     0     0     0     0     0     0     0     0     0 3.892389     0 #>  [11,]     0     0     0     0     0     0     0     0     0 3.892356     0 #>  [12,]     0     0     0     0     0     0     0     0     0 3.892323     0 #>  [13,]     0     0     0     0     0     0     0     0     0 3.892290     0 #>  [14,]     0     0     0     0     0     0     0     0     0 3.892257     0 #>  [15,]     0     0     0     0     0     0     0     0     0 3.892224     0 #>  [16,]     0     0     0     0     0     0     0     0     0 3.892190     0 #>  [17,]     0     0     0     0     0     0     0     0     0 3.892157     0 #>  [18,]     0     0     0     0     0     0     0     0     0 3.892124     0 #>  [19,]     0     0     0     0     0     0     0     0     0 3.892091     0 #>  [20,]     0     0     0     0     0     0     0     0     0 3.892058     0 #>  [21,]     0     0     0     0     0     0     0     0     0 3.892025     0 #>  [22,]     0     0     0     0     0     0     0     0     0 3.891992     0 #>  [23,]     0     0     0     0     0     0     0     0     0 3.891958     0 #>  [24,]     0     0     0     0     0     0     0     0     0 3.891925     0 #>  [25,]     0     0     0     0     0     0     0     0     0 3.891892     0 #>  [26,]     0     0     0     0     0     0     0     0     0 3.891859     0 #>  [27,]     0     0     0     0     0     0     0     0     0 3.891826     0 #>  [28,]     0     0     0     0     0     0     0     0     0 3.891793     0 #>  [29,]     0     0     0     0     0     0     0     0     0 3.891760     0 #>  [30,]     0     0     0     0     0     0     0     0     0 3.891726     0 #>  [31,]     0     0     0     0     0     0     0     0     0 3.891693     0 #>  [32,]     0     0     0     0     0     0     0     0     0 3.891660     0 #>  [33,]     0     0     0     0     0     0     0     0     0 3.891627     0 #>  [34,]     0     0     0     0     0     0     0     0     0 3.891594     0 #>  [35,]     0     0     0     0     0     0     0     0     0 3.891561     0 #>  [36,]     0     0     0     0     0     0     0     0     0 3.891528     0 #>  [37,]     0     0     0     0     0     0     0     0     0 3.891495     0 #>  [38,]     0     0     0     0     0     0     0     0     0 3.891461     0 #>  [39,]     0     0     0     0     0     0     0     0     0 3.891428     0 #>  [40,]     0     0     0     0     0     0     0     0     0 3.891395     0 #>  [41,]     0     0     0     0     0     0     0     0     0 3.891362     0 #>  [42,]     0     0     0     0     0     0     0     0     0 3.891329     0 #>  [43,]     0     0     0     0     0     0     0     0     0 3.891296     0 #>  [44,]     0     0     0     0     0     0     0     0     0 3.891263     0 #>  [45,]     0     0     0     0     0     0     0     0     0 3.891229     0 #>  [46,]     0     0     0     0     0     0     0     0     0 3.891196     0 #>  [47,]     0     0     0     0     0     0     0     0     0 3.891163     0 #>  [48,]     0     0     0     0     0     0     0     0     0 3.891130     0 #>  [49,]     0     0     0     0     0     0     0     0     0 3.891097     0 #>  [50,]     0     0     0     0     0     0     0     0     0 3.891064     0 #>  [51,]     0     0     0     0     0     0     0     0     0 3.891031     0 #>  [52,]     0     0     0     0     0     0     0     0     0 3.890998     0 #>  [53,]     0     0     0     0     0     0     0     0     0 3.890964     0 #>  [54,]     0     0     0     0     0     0     0     0     0 3.890931     0 #>  [55,]     0     0     0     0     0     0     0     0     0 3.890898     0 #>  [56,]     0     0     0     0     0     0     0     0     0 3.890865     0 #>  [57,]     0     0     0     0     0     0     0     0     0 3.890832     0 #>  [58,]     0     0     0     0     0     0     0     0     0 3.890799     0 #>  [59,]     0     0     0     0     0     0     0     0     0 3.890766     0 #>  [60,]     0     0     0     0     0     0     0     0     0 3.890733     0 #>  [61,]     0     0     0     0     0     0     0     0     0 3.890699     0 #>  [62,]     0     0     0     0     0     0     0     0     0 3.890666     0 #>  [63,]     0     0     0     0     0     0     0     0     0 3.890633     0 #>  [64,]     0     0     0     0     0     0     0     0     0 3.890600     0 #>  [65,]     0     0     0     0     0     0     0     0     0 3.890567     0 #>  [66,]     0     0     0     0     0     0     0     0     0 3.890534     0 #>  [67,]     0     0     0     0     0     0     0     0     0 3.890501     0 #>  [68,]     0     0     0     0     0     0     0     0     0 3.890468     0 #>  [69,]     0     0     0     0     0     0     0     0     0 3.890434     0 #>  [70,]     0     0     0     0     0     0     0     0     0 3.890401     0 #>  [71,]     0     0     0     0     0     0     0     0     0 3.890368     0 #>  [72,]     0     0     0     0     0     0     0     0     0 3.890335     0 #>  [73,]     0     0     0     0     0     0     0     0     0 3.890302     0 #>  [74,]     0     0     0     0     0     0     0     0     0 3.890269     0 #>  [75,]     0     0     0     0     0     0     0     0     0 3.890236     0 #>  [76,]     0     0     0     0     0     0     0     0     0 3.890203     0 #>  [77,]     0     0     0     0     0     0     0     0     0 3.890169     0 #>  [78,]     0     0     0     0     0     0     0     0     0 3.890136     0 #>  [79,]     0     0     0     0     0     0     0     0     0 3.890103     0 #>  [80,]     0     0     0     0     0     0     0     0     0 3.890070     0 #>  [81,]     0     0     0     0     0     0     0     0     0 3.890037     0 #>  [82,]     0     0     0     0     0     0     0     0     0 3.890004     0 #>  [83,]     0     0     0     0     0     0     0     0     0 3.889971     0 #>  [84,]     0     0     0     0     0     0     0     0     0 3.889938     0 #>  [85,]     0     0     0     0     0     0     0     0     0 3.889905     0 #>  [86,]     0     0     0     0     0     0     0     0     0 3.889871     0 #>  [87,]     0     0     0     0     0     0     0     0     0 3.889838     0 #>  [88,]     0     0     0     0     0     0     0     0     0 3.889805     0 #>  [89,]     0     0     0     0     0     0     0     0     0 3.889772     0 #>  [90,]     0     0     0     0     0     0     0     0     0 3.889739     0 #>  [91,]     0     0     0     0     0     0     0     0     0 3.889706     0 #>  [92,]     0     0     0     0     0     0     0     0     0 3.889673     0 #>  [93,]     0     0     0     0     0     0     0     0     0 3.889640     0 #>  [94,]     0     0     0     0     0     0     0     0     0 3.889606     0 #>  [95,]     0     0     0     0     0     0     0     0     0 3.889573     0 #>  [96,]     0     0     0     0     0     0     0     0     0 3.889540     0 #>  [97,]     0     0     0     0     0     0     0     0     0 3.889507     0 #>  [98,]     0     0     0     0     0     0     0     0     0 3.889474     0 #>  [99,]     0     0     0     0     0     0     0     0     0 3.889441     0 #> [100,]     0     0     0     0     0     0     0     0     0 3.889408     0 #> [101,]     0     0     0     0     0     0     0     0     0 3.889375     0 #> [102,]     0     0     0     0     0     0     0     0     0 3.889342     0 #> [103,]     0     0     0     0     0     0     0     0     0 3.889308     0 #> [104,]     0     0     0     0     0     0     0     0     0 3.889275     0 #> [105,]     0     0     0     0     0     0     0     0     0 3.889242     0 #> [106,]     0     0     0     0     0     0     0     0     0 3.889209     0 #> [107,]     0     0     0     0     0     0     0     0     0 3.889176     0 #> [108,]     0     0     0     0     0     0     0     0     0 3.889143     0 #> [109,]     0     0     0     0     0     0     0     0     0 3.889110     0 #> [110,]     0     0     0     0     0     0     0     0     0 3.889077     0 #> [111,]     0     0     0     0     0     0     0     0     0 3.889044     0 #> [112,]     0     0     0     0     0     0     0     0     0 3.889010     0 #> [113,]     0     0     0     0     0     0     0     0     0 3.888977     0 #> [114,]     0     0     0     0     0     0     0     0     0 3.888944     0 #> [115,]     0     0     0     0     0     0     0     0     0 3.888911     0 #> [116,]     0     0     0     0     0     0     0     0     0 3.888878     0 #> [117,]     0     0     0     0     0     0     0     0     0 3.888845     0 #> [118,]     0     0     0     0     0     0     0     0     0 3.888812     0 #> [119,]     0     0     0     0     0     0     0     0     0 3.888779     0 #> [120,]     0     0     0     0     0     0     0     0     0 3.888746     0 #> [121,]     0     0     0     0     0     0     0     0     0 3.888712     0 #> [122,]     0     0     0     0     0     0     0     0     0 3.888679     0 #> [123,]     0     0     0     0     0     0     0     0     0 3.888646     0 #> [124,]     0     0     0     0     0     0     0     0     0 3.888613     0 #> [125,]     0     0     0     0     0     0     0     0     0 3.888580     0 #> [126,]     0     0     0     0     0     0     0     0     0 3.888547     0 #> [127,]     0     0     0     0     0     0     0     0     0 3.888514     0 #> [128,]     0     0     0     0     0     0     0     0     0 3.888481     0 #> [129,]     0     0     0     0     0     0     0     0     0 3.888448     0 #> [130,]     0     0     0     0     0     0     0     0     0 3.888414     0 #> [131,]     0     0     0     0     0     0     0     0     0 3.888381     0 #> [132,]     0     0     0     0     0     0     0     0     0 3.888348     0 #> [133,]     0     0     0     0     0     0     0     0     0 3.888315     0 #> [134,]     0     0     0     0     0     0     0     0     0 3.888282     0 #> [135,]     0     0     0     0     0     0     0     0     0 3.888249     0 #> [136,]     0     0     0     0     0     0     0     0     0 3.888216     0 #> [137,]     0     0     0     0     0     0     0     0     0 3.888183     0 #> [138,]     0     0     0     0     0     0     0     0     0 3.888150     0 #> [139,]     0     0     0     0     0     0     0     0     0 3.888117     0 #> [140,]     0     0     0     0     0     0     0     0     0 3.888083     0 #> [141,]     0     0     0     0     0     0     0     0     0 3.888050     0 #> [142,]     0     0     0     0     0     0     0     0     0 3.888017     0 #> [143,]     0     0     0     0     0     0     0     0     0 3.887984     0 #> [144,]     0     0     0     0     0     0     0     0     0 3.887951     0 #> [145,]     0     0     0     0     0     0     0     0     0 3.887918     0 #> [146,]     0     0     0     0     0     0     0     0     0 3.887885     0 #> [147,]     0     0     0     0     0     0     0     0     0 3.887852     0 #> [148,]     0     0     0     0     0     0     0     0     0 3.887819     0 #> [149,]     0     0     0     0     0     0     0     0     0 3.887786     0 #> [150,]     0     0     0     0     0     0     0     0     0 3.887752     0 #> [151,]     0     0     0     0     0     0     0     0     0 3.887719     0 #> [152,]     0     0     0     0     0     0     0     0     0 3.887686     0 #> [153,]     0     0     0     0     0     0     0     0     0 3.887653     0 #> [154,]     0     0     0     0     0     0     0     0     0 3.887620     0 #> [155,]     0     0     0     0     0     0     0     0     0 3.887587     0 #> [156,]     0     0     0     0     0     0     0     0     0 3.887554     0 #> [157,]     0     0     0     0     0     0     0     0     0 3.887521     0 #> [158,]     0     0     0     0     0     0     0     0     0 3.887488     0 #> [159,]     0     0     0     0     0     0     0     0     0 3.887455     0 #> [160,]     0     0     0     0     0     0     0     0     0 3.887421     0 #> [161,]     0     0     0     0     0     0     0     0     0 3.887388     0 #> [162,]     0     0     0     0     0     0     0     0     0 3.887355     0 #> [163,]     0     0     0     0     0     0     0     0     0 3.887322     0 #> [164,]     0     0     0     0     0     0     0     0     0 3.887289     0 #> [165,]     0     0     0     0     0     0     0     0     0 3.887256     0 #> [166,]     0     0     0     0     0     0     0     0     0 3.887223     0 #> [167,]     0     0     0     0     0     0     0     0     0 3.887190     0 #> [168,]     0     0     0     0     0     0     0     0     0 3.887157     0 #> [169,]     0     0     0     0     0     0     0     0     0 3.887124     0 #> [170,]     0     0     0     0     0     0     0     0     0 3.887090     0 #> [171,]     0     0     0     0     0     0     0     0     0 3.887057     0 #> [172,]     0     0     0     0     0     0     0     0     0 3.887024     0 #> [173,]     0     0     0     0     0     0     0     0     0 3.886991     0 #> [174,]     0     0     0     0     0     0     0     0     0 3.886958     0 #> [175,]     0     0     0     0     0     0     0     0     0 3.886925     0 #> [176,]     0     0     0     0     0     0     0     0     0 3.886892     0 #> [177,]     0     0     0     0     0     0     0     0     0 3.886859     0 #> [178,]     0     0     0     0     0     0     0     0     0 3.886826     0 #> [179,]     0     0     0     0     0     0     0     0     0 3.886793     0 #> [180,]     0     0     0     0     0     0     0     0     0 3.886760     0 #> [181,]     0     0     0     0     0     0     0     0     0 3.886726     0 #> [182,]     0     0     0     0     0     0     0     0     0 3.886693     0 #> [183,]     0     0     0     0     0     0     0     0     0 3.886660     0 #> [184,]     0     0     0     0     0     0     0     0     0 3.886627     0 #> [185,]     0     0     0     0     0     0     0     0     0 3.886594     0 #> [186,]     0     0     0     0     0     0     0     0     0 3.886561     0 #> [187,]     0     0     0     0     0     0     0     0     0 3.886528     0 #> [188,]     0     0     0     0     0     0     0     0     0 3.886495     0 #> [189,]     0     0     0     0     0     0     0     0     0 3.886462     0 #> [190,]     0     0     0     0     0     0     0     0     0 3.886429     0 #> [191,]     0     0     0     0     0     0     0     0     0 3.886396     0 #> [192,]     0     0     0     0     0     0     0     0     0 3.886362     0 #> [193,]     0     0     0     0     0     0     0     0     0 3.886329     0 #> [194,]     0     0     0     0     0     0     0     0     0 3.886296     0 #> [195,]     0     0     0     0     0     0     0     0     0 3.886263     0 #> [196,]     0     0     0     0     0     0     0     0     0 3.886230     0 #> [197,]     0     0     0     0     0     0     0     0     0 3.886197     0 #> [198,]     0     0     0     0     0     0     0     0     0 3.886164     0 #> [199,]     0     0     0     0     0     0     0     0     0 3.886131     0 #> [200,]     0     0     0     0     0     0     0     0     0 3.886098     0 #> [201,]     0     0     0     0     0     0     0     0     0 3.886065     0 #> [202,]     0     0     0     0     0     0     0     0     0 3.886032     0 #> [203,]     0     0     0     0     0     0     0     0     0 3.885999     0 #> [204,]     0     0     0     0     0     0     0     0     0 3.885965     0 #> [205,]     0     0     0     0     0     0     0     0     0 3.885932     0 #> [206,]     0     0     0     0     0     0     0     0     0 3.885899     0 #> [207,]     0     0     0     0     0     0     0     0     0 3.885866     0 #> [208,]     0     0     0     0     0     0     0     0     0 3.885833     0 #> [209,]     0     0     0     0     0     0     0     0     0 3.885800     0 #> [210,]     0     0     0     0     0     0     0     0     0 3.885767     0 #> [211,]     0     0     0     0     0     0     0     0     0 3.885734     0 #> [212,]     0     0     0     0     0     0     0     0     0 3.885701     0 #> [213,]     0     0     0     0     0     0     0     0     0 3.885668     0 #> [214,]     0     0     0     0     0     0     0     0     0 3.885635     0 #> [215,]     0     0     0     0     0     0     0     0     0 3.885601     0 #> [216,]     0     0     0     0     0     0     0     0     0 3.885568     0 #> [217,]     0     0     0     0     0     0     0     0     0 3.885535     0 #> [218,]     0     0     0     0     0     0     0     0     0 3.885502     0 #> [219,]     0     0     0     0     0     0     0     0     0 3.885469     0 #> [220,]     0     0     0     0     0     0     0     0     0 3.885436     0 #> [221,]     0     0     0     0     0     0     0     0     0 3.885403     0 #> [222,]     0     0     0     0     0     0     0     0     0 3.885370     0 #> [223,]     0     0     0     0     0     0     0     0     0 3.885337     0 #> [224,]     0     0     0     0     0     0     0     0     0 3.885304     0 #> [225,]     0     0     0     0     0     0     0     0     0 3.885271     0 #> [226,]     0     0     0     0     0     0     0     0     0 3.885238     0 #> [227,]     0     0     0     0     0     0     0     0     0 3.885205     0 #> [228,]     0     0     0     0     0     0     0     0     0 3.885171     0 #> [229,]     0     0     0     0     0     0     0     0     0 3.885138     0 #> [230,]     0     0     0     0     0     0     0     0     0 3.885105     0 #> [231,]     0     0     0     0     0     0     0     0     0 3.885072     0 #> [232,]     0     0     0     0     0     0     0     0     0 3.885039     0 #> [233,]     0     0     0     0     0     0     0     0     0 3.885006     0 #> [234,]     0     0     0     0     0     0     0     0     0 3.884973     0 #> [235,]     0     0     0     0     0     0     0     0     0 3.884940     0 #> [236,]     0     0     0     0     0     0     0     0     0 3.884907     0 #> [237,]     0     0     0     0     0     0     0     0     0 3.884874     0 #> [238,]     0     0     0     0     0     0     0     0     0 3.884841     0 #> [239,]     0     0     0     0     0     0     0     0     0 3.884808     0 #> [240,]     0     0     0     0     0     0     0     0     0 3.884775     0 #> [241,]     0     0     0     0     0     0     0     0     0 3.884741     0 #> [242,]     0     0     0     0     0     0     0     0     0 3.884708     0 #> [243,]     0     0     0     0     0     0     0     0     0 3.884675     0 #> [244,]     0     0     0     0     0     0     0     0     0 3.884642     0 #> [245,]     0     0     0     0     0     0     0     0     0 3.884609     0 #> [246,]     0     0     0     0     0     0     0     0     0 3.884576     0 #> [247,]     0     0     0     0     0     0     0     0     0 3.884543     0 #> [248,]     0     0     0     0     0     0     0     0     0 3.884510     0 #> [249,]     0     0     0     0     0     0     0     0     0 3.884477     0 #> [250,]     0     0     0     0     0     0     0     0     0 3.884444     0 #> [251,]     0     0     0     0     0     0     0     0     0 3.884411     0 #> [252,]     0     0     0     0     0     0     0     0     0 3.884378     0 #> [253,]     0     0     0     0     0     0     0     0     0 3.884345     0 #> [254,]     0     0     0     0     0     0     0     0     0 3.884312     0 #> [255,]     0     0     0     0     0     0     0     0     0 3.884278     0 #> [256,]     0     0     0     0     0     0     0     0     0 3.884245     0 #> [257,]     0     0     0     0     0     0     0     0     0 3.884212     0 #> [258,]     0     0     0     0     0     0     0     0     0 3.884179     0 #> [259,]     0     0     0     0     0     0     0     0     0 3.884146     0 #> [260,]     0     0     0     0     0     0     0     0     0 3.884113     0 #> [261,]     0     0     0     0     0     0     0     0     0 3.884080     0 #> [262,]     0     0     0     0     0     0     0     0     0 3.884047     0 #> [263,]     0     0     0     0     0     0     0     0     0 3.884014     0 #> [264,]     0     0     0     0     0     0     0     0     0 3.883981     0 #> [265,]     0     0     0     0     0     0     0     0     0 3.883948     0 #> [266,]     0     0     0     0     0     0     0     0     0 3.883915     0 #> [267,]     0     0     0     0     0     0     0     0     0 3.883882     0 #> [268,]     0     0     0     0     0     0     0     0     0 3.883849     0 #> [269,]     0     0     0     0     0     0     0     0     0 3.883815     0 #> [270,]     0     0     0     0     0     0     0     0     0 3.883782     0 #> [271,]     0     0     0     0     0     0     0     0     0 3.883749     0 #> [272,]     0     0     0     0     0     0     0     0     0 3.883716     0 #> [273,]     0     0     0     0     0     0     0     0     0 3.883683     0 #> [274,]     0     0     0     0     0     0     0     0     0 3.883650     0 #> [275,]     0     0     0     0     0     0     0     0     0 3.883617     0 #> [276,]     0     0     0     0     0     0     0     0     0 3.883584     0 #> [277,]     0     0     0     0     0     0     0     0     0 3.883551     0 #> [278,]     0     0     0     0     0     0     0     0     0 3.883518     0 #> [279,]     0     0     0     0     0     0     0     0     0 3.883485     0 #> [280,]     0     0     0     0     0     0     0     0     0 3.883452     0 #> [281,]     0     0     0     0     0     0     0     0     0 3.883419     0 #> [282,]     0     0     0     0     0     0     0     0     0 3.883386     0 #> [283,]     0     0     0     0     0     0     0     0     0 3.883353     0 #> [284,]     0     0     0     0     0     0     0     0     0 3.883320     0 #> [285,]     0     0     0     0     0     0     0     0     0 3.883286     0 #> [286,]     0     0     0     0     0     0     0     0     0 3.883253     0 #> [287,]     0     0     0     0     0     0     0     0     0 3.883220     0 #> [288,]     0     0     0     0     0     0     0     0     0 3.883187     0 #> [289,]     0     0     0     0     0     0     0     0     0 3.883154     0 #> [290,]     0     0     0     0     0     0     0     0     0 3.883121     0 #> [291,]     0     0     0     0     0     0     0     0     0 3.883088     0 #> [292,]     0     0     0     0     0     0     0     0     0 3.883055     0 #> [293,]     0     0     0     0     0     0     0     0     0 3.883022     0 #> [294,]     0     0     0     0     0     0     0     0     0 3.882989     0 #> [295,]     0     0     0     0     0     0     0     0     0 3.882956     0 #> [296,]     0     0     0     0     0     0     0     0     0 3.882923     0 #> [297,]     0     0     0     0     0     0     0     0     0 3.882890     0 #> [298,]     0     0     0     0     0     0     0     0     0 3.882857     0 #> [299,]     0     0     0     0     0     0     0     0     0 3.882824     0 #> [300,]     0     0     0     0     0     0     0     0     0 3.882791     0 #> [301,]     0     0     0     0     0     0     0     0     0 3.882757     0 #> [302,]     0     0     0     0     0     0     0     0     0 3.882724     0 #> [303,]     0     0     0     0     0     0     0     0     0 3.882691     0 #> [304,]     0     0     0     0     0     0     0     0     0 3.882658     0 #> [305,]     0     0     0     0     0     0     0     0     0 3.882625     0 #> [306,]     0     0     0     0     0     0     0     0     0 3.882592     0 #> [307,]     0     0     0     0     0     0     0     0     0 3.882559     0 #> [308,]     0     0     0     0     0     0     0     0     0 3.882526     0 #> [309,]     0     0     0     0     0     0     0     0     0 3.902230     0 #> [310,]     0     0     0     0     0     0     0     0     0 3.902197     0 #> [311,]     0     0     0     0     0     0     0     0     0 3.902164     0 #> [312,]     0     0     0     0     0     0     0     0     0 3.902130     0 #> [313,]     0     0     0     0     0     0     0     0     0 3.902097     0 #> [314,]     0     0     0     0     0     0     0     0     0 3.902064     0 #> [315,]     0     0     0     0     0     0     0     0     0 3.902031     0 #> [316,]     0     0     0     0     0     0     0     0     0 3.901997     0 #> [317,]     0     0     0     0     0     0     0     0     0 3.901964     0 #> [318,]     0     0     0     0     0     0     0     0     0 3.901931     0 #> [319,]     0     0     0     0     0     0     0     0     0 3.901898     0 #> [320,]     0     0     0     0     0     0     0     0     0 3.901865     0 #> [321,]     0     0     0     0     0     0     0     0     0 3.901831     0 #> [322,]     0     0     0     0     0     0     0     0     0 3.903940     0 #> [323,]     0     0     0     0     0     0     0     0     0 3.903907     0 #> [324,]     0     0     0     0     0     0     0     0     0 3.903873     0 #> [325,]     0     0     0     0     0     0     0     0     0 3.903840     0 #> [326,]     0     0     0     0     0     0     0     0     0 3.903807     0 #> [327,]     0     0     0     0     0     0     0     0     0 3.903774     0 #> [328,]     0     0     0     0     0     0     0     0     0 3.903740     0 #> [329,]     0     0     0     0     0     0     0     0     0 3.903707     0 #> [330,]     0     0     0     0     0     0     0     0     0 3.903674     0 #> [331,]     0     0     0     0     0     0     0     0     0 3.903641     0 #> [332,]     0     0     0     0     0     0     0     0     0 3.903608     0 #> [333,]     0     0     0     0     0     0     0     0     0 3.903574     0 #> [334,]     0     0     0     0     0     0     0     0     0 3.903541     0 #> [335,]     0     0     0     0     0     0     0     0     0 3.903508     0 #> [336,]     0     0     0     0     0     0     0     0     0 3.903475     0 #> [337,]     0     0     0     0     0     0     0     0     0 3.903441     0 #> [338,]     0     0     0     0     0     0     0     0     0 3.903408     0 #> [339,]     0     0     0     0     0     0     0     0     0 3.903375     0 #> [340,]     0     0     0     0     0     0     0     0     0 3.903342     0 #> [341,]     0     0     0     0     0     0     0     0     0 3.903308     0 #> [342,]     0     0     0     0     0     0     0     0     0 3.903275     0 #> [343,]     0     0     0     0     0     0     0     0     0 3.903242     0 #> [344,]     0     0     0     0     0     0     0     0     0 3.903209     0 #> [345,]     0     0     0     0     0     0     0     0     0 3.903176     0 #> [346,]     0     0     0     0     0     0     0     0     0 3.903142     0 #> [347,]     0     0     0     0     0     0     0     0     0 3.903109     0 #> [348,]     0     0     0     0     0     0     0     0     0 3.903076     0 #> [349,]     0     0     0     0     0     0     0     0     0 3.903043     0 #> [350,]     0     0     0     0     0     0     0     0     0 3.903009     0 #> [351,]     0     0     0     0     0     0     0     0     0 3.902976     0 #> [352,]     0     0     0     0     0     0     0     0     0 3.902943     0 #> [353,]     0     0     0     0     0     0     0     0     0 3.902910     0 #> [354,]     0     0     0     0     0     0     0     0     0 3.902876     0 #> [355,]     0     0     0     0     0     0     0     0     0 3.902843     0 #> [356,]     0     0     0     0     0     0     0     0     0 3.902810     0 #> [357,]     0     0     0     0     0     0     0     0     0 3.902777     0 #> [358,]     0     0     0     0     0     0     0     0     0 3.902744     0 #> [359,]     0     0     0     0     0     0     0     0     0 3.902710     0 #> [360,]     0     0     0     0     0     0     0     0     0 3.902677     0 #> [361,]     0     0     0     0     0     0     0     0     0 3.919111     0 #> [362,]     0     0     0     0     0     0     0     0     0 3.919077     0 #> [363,]     0     0     0     0     0     0     0     0     0 3.919044     0 #> [364,]     0     0     0     0     0     0     0     0     0 3.919011     0 #> [365,]     0     0     0     0     0     0     0     0     0 3.918977     0 #> [366,]     0     0     0     0     0     0     0     0     0 3.918944     0 #> [367,]     0     0     0     0     0     0     0     0     0 3.918911     0 #> [368,]     0     0     0     0     0     0     0     0     0 3.918877     0 #> [369,]     0     0     0     0     0     0     0     0     0 3.918844     0 #> [370,]     0     0     0     0     0     0     0     0     0 3.918811     0 #> [371,]     0     0     0     0     0     0     0     0     0 3.918777     0 #> [372,]     0     0     0     0     0     0     0     0     0 3.918744     0 #> [373,]     0     0     0     0     0     0     0     0     0 3.918710     0 #> [374,]     0     0     0     0     0     0     0     0     0 3.918677     0 #> [375,]     0     0     0     0     0     0     0     0     0 3.916442     0 #> [376,]     0     0     0     0     0     0     0     0     0 3.916409     0 #> [377,]     0     0     0     0     0     0     0     0     0 3.916376     0 #> [378,]     0     0     0     0     0     0     0     0     0 3.916342     0 #> [379,]     0     0     0     0     0     0     0     0     0 3.916309     0 #> [380,]     0     0     0     0     0     0     0     0     0 3.916276     0 #> [381,]     0     0     0     0     0     0     0     0     0 3.916242     0 #> [382,]     0     0     0     0     0     0     0     0     0 3.916209     0 #> [383,]     0     0     0     0     0     0     0     0     0 3.916176     0 #> [384,]     0     0     0     0     0     0     0     0     0 3.916142     0 #> [385,]     0     0     0     0     0     0     0     0     0 3.916109     0 #> [386,]     0     0     0     0     0     0     0     0     0 3.916076     0 #> [387,]     0     0     0     0     0     0     0     0     0 3.916042     0 #> [388,]     0     0     0     0     0     0     0     0     0 3.916009     0 #> [389,]     0     0     0     0     0     0     0     0     0 3.915976     0 #> [390,]     0     0     0     0     0     0     0     0     0 3.915942     0 #> [391,]     0     0     0     0     0     0     0     0     0 3.915909     0 #> [392,]     0     0     0     0     0     0     0     0     0 3.915876     0 #> [393,]     0     0     0     0     0     0     0     0     0 3.915842     0 #> [394,]     0     0     0     0     0     0     0     0     0 3.915809     0 #> [395,]     0     0     0     0     0     0     0     0     0 3.915776     0 #> [396,]     0     0     0     0     0     0     0     0     0 3.915742     0 #> [397,]     0     0     0     0     0     0     0     0     0 3.915709     0 #> [398,]     0     0     0     0     0     0     0     0     0 3.915676     0 #> [399,]     0     0     0     0     0     0     0     0     0 3.915642     0 #> [400,]     0     0     0     0     0     0     0     0     0 3.915609     0 #> [401,]     0     0     0     0     0     0     0     0     0 3.915576     0 #> [402,]     0     0     0     0     0     0     0     0     0 3.915542     0 #> [403,]     0     0     0     0     0     0     0     0     0 3.915509     0 #> [404,]     0     0     0     0     0     0     0     0     0 3.915475     0 #> [405,]     0     0     0     0     0     0     0     0     0 3.915442     0 #> [406,]     0     0     0     0     0     0     0     0     0 3.915409     0 #> [407,]     0     0     0     0     0     0     0     0     0 3.915375     0 #> [408,]     0     0     0     0     0     0     0     0     0 3.915342     0 #> [409,]     0     0     0     0     0     0     0     0     0 3.915309     0 #> [410,]     0     0     0     0     0     0     0     0     0 3.915275     0 #> [411,]     0     0     0     0     0     0     0     0     0 3.915242     0 #> [412,]     0     0     0     0     0     0     0     0     0 3.915209     0 #> [413,]     0     0     0     0     0     0     0     0     0 3.915175     0 #> [414,]     0     0     0     0     0     0     0     0     0 3.915142     0 #> [415,]     0     0     0     0     0     0     0     0     0 3.915109     0 #> [416,]     0     0     0     0     0     0     0     0     0 3.915075     0 #> [417,]     0     0     0     0     0     0     0     0     0 3.915042     0 #> [418,]     0     0     0     0     0     0     0     0     0 3.915009     0 #> [419,]     0     0     0     0     0     0     0     0     0 3.914975     0 #> [420,]     0     0     0     0     0     0     0     0     0 3.914942     0 #> [421,]     0     0     0     0     0     0     0     0     0 3.914909     0 #> [422,]     0     0     0     0     0     0     0     0     0 3.914875     0 #> [423,]     0     0     0     0     0     0     0     0     0 3.914842     0 #> [424,]     0     0     0     0     0     0     0     0     0 3.914809     0 #> [425,]     0     0     0     0     0     0     0     0     0 3.914775     0 #> [426,]     0     0     0     0     0     0     0     0     0 3.914742     0 #> [427,]     0     0     0     0     0     0     0     0     0 3.914709     0 #> [428,]     0     0     0     0     0     0     0     0     0 3.914676     0 #> [429,]     0     0     0     0     0     0     0     0     0 3.914642     0 #> [430,]     0     0     0     0     0     0     0     0     0 3.914609     0 #> [431,]     0     0     0     0     0     0     0     0     0 3.914576     0 #> [432,]     0     0     0     0     0     0     0     0     0 3.914542     0 #> [433,]     0     0     0     0     0     0     0     0     0 3.914509     0 #> [434,]     0     0     0     0     0     0     0     0     0 3.914476     0 #> [435,]     0     0     0     0     0     0     0     0     0 3.914442     0 #> [436,]     0     0     0     0     0     0     0     0     0 3.914409     0 #> [437,]     0     0     0     0     0     0     0     0     0 3.914376     0 #> [438,]     0     0     0     0     0     0     0     0     0 3.914342     0 #> [439,]     0     0     0     0     0     0     0     0     0 3.914309     0 #> [440,]     0     0     0     0     0     0     0     0     0 3.914276     0 #> [441,]     0     0     0     0     0     0     0     0     0 3.914242     0 #> [442,]     0     0     0     0     0     0     0     0     0 3.914209     0 #> [443,]     0     0     0     0     0     0     0     0     0 3.914176     0 #> [444,]     0     0     0     0     0     0     0     0     0 3.914142     0 #> [445,]     0     0     0     0     0     0     0     0     0 3.914109     0 #> [446,]     0     0     0     0     0     0     0     0     0 3.914076     0 #> [447,]     0     0     0     0     0     0     0     0     0 3.914042     0 #> [448,]     0     0     0     0     0     0     0     0     0 3.914009     0 #> [449,]     0     0     0     0     0     0     0     0     0 3.913976     0 #> [450,]     0     0     0     0     0     0     0     0     0 3.913942     0 #> [451,]     0     0     0     0     0     0     0     0     0 3.913909     0 #> [452,]     0     0     0     0     0     0     0     0     0 3.913876     0 #> [453,]     0     0     0     0     0     0     0     0     0 3.913842     0 #> [454,]     0     0     0     0     0     0     0     0     0 3.913809     0 #> [455,]     0     0     0     0     0     0     0     0     0 3.913776     0 #> [456,]     0     0     0     0     0     0     0     0     0 3.913742     0 #> [457,]     0     0     0     0     0     0     0     0     0 3.913709     0 #> [458,]     0     0     0     0     0     0     0     0     0 3.913676     0 #> [459,]     0     0     0     0     0     0     0     0     0 3.913642     0 #> [460,]     0     0     0     0     0     0     0     0     0 3.963494     0 #> [461,]     0     0     0     0     0     0     0     0     0 3.963460     0 #> [462,]     0     0     0     0     0     0     0     0     0 3.979425     0 #> [463,]     0     0     0     0     0     0     0     0     0 3.979391     0 #> [464,]     0     0     0     0     0     0     0     0     0 3.979357     0 #> [465,]     0     0     0     0     0     0     0     0     0 3.979323     0 #> [466,]     0     0     0     0     0     0     0     0     0 3.979290     0 #> [467,]     0     0     0     0     0     0     0     0     0 3.979256     0 #> [468,]     0     0     0     0     0     0     0     0     0 3.913609     0 #> [469,]     0     0     0     0     0     0     0     0     0 3.913576     0 #> [470,]     0     0     0     0     0     0     0     0     0 3.913542     0 #> [471,]     0     0     0     0     0     0     0     0     0 3.979222     0 #> [472,]     0     0     0     0     0     0     0     0     0 3.979188     0 #> [473,]     0     0     0     0     0     0     0     0     0 3.979154     0 #> [474,]     0     0     0     0     0     0     0     0     0 3.979120     0 #> [475,]     0     0     0     0     0     0     0     0     0 3.979086     0 #> [476,]     0     0     0     0     0     0     0     0     0 3.979052     0 #> [477,]     0     0     0     0     0     0     0     0     0 3.979018     0 #> [478,]     0     0     0     0     0     0     0     0     0 3.978985     0 #> [479,]     0     0     0     0     0     0     0     0     0 3.978951     0 #> [480,]     0     0     0     0     0     0     0     0     0 3.978917     0 #> [481,]     0     0     0     0     0     0     0     0     0 3.978883     0 #> [482,]     0     0     0     0     0     0     0     0     0 3.978849     0 #> [483,]     0     0     0     0     0     0     0     0     0 3.978815     0 #> [484,]     0     0     0     0     0     0     0     0     0 3.978781     0 #> [485,]     0     0     0     0     0     0     0     0     0 3.978747     0 #> [486,]     0     0     0     0     0     0     0     0     0 3.978714     0 #> [487,]     0     0     0     0     0     0     0     0     0 3.978680     0 #> [488,]     0     0     0     0     0     0     0     0     0 3.978646     0 #> [489,]     0     0     0     0     0     0     0     0     0 3.978612     0 #> [490,]     0     0     0     0     0     0     0     0     0 3.978578     0 #> [491,]     0     0     0     0     0     0     0     0     0 3.978544     0 #> [492,]     0     0     0     0     0     0     0     0     0 3.978510     0 #> [493,]     0     0     0     0     0     0     0     0     0 3.978476     0 #> [494,]     0     0     0     0     0     0     0     0     0 3.978443     0 #> [495,]     0     0     0     0     0     0     0     0     0 3.978409     0 #> [496,]     0     0     0     0     0     0     0     0     0 3.978375     0 #> [497,]     0     0     0     0     0     0     0     0     0 3.978341     0 #> [498,]     0     0     0     0     0     0     0     0     0 3.978307     0 #> [499,]     0     0     0     0     0     0     0     0     0 3.978273     0 #> [500,]     0     0     0     0     0     0     0     0     0 3.978239     0 #> [501,]     0     0     0     0     0     0     0     0     0 3.978206     0 #> [502,]     0     0     0     0     0     0     0     0     0 3.978172     0 #> [503,]     0     0     0     0     0     0     0     0     0 3.978138     0 #> [504,]     0     0     0     0     0     0     0     0     0 3.978104     0 #> [505,]     0     0     0     0     0     0     0     0     0 3.978070     0 #> [506,]     0     0     0     0     0     0     0     0     0 3.978036     0 #> [507,]     0     0     0     0     0     0     0     0     0 3.978002     0 #> [508,]     0     0     0     0     0     0     0     0     0 3.977968     0 #> [509,]     0     0     0     0     0     0     0     0     0 3.882493     0 #> [510,]     0     0     0     0     0     0     0     0     0 3.882460     0 #> [511,]     0     0     0     0     0     0     0     0     0 3.882427     0 #> [512,]     0     0     0     0     0     0     0     0     0 3.882394     0 #> [513,]     0     0     0     0     0     0     0     0     0 3.882361     0 #> [514,]     0     0     0     0     0     0     0     0     0 3.882328     0 #> [515,]     0     0     0     0     0     0     0     0     0 3.882295     0 #> [516,]     0     0     0     0     0     0     0     0     0 3.882262     0 #> [517,]     0     0     0     0     0     0     0     0     0 3.882229     0 #> [518,]     0     0     0     0     0     0     0     0     0 3.882196     0 #> [519,]     0     0     0     0     0     0     0     0     0 3.902629     0 #> [520,]     0     0     0     0     0     0     0     0     0 3.902596     0 #> [521,]     0     0     0     0     0     0     0     0     0 3.902562     0 #> [522,]     0     0     0     0     0     0     0     0     0 3.902529     0 #> [523,]     0     0     0     0     0     0     0     0     0 3.902496     0 #> [524,]     0     0     0     0     0     0     0     0     0 3.902463     0 #> [525,]     0     0     0     0     0     0     0     0     0 3.902429     0 #> [526,]     0     0     0     0     0     0     0     0     0 3.902396     0 #> [527,]     0     0     0     0     0     0     0     0     0 3.902363     0 #> [528,]     0     0     0     0     0     0     0     0     0 3.902330     0 #> [529,]     0     0     0     0     0     0     0     0     0 3.902297     0 #> [530,]     0     0     0     0     0     0     0     0     0 3.902263     0 #> [531,]     0     0     0     0     0     0     0     0     0 3.918644     0 #> [532,]     0     0     0     0     0     0     0     0     0 3.918610     0 #> [533,]     0     0     0     0     0     0     0     0     0 3.918577     0 #> [534,]     0     0     0     0     0     0     0     0     0 3.918544     0 #> [535,]     0     0     0     0     0     0     0     0     0 3.918510     0 #> [536,]     0     0     0     0     0     0     0     0     0 3.918477     0 #> [537,]     0     0     0     0     0     0     0     0     0 3.918444     0 #> [538,]     0     0     0     0     0     0     0     0     0 3.918410     0 #> [539,]     0     0     0     0     0     0     0     0     0 3.918377     0 #> [540,]     0     0     0     0     0     0     0     0     0 3.918343     0 #> [541,]     0     0     0     0     0     0     0     0     0 3.918310     0 #> [542,]     0     0     0     0     0     0     0     0     0 3.918277     0 #> [543,]     0     0     0     0     0     0     0     0     0 3.918243     0 #> [544,]     0     0     0     0     0     0     0     0     0 3.918210     0 #> [545,]     0     0     0     0     0     0     0     0     0 3.918177     0 #> [546,]     0     0     0     0     0     0     0     0     0 3.918143     0 #> [547,]     0     0     0     0     0     0     0     0     0 3.918110     0 #> [548,]     0     0     0     0     0     0     0     0     0 3.918077     0 #> [549,]     0     0     0     0     0     0     0     0     0 3.918043     0 #> [550,]     0     0     0     0     0     0     0     0     0 3.918010     0 #> [551,]     0     0     0     0     0     0     0     0     0 3.917977     0 #> [552,]     0     0     0     0     0     0     0     0     0 3.917943     0 #> [553,]     0     0     0     0     0     0     0     0     0 3.917910     0 #> [554,]     0     0     0     0     0     0     0     0     0 3.917876     0 #> [555,]     0     0     0     0     0     0     0     0     0 3.917843     0 #> [556,]     0     0     0     0     0     0     0     0     0 3.917810     0 #> [557,]     0     0     0     0     0     0     0     0     0 3.917776     0 #> [558,]     0     0     0     0     0     0     0     0     0 3.917743     0 #> [559,]     0     0     0     0     0     0     0     0     0 3.917710     0 #> [560,]     0     0     0     0     0     0     0     0     0 3.917676     0 #> [561,]     0     0     0     0     0     0     0     0     0 3.917643     0 #> [562,]     0     0     0     0     0     0     0     0     0 3.917610     0 #> [563,]     0     0     0     0     0     0     0     0     0 3.917576     0 #> [564,]     0     0     0     0     0     0     0     0     0 3.917543     0 #> [565,]     0     0     0     0     0     0     0     0     0 3.917510     0 #> [566,]     0     0     0     0     0     0     0     0     0 3.917476     0 #> [567,]     0     0     0     0     0     0     0     0     0 3.917443     0 #> [568,]     0     0     0     0     0     0     0     0     0 3.917409     0 #> [569,]     0     0     0     0     0     0     0     0     0 3.917376     0 #> [570,]     0     0     0     0     0     0     0     0     0 3.917343     0 #> [571,]     0     0     0     0     0     0     0     0     0 3.917309     0 #> [572,]     0     0     0     0     0     0     0     0     0 3.917276     0 #> [573,]     0     0     0     0     0     0     0     0     0 3.917243     0 #> [574,]     0     0     0     0     0     0     0     0     0 3.917209     0 #> [575,]     0     0     0     0     0     0     0     0     0 3.917176     0 #> [576,]     0     0     0     0     0     0     0     0     0 3.917143     0 #> [577,]     0     0     0     0     0     0     0     0     0 3.917109     0 #> [578,]     0     0     0     0     0     0     0     0     0 3.917076     0 #> [579,]     0     0     0     0     0     0     0     0     0 3.917043     0 #> [580,]     0     0     0     0     0     0     0     0     0 3.917009     0 #> [581,]     0     0     0     0     0     0     0     0     0 3.916976     0 #> [582,]     0     0     0     0     0     0     0     0     0 3.916943     0 #> [583,]     0     0     0     0     0     0     0     0     0 3.916909     0 #> [584,]     0     0     0     0     0     0     0     0     0 3.916876     0 #> [585,]     0     0     0     0     0     0     0     0     0 3.916843     0 #> [586,]     0     0     0     0     0     0     0     0     0 3.916809     0 #> [587,]     0     0     0     0     0     0     0     0     0 3.916776     0 #> [588,]     0     0     0     0     0     0     0     0     0 3.916742     0 #> [589,]     0     0     0     0     0     0     0     0     0 3.916709     0 #> [590,]     0     0     0     0     0     0     0     0     0 3.916676     0 #> [591,]     0     0     0     0     0     0     0     0     0 3.916642     0 #> [592,]     0     0     0     0     0     0     0     0     0 3.916609     0 #> [593,]     0     0     0     0     0     0     0     0     0 3.916576     0 #> [594,]     0     0     0     0     0     0     0     0     0 3.916542     0 #> [595,]     0     0     0     0     0     0     0     0     0 3.916509     0 #> [596,]     0     0     0     0     0     0     0     0     0 3.916476     0 #> [597,]     0     0     0     0     0     0     0     0     0 3.913509     0 #> [598,]     0     0     0     0     0     0     0     0     0 3.913476     0 #> [599,]     0     0     0     0     0     0     0     0     0 3.913443     0 #> [600,]     0     0     0     0     0     0     0     0     0 3.913409     0 #> [601,]     0     0     0     0     0     0     0     0     0 3.913376     0 #> [602,]     0     0     0     0     0     0     0     0     0 3.913343     0 #> [603,]     0     0     0     0     0     0     0     0     0 3.913309     0 #> [604,]     0     0     0     0     0     0     0     0     0 3.913276     0 #> [605,]     0     0     0     0     0     0     0     0     0 3.913243     0 #> [606,]     0     0     0     0     0     0     0     0     0 3.913209     0 #> [607,]     0     0     0     0     0     0     0     0     0 3.913176     0 #> [608,]     0     0     0     0     0     0     0     0     0 3.913143     0 #> [609,]     0     0     0     0     0     0     0     0     0 3.913109     0 #> [610,]     0     0     0     0     0     0     0     0     0 3.913076     0 #> [611,]     0     0     0     0     0     0     0     0     0 3.913043     0 #> [612,]     0     0     0     0     0     0     0     0     0 3.913009     0 #> [613,]     0     0     0     0     0     0     0     0     0 3.912976     0 #> [614,]     0     0     0     0     0     0     0     0     0 3.912943     0 #> [615,]     0     0     0     0     0     0     0     0     0 3.912909     0 #> [616,]     0     0     0     0     0     0     0     0     0 3.964810     0 #> [617,]     0     0     0     0     0     0     0     0     0 3.964776     0 #> [618,]     0     0     0     0     0     0     0     0     0 3.964742     0 #> [619,]     0     0     0     0     0     0     0     0     0 3.964709     0 #> [620,]     0     0     0     0     0     0     0     0     0 3.964675     0 #> [621,]     0     0     0     0     0     0     0     0     0 3.964641     0 #> [622,]     0     0     0     0     0     0     0     0     0 3.964607     0 #> [623,]     0     0     0     0     0     0     0     0     0 3.964574     0 #> [624,]     0     0     0     0     0     0     0     0     0 3.964540     0 #> [625,]     0     0     0     0     0     0     0     0     0 3.964506     0 #> [626,]     0     0     0     0     0     0     0     0     0 3.964472     0 #> [627,]     0     0     0     0     0     0     0     0     0 3.964439     0 #> [628,]     0     0     0     0     0     0     0     0     0 3.964405     0 #> [629,]     0     0     0     0     0     0     0     0     0 3.964381     0 #> [630,]     0     0     0     0     0     0     0     0     0 3.964337     0 #> [631,]     0     0     0     0     0     0     0     0     0 3.964304     0 #> [632,]     0     0     0     0     0     0     0     0     0 3.964270     0 #> [633,]     0     0     0     0     0     0     0     0     0 3.964236     0 #> [634,]     0     0     0     0     0     0     0     0     0 3.964202     0 #> [635,]     0     0     0     0     0     0     0     0     0 3.964169     0 #> [636,]     0     0     0     0     0     0     0     0     0 3.964135     0 #> [637,]     0     0     0     0     0     0     0     0     0 3.964101     0 #> [638,]     0     0     0     0     0     0     0     0     0 3.964067     0 #> [639,]     0     0     0     0     0     0     0     0     0 3.964034     0 #> [640,]     0     0     0     0     0     0     0     0     0 3.964000     0 #> [641,]     0     0     0     0     0     0     0     0     0 3.963966     0 #> [642,]     0     0     0     0     0     0     0     0     0 3.963932     0 #> [643,]     0     0     0     0     0     0     0     0     0 3.963899     0 #> [644,]     0     0     0     0     0     0     0     0     0 3.963865     0 #> [645,]     0     0     0     0     0     0     0     0     0 3.963831     0 #> [646,]     0     0     0     0     0     0     0     0     0 3.963797     0 #> [647,]     0     0     0     0     0     0     0     0     0 3.963764     0 #> [648,]     0     0     0     0     0     0     0     0     0 3.963730     0 #> [649,]     0     0     0     0     0     0     0     0     0 3.963696     0 #> [650,]     0     0     0     0     0     0     0     0     0 3.963662     0 #> [651,]     0     0     0     0     0     0     0     0     0 3.963629     0 #> [652,]     0     0     0     0     0     0     0     0     0 3.963595     0 #> [653,]     0     0     0     0     0     0     0     0     0 3.963561     0 #> [654,]     0     0     0     0     0     0     0     0     0 3.963527     0 #>        [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] [,39] [,40] [,41] [,42] #>   [1,]     0     0     0     0     0     0     0     0     0     0     0     0 #>   [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>   [3,]     0     0     0     0     0     0     0     0     0     0     0     0 #>   [4,]     0     0     0     0     0     0     0     0     0     0     0     0 #>   [5,]     0     0     0     0     0     0     0     0     0     0     0     0 #>   [6,]     0     0     0     0     0     0     0     0     0     0     0     0 #>   [7,]     0     0     0     0     0     0     0     0     0     0     0     0 #>   [8,]     0     0     0     0     0     0     0     0     0     0     0     0 #>   [9,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [10,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [11,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [12,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [13,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [14,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [15,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [16,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [17,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [18,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [19,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [20,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [21,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [22,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [23,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [24,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [25,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [26,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [27,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [28,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [29,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [30,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [31,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [32,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [33,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [34,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [35,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [36,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [37,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [38,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [39,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [40,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [41,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [42,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [43,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [44,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [45,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [46,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [47,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [48,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [49,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [50,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [51,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [52,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [53,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [54,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [55,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [56,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [57,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [58,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [59,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [60,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [61,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [62,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [63,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [64,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [65,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [66,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [67,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [68,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [69,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [70,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [71,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [72,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [73,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [74,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [75,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [76,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [77,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [78,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [79,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [80,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [81,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [82,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [83,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [84,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [85,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [86,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [87,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [88,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [89,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [90,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [91,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [92,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [93,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [94,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [95,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [96,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [97,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [98,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [99,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [100,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [101,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [102,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [103,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [104,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [105,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [106,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [107,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [108,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [109,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [110,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [111,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [112,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [113,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [114,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [115,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [116,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [117,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [118,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [119,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [120,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [121,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [122,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [123,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [124,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [125,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [126,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [127,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [128,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [129,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [130,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [131,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [132,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [133,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [134,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [135,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [136,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [137,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [138,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [139,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [140,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [141,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [142,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [143,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [144,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [145,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [146,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [147,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [148,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [149,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [150,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [151,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [152,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [153,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [154,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [155,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [156,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [157,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [158,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [159,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [160,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [161,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [162,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [163,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [164,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [165,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [166,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [167,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [168,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [169,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [170,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [171,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [172,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [173,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [174,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [175,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [176,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [177,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [178,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [179,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [180,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [181,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [182,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [183,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [184,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [185,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [186,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [187,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [188,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [189,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [190,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [191,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [192,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [193,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [194,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [195,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [196,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [197,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [198,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [199,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [200,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [201,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [202,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [203,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [204,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [205,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [206,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [207,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [208,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [209,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [210,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [211,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [212,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [213,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [214,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [215,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [216,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [217,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [218,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [219,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [220,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [221,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [222,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [223,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [224,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [225,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [226,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [227,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [228,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [229,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [230,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [231,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [232,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [233,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [234,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [235,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [236,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [237,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [238,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [239,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [240,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [241,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [242,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [243,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [244,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [245,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [246,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [247,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [248,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [249,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [250,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [251,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [252,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [253,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [254,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [255,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [256,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [257,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [258,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [259,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [260,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [261,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [262,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [263,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [264,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [265,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [266,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [267,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [268,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [269,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [270,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [271,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [272,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [273,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [274,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [275,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [276,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [277,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [278,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [279,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [280,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [281,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [282,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [283,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [284,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [285,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [286,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [287,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [288,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [289,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [290,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [291,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [292,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [293,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [294,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [295,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [296,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [297,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [298,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [299,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [300,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [301,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [302,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [303,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [304,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [305,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [306,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [307,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [308,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [309,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [310,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [311,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [312,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [313,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [314,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [315,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [316,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [317,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [318,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [319,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [320,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [321,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [322,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [323,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [324,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [325,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [326,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [327,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [328,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [329,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [330,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [331,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [332,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [333,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [334,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [335,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [336,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [337,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [338,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [339,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [340,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [341,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [342,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [343,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [344,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [345,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [346,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [347,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [348,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [349,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [350,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [351,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [352,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [353,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [354,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [355,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [356,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [357,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [358,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [359,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [360,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [361,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [362,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [363,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [364,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [365,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [366,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [367,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [368,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [369,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [370,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [371,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [372,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [373,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [374,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [375,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [376,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [377,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [378,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [379,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [380,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [381,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [382,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [383,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [384,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [385,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [386,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [387,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [388,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [389,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [390,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [391,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [392,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [393,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [394,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [395,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [396,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [397,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [398,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [399,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [400,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [401,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [402,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [403,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [404,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [405,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [406,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [407,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [408,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [409,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [410,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [411,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [412,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [413,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [414,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [415,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [416,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [417,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [418,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [419,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [420,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [421,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [422,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [423,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [424,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [425,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [426,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [427,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [428,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [429,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [430,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [431,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [432,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [433,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [434,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [435,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [436,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [437,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [438,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [439,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [440,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [441,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [442,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [443,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [444,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [445,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [446,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [447,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [448,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [449,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [450,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [451,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [452,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [453,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [454,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [455,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [456,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [457,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [458,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [459,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [460,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [461,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [462,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [463,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [464,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [465,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [466,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [467,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [468,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [469,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [470,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [471,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [472,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [473,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [474,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [475,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [476,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [477,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [478,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [479,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [480,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [481,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [482,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [483,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [484,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [485,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [486,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [487,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [488,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [489,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [490,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [491,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [492,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [493,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [494,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [495,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [496,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [497,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [498,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [499,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [500,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [501,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [502,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [503,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [504,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [505,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [506,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [507,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [508,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [509,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [510,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [511,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [512,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [513,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [514,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [515,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [516,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [517,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [518,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [519,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [520,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [521,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [522,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [523,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [524,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [525,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [526,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [527,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [528,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [529,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [530,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [531,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [532,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [533,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [534,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [535,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [536,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [537,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [538,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [539,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [540,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [541,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [542,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [543,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [544,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [545,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [546,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [547,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [548,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [549,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [550,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [551,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [552,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [553,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [554,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [555,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [556,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [557,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [558,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [559,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [560,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [561,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [562,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [563,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [564,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [565,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [566,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [567,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [568,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [569,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [570,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [571,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [572,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [573,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [574,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [575,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [576,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [577,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [578,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [579,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [580,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [581,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [582,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [583,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [584,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [585,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [586,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [587,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [588,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [589,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [590,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [591,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [592,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [593,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [594,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [595,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [596,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [597,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [598,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [599,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [600,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [601,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [602,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [603,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [604,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [605,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [606,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [607,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [608,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [609,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [610,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [611,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [612,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [613,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [614,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [615,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [616,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [617,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [618,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [619,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [620,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [621,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [622,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [623,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [624,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [625,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [626,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [627,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [628,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [629,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [630,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [631,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [632,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [633,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [634,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [635,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [636,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [637,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [638,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [639,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [640,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [641,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [642,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [643,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [644,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [645,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [646,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [647,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [648,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [649,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [650,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [651,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [652,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [653,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [654,]     0     0     0     0     0     0     0     0     0     0     0     0 #>        [,43] [,44] [,45] #>   [1,]     0     0     0 #>   [2,]     0     0     0 #>   [3,]     0     0     0 #>   [4,]     0     0     0 #>   [5,]     0     0     0 #>   [6,]     0     0     0 #>   [7,]     0     0     0 #>   [8,]     0     0     0 #>   [9,]     0     0     0 #>  [10,]     0     0     0 #>  [11,]     0     0     0 #>  [12,]     0     0     0 #>  [13,]     0     0     0 #>  [14,]     0     0     0 #>  [15,]     0     0     0 #>  [16,]     0     0     0 #>  [17,]     0     0     0 #>  [18,]     0     0     0 #>  [19,]     0     0     0 #>  [20,]     0     0     0 #>  [21,]     0     0     0 #>  [22,]     0     0     0 #>  [23,]     0     0     0 #>  [24,]     0     0     0 #>  [25,]     0     0     0 #>  [26,]     0     0     0 #>  [27,]     0     0     0 #>  [28,]     0     0     0 #>  [29,]     0     0     0 #>  [30,]     0     0     0 #>  [31,]     0     0     0 #>  [32,]     0     0     0 #>  [33,]     0     0     0 #>  [34,]     0     0     0 #>  [35,]     0     0     0 #>  [36,]     0     0     0 #>  [37,]     0     0     0 #>  [38,]     0     0     0 #>  [39,]     0     0     0 #>  [40,]     0     0     0 #>  [41,]     0     0     0 #>  [42,]     0     0     0 #>  [43,]     0     0     0 #>  [44,]     0     0     0 #>  [45,]     0     0     0 #>  [46,]     0     0     0 #>  [47,]     0     0     0 #>  [48,]     0     0     0 #>  [49,]     0     0     0 #>  [50,]     0     0     0 #>  [51,]     0     0     0 #>  [52,]     0     0     0 #>  [53,]     0     0     0 #>  [54,]     0     0     0 #>  [55,]     0     0     0 #>  [56,]     0     0     0 #>  [57,]     0     0     0 #>  [58,]     0     0     0 #>  [59,]     0     0     0 #>  [60,]     0     0     0 #>  [61,]     0     0     0 #>  [62,]     0     0     0 #>  [63,]     0     0     0 #>  [64,]     0     0     0 #>  [65,]     0     0     0 #>  [66,]     0     0     0 #>  [67,]     0     0     0 #>  [68,]     0     0     0 #>  [69,]     0     0     0 #>  [70,]     0     0     0 #>  [71,]     0     0     0 #>  [72,]     0     0     0 #>  [73,]     0     0     0 #>  [74,]     0     0     0 #>  [75,]     0     0     0 #>  [76,]     0     0     0 #>  [77,]     0     0     0 #>  [78,]     0     0     0 #>  [79,]     0     0     0 #>  [80,]     0     0     0 #>  [81,]     0     0     0 #>  [82,]     0     0     0 #>  [83,]     0     0     0 #>  [84,]     0     0     0 #>  [85,]     0     0     0 #>  [86,]     0     0     0 #>  [87,]     0     0     0 #>  [88,]     0     0     0 #>  [89,]     0     0     0 #>  [90,]     0     0     0 #>  [91,]     0     0     0 #>  [92,]     0     0     0 #>  [93,]     0     0     0 #>  [94,]     0     0     0 #>  [95,]     0     0     0 #>  [96,]     0     0     0 #>  [97,]     0     0     0 #>  [98,]     0     0     0 #>  [99,]     0     0     0 #> [100,]     0     0     0 #> [101,]     0     0     0 #> [102,]     0     0     0 #> [103,]     0     0     0 #> [104,]     0     0     0 #> [105,]     0     0     0 #> [106,]     0     0     0 #> [107,]     0     0     0 #> [108,]     0     0     0 #> [109,]     0     0     0 #> [110,]     0     0     0 #> [111,]     0     0     0 #> [112,]     0     0     0 #> [113,]     0     0     0 #> [114,]     0     0     0 #> [115,]     0     0     0 #> [116,]     0     0     0 #> [117,]     0     0     0 #> [118,]     0     0     0 #> [119,]     0     0     0 #> [120,]     0     0     0 #> [121,]     0     0     0 #> [122,]     0     0     0 #> [123,]     0     0     0 #> [124,]     0     0     0 #> [125,]     0     0     0 #> [126,]     0     0     0 #> [127,]     0     0     0 #> [128,]     0     0     0 #> [129,]     0     0     0 #> [130,]     0     0     0 #> [131,]     0     0     0 #> [132,]     0     0     0 #> [133,]     0     0     0 #> [134,]     0     0     0 #> [135,]     0     0     0 #> [136,]     0     0     0 #> [137,]     0     0     0 #> [138,]     0     0     0 #> [139,]     0     0     0 #> [140,]     0     0     0 #> [141,]     0     0     0 #> [142,]     0     0     0 #> [143,]     0     0     0 #> [144,]     0     0     0 #> [145,]     0     0     0 #> [146,]     0     0     0 #> [147,]     0     0     0 #> [148,]     0     0     0 #> [149,]     0     0     0 #> [150,]     0     0     0 #> [151,]     0     0     0 #> [152,]     0     0     0 #> [153,]     0     0     0 #> [154,]     0     0     0 #> [155,]     0     0     0 #> [156,]     0     0     0 #> [157,]     0     0     0 #> [158,]     0     0     0 #> [159,]     0     0     0 #> [160,]     0     0     0 #> [161,]     0     0     0 #> [162,]     0     0     0 #> [163,]     0     0     0 #> [164,]     0     0     0 #> [165,]     0     0     0 #> [166,]     0     0     0 #> [167,]     0     0     0 #> [168,]     0     0     0 #> [169,]     0     0     0 #> [170,]     0     0     0 #> [171,]     0     0     0 #> [172,]     0     0     0 #> [173,]     0     0     0 #> [174,]     0     0     0 #> [175,]     0     0     0 #> [176,]     0     0     0 #> [177,]     0     0     0 #> [178,]     0     0     0 #> [179,]     0     0     0 #> [180,]     0     0     0 #> [181,]     0     0     0 #> [182,]     0     0     0 #> [183,]     0     0     0 #> [184,]     0     0     0 #> [185,]     0     0     0 #> [186,]     0     0     0 #> [187,]     0     0     0 #> [188,]     0     0     0 #> [189,]     0     0     0 #> [190,]     0     0     0 #> [191,]     0     0     0 #> [192,]     0     0     0 #> [193,]     0     0     0 #> [194,]     0     0     0 #> [195,]     0     0     0 #> [196,]     0     0     0 #> [197,]     0     0     0 #> [198,]     0     0     0 #> [199,]     0     0     0 #> [200,]     0     0     0 #> [201,]     0     0     0 #> [202,]     0     0     0 #> [203,]     0     0     0 #> [204,]     0     0     0 #> [205,]     0     0     0 #> [206,]     0     0     0 #> [207,]     0     0     0 #> [208,]     0     0     0 #> [209,]     0     0     0 #> [210,]     0     0     0 #> [211,]     0     0     0 #> [212,]     0     0     0 #> [213,]     0     0     0 #> [214,]     0     0     0 #> [215,]     0     0     0 #> [216,]     0     0     0 #> [217,]     0     0     0 #> [218,]     0     0     0 #> [219,]     0     0     0 #> [220,]     0     0     0 #> [221,]     0     0     0 #> [222,]     0     0     0 #> [223,]     0     0     0 #> [224,]     0     0     0 #> [225,]     0     0     0 #> [226,]     0     0     0 #> [227,]     0     0     0 #> [228,]     0     0     0 #> [229,]     0     0     0 #> [230,]     0     0     0 #> [231,]     0     0     0 #> [232,]     0     0     0 #> [233,]     0     0     0 #> [234,]     0     0     0 #> [235,]     0     0     0 #> [236,]     0     0     0 #> [237,]     0     0     0 #> [238,]     0     0     0 #> [239,]     0     0     0 #> [240,]     0     0     0 #> [241,]     0     0     0 #> [242,]     0     0     0 #> [243,]     0     0     0 #> [244,]     0     0     0 #> [245,]     0     0     0 #> [246,]     0     0     0 #> [247,]     0     0     0 #> [248,]     0     0     0 #> [249,]     0     0     0 #> [250,]     0     0     0 #> [251,]     0     0     0 #> [252,]     0     0     0 #> [253,]     0     0     0 #> [254,]     0     0     0 #> [255,]     0     0     0 #> [256,]     0     0     0 #> [257,]     0     0     0 #> [258,]     0     0     0 #> [259,]     0     0     0 #> [260,]     0     0     0 #> [261,]     0     0     0 #> [262,]     0     0     0 #> [263,]     0     0     0 #> [264,]     0     0     0 #> [265,]     0     0     0 #> [266,]     0     0     0 #> [267,]     0     0     0 #> [268,]     0     0     0 #> [269,]     0     0     0 #> [270,]     0     0     0 #> [271,]     0     0     0 #> [272,]     0     0     0 #> [273,]     0     0     0 #> [274,]     0     0     0 #> [275,]     0     0     0 #> [276,]     0     0     0 #> [277,]     0     0     0 #> [278,]     0     0     0 #> [279,]     0     0     0 #> [280,]     0     0     0 #> [281,]     0     0     0 #> [282,]     0     0     0 #> [283,]     0     0     0 #> [284,]     0     0     0 #> [285,]     0     0     0 #> [286,]     0     0     0 #> [287,]     0     0     0 #> [288,]     0     0     0 #> [289,]     0     0     0 #> [290,]     0     0     0 #> [291,]     0     0     0 #> [292,]     0     0     0 #> [293,]     0     0     0 #> [294,]     0     0     0 #> [295,]     0     0     0 #> [296,]     0     0     0 #> [297,]     0     0     0 #> [298,]     0     0     0 #> [299,]     0     0     0 #> [300,]     0     0     0 #> [301,]     0     0     0 #> [302,]     0     0     0 #> [303,]     0     0     0 #> [304,]     0     0     0 #> [305,]     0     0     0 #> [306,]     0     0     0 #> [307,]     0     0     0 #> [308,]     0     0     0 #> [309,]     0     0     0 #> [310,]     0     0     0 #> [311,]     0     0     0 #> [312,]     0     0     0 #> [313,]     0     0     0 #> [314,]     0     0     0 #> [315,]     0     0     0 #> [316,]     0     0     0 #> [317,]     0     0     0 #> [318,]     0     0     0 #> [319,]     0     0     0 #> [320,]     0     0     0 #> [321,]     0     0     0 #> [322,]     0     0     0 #> [323,]     0     0     0 #> [324,]     0     0     0 #> [325,]     0     0     0 #> [326,]     0     0     0 #> [327,]     0     0     0 #> [328,]     0     0     0 #> [329,]     0     0     0 #> [330,]     0     0     0 #> [331,]     0     0     0 #> [332,]     0     0     0 #> [333,]     0     0     0 #> [334,]     0     0     0 #> [335,]     0     0     0 #> [336,]     0     0     0 #> [337,]     0     0     0 #> [338,]     0     0     0 #> [339,]     0     0     0 #> [340,]     0     0     0 #> [341,]     0     0     0 #> [342,]     0     0     0 #> [343,]     0     0     0 #> [344,]     0     0     0 #> [345,]     0     0     0 #> [346,]     0     0     0 #> [347,]     0     0     0 #> [348,]     0     0     0 #> [349,]     0     0     0 #> [350,]     0     0     0 #> [351,]     0     0     0 #> [352,]     0     0     0 #> [353,]     0     0     0 #> [354,]     0     0     0 #> [355,]     0     0     0 #> [356,]     0     0     0 #> [357,]     0     0     0 #> [358,]     0     0     0 #> [359,]     0     0     0 #> [360,]     0     0     0 #> [361,]     0     0     0 #> [362,]     0     0     0 #> [363,]     0     0     0 #> [364,]     0     0     0 #> [365,]     0     0     0 #> [366,]     0     0     0 #> [367,]     0     0     0 #> [368,]     0     0     0 #> [369,]     0     0     0 #> [370,]     0     0     0 #> [371,]     0     0     0 #> [372,]     0     0     0 #> [373,]     0     0     0 #> [374,]     0     0     0 #> [375,]     0     0     0 #> [376,]     0     0     0 #> [377,]     0     0     0 #> [378,]     0     0     0 #> [379,]     0     0     0 #> [380,]     0     0     0 #> [381,]     0     0     0 #> [382,]     0     0     0 #> [383,]     0     0     0 #> [384,]     0     0     0 #> [385,]     0     0     0 #> [386,]     0     0     0 #> [387,]     0     0     0 #> [388,]     0     0     0 #> [389,]     0     0     0 #> [390,]     0     0     0 #> [391,]     0     0     0 #> [392,]     0     0     0 #> [393,]     0     0     0 #> [394,]     0     0     0 #> [395,]     0     0     0 #> [396,]     0     0     0 #> [397,]     0     0     0 #> [398,]     0     0     0 #> [399,]     0     0     0 #> [400,]     0     0     0 #> [401,]     0     0     0 #> [402,]     0     0     0 #> [403,]     0     0     0 #> [404,]     0     0     0 #> [405,]     0     0     0 #> [406,]     0     0     0 #> [407,]     0     0     0 #> [408,]     0     0     0 #> [409,]     0     0     0 #> [410,]     0     0     0 #> [411,]     0     0     0 #> [412,]     0     0     0 #> [413,]     0     0     0 #> [414,]     0     0     0 #> [415,]     0     0     0 #> [416,]     0     0     0 #> [417,]     0     0     0 #> [418,]     0     0     0 #> [419,]     0     0     0 #> [420,]     0     0     0 #> [421,]     0     0     0 #> [422,]     0     0     0 #> [423,]     0     0     0 #> [424,]     0     0     0 #> [425,]     0     0     0 #> [426,]     0     0     0 #> [427,]     0     0     0 #> [428,]     0     0     0 #> [429,]     0     0     0 #> [430,]     0     0     0 #> [431,]     0     0     0 #> [432,]     0     0     0 #> [433,]     0     0     0 #> [434,]     0     0     0 #> [435,]     0     0     0 #> [436,]     0     0     0 #> [437,]     0     0     0 #> [438,]     0     0     0 #> [439,]     0     0     0 #> [440,]     0     0     0 #> [441,]     0     0     0 #> [442,]     0     0     0 #> [443,]     0     0     0 #> [444,]     0     0     0 #> [445,]     0     0     0 #> [446,]     0     0     0 #> [447,]     0     0     0 #> [448,]     0     0     0 #> [449,]     0     0     0 #> [450,]     0     0     0 #> [451,]     0     0     0 #> [452,]     0     0     0 #> [453,]     0     0     0 #> [454,]     0     0     0 #> [455,]     0     0     0 #> [456,]     0     0     0 #> [457,]     0     0     0 #> [458,]     0     0     0 #> [459,]     0     0     0 #> [460,]     0     0     0 #> [461,]     0     0     0 #> [462,]     0     0     0 #> [463,]     0     0     0 #> [464,]     0     0     0 #> [465,]     0     0     0 #> [466,]     0     0     0 #> [467,]     0     0     0 #> [468,]     0     0     0 #> [469,]     0     0     0 #> [470,]     0     0     0 #> [471,]     0     0     0 #> [472,]     0     0     0 #> [473,]     0     0     0 #> [474,]     0     0     0 #> [475,]     0     0     0 #> [476,]     0     0     0 #> [477,]     0     0     0 #> [478,]     0     0     0 #> [479,]     0     0     0 #> [480,]     0     0     0 #> [481,]     0     0     0 #> [482,]     0     0     0 #> [483,]     0     0     0 #> [484,]     0     0     0 #> [485,]     0     0     0 #> [486,]     0     0     0 #> [487,]     0     0     0 #> [488,]     0     0     0 #> [489,]     0     0     0 #> [490,]     0     0     0 #> [491,]     0     0     0 #> [492,]     0     0     0 #> [493,]     0     0     0 #> [494,]     0     0     0 #> [495,]     0     0     0 #> [496,]     0     0     0 #> [497,]     0     0     0 #> [498,]     0     0     0 #> [499,]     0     0     0 #> [500,]     0     0     0 #> [501,]     0     0     0 #> [502,]     0     0     0 #> [503,]     0     0     0 #> [504,]     0     0     0 #> [505,]     0     0     0 #> [506,]     0     0     0 #> [507,]     0     0     0 #> [508,]     0     0     0 #> [509,]     0     0     0 #> [510,]     0     0     0 #> [511,]     0     0     0 #> [512,]     0     0     0 #> [513,]     0     0     0 #> [514,]     0     0     0 #> [515,]     0     0     0 #> [516,]     0     0     0 #> [517,]     0     0     0 #> [518,]     0     0     0 #> [519,]     0     0     0 #> [520,]     0     0     0 #> [521,]     0     0     0 #> [522,]     0     0     0 #> [523,]     0     0     0 #> [524,]     0     0     0 #> [525,]     0     0     0 #> [526,]     0     0     0 #> [527,]     0     0     0 #> [528,]     0     0     0 #> [529,]     0     0     0 #> [530,]     0     0     0 #> [531,]     0     0     0 #> [532,]     0     0     0 #> [533,]     0     0     0 #> [534,]     0     0     0 #> [535,]     0     0     0 #> [536,]     0     0     0 #> [537,]     0     0     0 #> [538,]     0     0     0 #> [539,]     0     0     0 #> [540,]     0     0     0 #> [541,]     0     0     0 #> [542,]     0     0     0 #> [543,]     0     0     0 #> [544,]     0     0     0 #> [545,]     0     0     0 #> [546,]     0     0     0 #> [547,]     0     0     0 #> [548,]     0     0     0 #> [549,]     0     0     0 #> [550,]     0     0     0 #> [551,]     0     0     0 #> [552,]     0     0     0 #> [553,]     0     0     0 #> [554,]     0     0     0 #> [555,]     0     0     0 #> [556,]     0     0     0 #> [557,]     0     0     0 #> [558,]     0     0     0 #> [559,]     0     0     0 #> [560,]     0     0     0 #> [561,]     0     0     0 #> [562,]     0     0     0 #> [563,]     0     0     0 #> [564,]     0     0     0 #> [565,]     0     0     0 #> [566,]     0     0     0 #> [567,]     0     0     0 #> [568,]     0     0     0 #> [569,]     0     0     0 #> [570,]     0     0     0 #> [571,]     0     0     0 #> [572,]     0     0     0 #> [573,]     0     0     0 #> [574,]     0     0     0 #> [575,]     0     0     0 #> [576,]     0     0     0 #> [577,]     0     0     0 #> [578,]     0     0     0 #> [579,]     0     0     0 #> [580,]     0     0     0 #> [581,]     0     0     0 #> [582,]     0     0     0 #> [583,]     0     0     0 #> [584,]     0     0     0 #> [585,]     0     0     0 #> [586,]     0     0     0 #> [587,]     0     0     0 #> [588,]     0     0     0 #> [589,]     0     0     0 #> [590,]     0     0     0 #> [591,]     0     0     0 #> [592,]     0     0     0 #> [593,]     0     0     0 #> [594,]     0     0     0 #> [595,]     0     0     0 #> [596,]     0     0     0 #> [597,]     0     0     0 #> [598,]     0     0     0 #> [599,]     0     0     0 #> [600,]     0     0     0 #> [601,]     0     0     0 #> [602,]     0     0     0 #> [603,]     0     0     0 #> [604,]     0     0     0 #> [605,]     0     0     0 #> [606,]     0     0     0 #> [607,]     0     0     0 #> [608,]     0     0     0 #> [609,]     0     0     0 #> [610,]     0     0     0 #> [611,]     0     0     0 #> [612,]     0     0     0 #> [613,]     0     0     0 #> [614,]     0     0     0 #> [615,]     0     0     0 #> [616,]     0     0     0 #> [617,]     0     0     0 #> [618,]     0     0     0 #> [619,]     0     0     0 #> [620,]     0     0     0 #> [621,]     0     0     0 #> [622,]     0     0     0 #> [623,]     0     0     0 #> [624,]     0     0     0 #> [625,]     0     0     0 #> [626,]     0     0     0 #> [627,]     0     0     0 #> [628,]     0     0     0 #> [629,]     0     0     0 #> [630,]     0     0     0 #> [631,]     0     0     0 #> [632,]     0     0     0 #> [633,]     0     0     0 #> [634,]     0     0     0 #> [635,]     0     0     0 #> [636,]     0     0     0 #> [637,]     0     0     0 #> [638,]     0     0     0 #> [639,]     0     0     0 #> [640,]     0     0     0 #> [641,]     0     0     0 #> [642,]     0     0     0 #> [643,]     0     0     0 #> [644,]     0     0     0 #> [645,]     0     0     0 #> [646,]     0     0     0 #> [647,]     0     0     0 #> [648,]     0     0     0 #> [649,]     0     0     0 #> [650,]     0     0     0 #> [651,]     0     0     0 #> [652,]     0     0     0 #> [653,]     0     0     0 #> [654,]     0     0     0"},{"path":"/reference/deviance.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitted model deviance — deviance.SSN2","title":"Fitted model deviance — deviance.SSN2","text":"Returns deviance fitted model object.","code":""},{"path":"/reference/deviance.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitted model deviance — deviance.SSN2","text":"","code":"# S3 method for ssn_lm deviance(object, ...)  # S3 method for ssn_glm deviance(object, ...)"},{"path":"/reference/deviance.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitted model deviance — deviance.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/deviance.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitted model deviance — deviance.SSN2","text":"deviance.","code":""},{"path":"/reference/deviance.SSN2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitted model deviance — deviance.SSN2","text":"deviance twice difference log-likelihoods saturated (perfect-fit) model fitted model.","code":""},{"path":"/reference/deviance.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitted model deviance — deviance.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_glm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   family = \"Gamma\",   tailup_type = \"exponential\",   additive = \"afvArea\" ) deviance(ssn_mod) #> [1] 0.00200104"},{"path":"/reference/fitted.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract model fitted values — fitted.SSN2","title":"Extract model fitted values — fitted.SSN2","text":"Extract fitted values fitted model objects. fitted.values alias.","code":""},{"path":"/reference/fitted.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract model fitted values — fitted.SSN2","text":"","code":"# S3 method for ssn_lm fitted(object, type = \"response\", ...)  # S3 method for ssn_lm fitted.values(object, type = \"response\", ...)  # S3 method for ssn_glm fitted(object, type = \"response\", ...)  # S3 method for ssn_glm fitted.values(object, type = \"response\", ...)"},{"path":"/reference/fitted.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract model fitted values — fitted.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). type \"response\" fitted values response, \"tailup\" fitted values tailup random errors, \"taildown\" fitted values taildown random errors, \"euclid\" fitted values Euclidean random errors, \"nugget\" fitted values nugget random errors, \"randcov\" fitted values random effects. ssn_glm(), \"link\" fitted values link scale. default \"response\". ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/fitted.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract model fitted values — fitted.SSN2","text":"fitted values according type.","code":""},{"path":"/reference/fitted.SSN2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract model fitted values — fitted.SSN2","text":"type \"response\", fitted values observation standard fitted values \\(X \\hat{\\beta}\\). type \"tailup\", \"taildown\", \"euclid\", \"nugget\" fitted values observation (generally) best linear unbiased predictors respective random error. type \"randcov\", fitted values level random effect (generally) best linear unbiased predictors corresponding random effect. fitted values type \"tailup\", \"taildown\", \"euclid\", \"nugget\", \"randcov\" can generally used check assumptions component fitted model object (e.g., check Gaussian assumption). ssn_glm(), type \"response\", fitted values observation standard fitted values inverse link scale: \\(g^{-1}\\)(\\(X \\hat{\\beta} + \\nu\\)), \\(g(.)\\) link function, \\(\\beta\\) fixed effects, \\(\\nu\\) spatial random effects.","code":""},{"path":"/reference/fitted.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract model fitted values — fitted.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) fitted(ssn_mod) #>        1        2        3        4        5        6        7        8  #> 14.34158 14.13982 13.88042 13.47691 13.41927 13.33280 13.01576 13.01576  #>        9       10       11       12       13       14       15       16  #> 12.92929 14.02453 13.30398 13.24633 12.58342 12.17991 11.77640 11.22878  #>       17       18       19       20       21       22       23       24  #> 14.39922 14.19747 13.70749 13.62102 13.76513 13.50573 12.92929 12.64107  #>       25       26       27       28       29       30       31       32  #> 12.35284 12.23755 11.63229 13.21751 12.69871 12.46813 14.88920 15.20625  #>       33       34       35       36       37       38       39       40  #> 15.06213 15.89798 15.63858 15.40800 15.40800 15.26389 15.17742 15.11978  #>       41       42       43       44       45  #> 15.14860 15.11978 15.09096 13.24633 11.45935  fitted.values(ssn_mod) #>        1        2        3        4        5        6        7        8  #> 14.34158 14.13982 13.88042 13.47691 13.41927 13.33280 13.01576 13.01576  #>        9       10       11       12       13       14       15       16  #> 12.92929 14.02453 13.30398 13.24633 12.58342 12.17991 11.77640 11.22878  #>       17       18       19       20       21       22       23       24  #> 14.39922 14.19747 13.70749 13.62102 13.76513 13.50573 12.92929 12.64107  #>       25       26       27       28       29       30       31       32  #> 12.35284 12.23755 11.63229 13.21751 12.69871 12.46813 14.88920 15.20625  #>       33       34       35       36       37       38       39       40  #> 15.06213 15.89798 15.63858 15.40800 15.40800 15.26389 15.17742 15.11978  #>       41       42       43       44       45  #> 15.14860 15.11978 15.09096 13.24633 11.45935"},{"path":"/reference/formula.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Model formulae — formula.SSN2","title":"Model formulae — formula.SSN2","text":"Return formula used fitted model object.","code":""},{"path":"/reference/formula.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model formulae — formula.SSN2","text":"","code":"# S3 method for ssn_lm formula(x, ...)  # S3 method for ssn_glm formula(x, ...)"},{"path":"/reference/formula.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model formulae — formula.SSN2","text":"x fitted model object ssn_lm() ssn_glm(). ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/formula.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model formulae — formula.SSN2","text":"formula used fitted model object.","code":""},{"path":"/reference/formula.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model formulae — formula.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) formula(ssn_mod) #> Summer_mn ~ ELEV_DEM #> <environment: 0x000001546ff7a278>"},{"path":"/reference/glance.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Glance at a fitted model object — glance.SSN2","title":"Glance at a fitted model object — glance.SSN2","text":"Returns row model summaries fitted model object. Glance returns number columns models estimation methods.","code":""},{"path":"/reference/glance.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glance at a fitted model object — glance.SSN2","text":"","code":"# S3 method for ssn_lm glance(x, ...)  # S3 method for ssn_glm glance(x, ...)"},{"path":"/reference/glance.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Glance at a fitted model object — glance.SSN2","text":"x fitted model object ssn_lm() ssn_glm(). ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/glance.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Glance at a fitted model object — glance.SSN2","text":"single-row tibble columns n sample size. p number fixed effects. npar number estimated covariance parameters. value optimized value fitting function AIC AIC. AICc AICc. logLik log-likelihood deviance deviance. pseudo.r.squared pseudo r-squared","code":""},{"path":"/reference/glance.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Glance at a fitted model object — glance.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) glance(ssn_mod) #> # A tibble: 1 × 9 #>       n     p  npar value   AIC  AICc logLik deviance pseudo.r.squared #>   <int> <dbl> <int> <dbl> <dbl> <dbl>  <dbl>    <dbl>            <dbl> #> 1    45     2     3  54.2  60.2  60.8  -27.1     43.5            0.669"},{"path":"/reference/glances.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Glance at many fitted model objects — glances.SSN2","title":"Glance at many fitted model objects — glances.SSN2","text":"glances() repeatedly calls glance() several fitted model objects binds output together, sorted column interest.","code":""},{"path":"/reference/glances.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glance at many fitted model objects — glances.SSN2","text":"","code":"# S3 method for ssn_lm glances(object, ..., sort_by = \"AICc\", decreasing = FALSE)  # S3 method for ssn_glm glances(object, ..., sort_by = \"AICc\", decreasing = FALSE)"},{"path":"/reference/glances.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Glance at many fitted model objects — glances.SSN2","text":"object Fitted model object ssn_lm() ssn_glm(). ... Additional fitted model objects ssn_lm() ssn_glm(). sort_by Sort glance statistic (.e., name column output glance() order model input (sort_by = \"order\"). default \"AICc\". decreasing sort_by decreasing ? default FALSE.","code":""},{"path":"/reference/glances.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Glance at many fitted model objects — glances.SSN2","text":"tibble row represents output glance() fitted model object.","code":""},{"path":"/reference/glances.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Glance at many fitted model objects — glances.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  # tailup only ssn_mod1 <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) # taildown only ssn_mod2 <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   taildown_type = \"exponential\" ) glances(ssn_mod1, ssn_mod2) #> # A tibble: 2 × 10 #>   model        n     p  npar value   AIC  AICc logLik deviance pseudo.r.squared #>   <chr>    <int> <dbl> <int> <dbl> <dbl> <dbl>  <dbl>    <dbl>            <dbl> #> 1 ssn_mod1    45     2     3  54.2  60.2  60.8  -27.1     43.5           0.669  #> 2 ssn_mod2    45     2     3 123.  129.  129.   -61.4     43.4           0.0917"},{"path":"/reference/hatvalues.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute leverage (hat) values — hatvalues.SSN2","title":"Compute leverage (hat) values — hatvalues.SSN2","text":"Compute leverage (hat) value observation fitted model object.","code":""},{"path":"/reference/hatvalues.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute leverage (hat) values — hatvalues.SSN2","text":"","code":"# S3 method for ssn_lm hatvalues(model, ...)  # S3 method for ssn_glm hatvalues(model, ...)"},{"path":"/reference/hatvalues.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute leverage (hat) values — hatvalues.SSN2","text":"model fitted model object ssn_lm() ssn_glm(). ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/hatvalues.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute leverage (hat) values — hatvalues.SSN2","text":"vector leverage (hat) values observation fitted model object.","code":""},{"path":"/reference/hatvalues.SSN2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute leverage (hat) values — hatvalues.SSN2","text":"Leverage values measure far observation's explanatory variables relative average explanatory variables. words, observations high leverage typically considered extreme unusual combination explanatory variables. Leverage values diagonal hat (projection) matrix. larger hat value, larger leverage.","code":""},{"path":[]},{"path":"/reference/hatvalues.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute leverage (hat) values — hatvalues.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) hatvalues(ssn_mod) #>            1            2            3            4            5            6  #> 1.565733e-01 9.237419e-02 3.014500e-02 7.981493e-03 1.046372e-02 3.495971e-03  #>            7            8            9           10           11           12  #> 1.793629e-02 1.693222e-02 8.311967e-03 5.612972e-02 1.031498e-01 6.860116e-02  #>           13           14           15           16           17           18  #> 1.109540e-02 4.019243e-02 1.253507e-01 9.102368e-02 7.023914e-02 2.202866e-02  #>           19           20           21           22           23           24  #> 4.509632e-03 2.293475e-03 3.162038e-03 2.476739e-03 1.356383e-02 5.100491e-02  #>           25           26           27           28           29           30  #> 1.395086e-02 2.156846e-02 9.548471e-02 1.553130e-01 8.095946e-03 3.568117e-02  #>           31           32           33           34           35           36  #> 3.536055e-02 1.067164e-01 4.896040e-02 2.389906e-02 7.092277e-05 1.122144e-02  #>           37           38           39           40           41           42  #> 2.463285e-02 1.287318e-01 8.437105e-02 6.881851e-02 1.810541e-02 1.149500e-02  #>           43           44           45  #> 9.801228e-03 7.212308e-02 1.656265e-02"},{"path":"/reference/influence.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression diagnostics — influence.SSN2","title":"Regression diagnostics — influence.SSN2","text":"Provides basic quantities used forming wide variety diagnostics checking quality fitted model objects.","code":""},{"path":"/reference/influence.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression diagnostics — influence.SSN2","text":"","code":"# S3 method for ssn_lm influence(model, ...)  # S3 method for ssn_glm influence(model, ...)"},{"path":"/reference/influence.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression diagnostics — influence.SSN2","text":"model fitted model object ssn_lm() ssn_glm(). ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/influence.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regression diagnostics — influence.SSN2","text":"tibble residuals (.resid), leverage values (.hat), cook's distance (.cooksd), standardized residuals (.std.resid).","code":""},{"path":"/reference/influence.SSN2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regression diagnostics — influence.SSN2","text":"function calls residuals.SSN2(), hatvalues.SSN2(), cooks.distance.SSN2() puts results tibble. primarily used calling augment.SSN2().","code":""},{"path":[]},{"path":"/reference/influence.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression diagnostics — influence.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) influence(ssn_mod) #> # A tibble: 45 × 4 #>    .resid    .hat    .cooksd .std.resid #>     <dbl>   <dbl>      <dbl>      <dbl> #>  1  -2.96 0.157   0.135         -1.31   #>  2  -3.42 0.0924  0.0184        -0.631  #>  3  -3.45 0.0301  0.0103        -0.827  #>  4  -3.35 0.00798 0.000239      -0.245  #>  5  -3.30 0.0105  0.00000674     0.0359 #>  6  -3.52 0.00350 0.00285       -1.28   #>  7  -3.26 0.0179  0.0000144      0.0401 #>  8  -3.25 0.0169  0.0000741      0.0935 #>  9  -3.40 0.00831 0.000891      -0.463  #> 10  -1.45 0.0561  0.0290        -1.02   #> # ℹ 35 more rows"},{"path":"/reference/labels.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Find labels from object — labels.SSN2","title":"Find labels from object — labels.SSN2","text":"Find suitable set labels fitted model object.","code":""},{"path":"/reference/labels.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find labels from object — labels.SSN2","text":"","code":"# S3 method for ssn_lm labels(object, ...)  # S3 method for ssn_glm labels(object, ...)"},{"path":"/reference/labels.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find labels from object — labels.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/labels.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find labels from object — labels.SSN2","text":"character vector containing terms used fixed effects fitted model object.","code":""},{"path":"/reference/labels.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find labels from object — labels.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) labels(ssn_mod) #> [1] \"ELEV_DEM\""},{"path":"/reference/logLik.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract log-likelihood — logLik.SSN2","title":"Extract log-likelihood — logLik.SSN2","text":"Find log-likelihood fitted model.","code":""},{"path":"/reference/logLik.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract log-likelihood — logLik.SSN2","text":"","code":"# S3 method for ssn_lm logLik(object, ...)  # S3 method for ssn_glm logLik(object, ...)"},{"path":"/reference/logLik.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract log-likelihood — logLik.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/logLik.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract log-likelihood — logLik.SSN2","text":"log-likelihood.","code":""},{"path":"/reference/logLik.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract log-likelihood — logLik.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) logLik(ssn_mod) #> [1] -27.09128"},{"path":"/reference/loocv.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform leave-one-out cross validation — loocv.SSN2","title":"Perform leave-one-out cross validation — loocv.SSN2","text":"Perform leave-one-cross validation options computationally efficient approximations big data.","code":""},{"path":"/reference/loocv.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform leave-one-out cross validation — loocv.SSN2","text":"","code":"# S3 method for ssn_lm loocv(object, cv_predict = FALSE, se.fit = FALSE, ...)  # S3 method for ssn_glm loocv(object, cv_predict = FALSE, se.fit = FALSE, ...)"},{"path":"/reference/loocv.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform leave-one-out cross validation — loocv.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). cv_predict logical indicating whether leave-one-fitted values returned. Defaults FALSE. se.fit logical indicating whether leave-one-prediction standard errors returned. Defaults FALSE. ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/loocv.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform leave-one-out cross validation — loocv.SSN2","text":"cv_predict = FALSE se.fit = FALSE, tibble indicating several leave-one-cross validation error metrics. cv_predict = TRUE se.fit = TRUE, list elements: stats, tibble indicating several leave-one-cross validation metrics; cv_predict, numeric vector leave-one-predictions observation (cv_predict = TRUE); se.fit, numeric vector leave-one-prediction standard errors observation (se.fit = TRUE). ssn_lm object, cross validation error metrics : bias: average difference predicted value true value std.bias: average standardized difference predicted value true value MSPE: average squared difference predicted value true value RMSPE: root average squared difference predicted value true value std.MSPE: average standardized squared difference predicted value true value RAV: root average estimated variance predicted value cor2: squared correlation predicted true values cover.80: Coverage rates 80% prediction intervals built true values cover.90: Coverage rates 90% prediction intervals built true values cover.95: Coverage rates 95% prediction intervals built true values ssn_glm object, cross validation error metrics : bias: average difference predicted value true value MSPE: average squared difference predicted value true value RMSPE: root average squared difference predicted value true value RAV: root average estimated variance predicted value (link scale)","code":""},{"path":"/reference/loocv.SSN2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform leave-one-out cross validation — loocv.SSN2","text":"observation held-data set remaining data used make prediction held-observation. compared true value observation several model-fit statistics computed across observations.","code":""},{"path":"/reference/loocv.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform leave-one-out cross validation — loocv.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) loocv(ssn_mod) #> # A tibble: 1 × 10 #>     bias std.bias  MSPE RMSPE std.MSPE   RAV  cor2 cover.80 cover.90 cover.95 #>    <dbl>    <dbl> <dbl> <dbl>    <dbl> <dbl> <dbl>    <dbl>    <dbl>    <dbl> #> 1 0.0917   0.0846 0.235 0.485     1.14 0.384 0.942    0.733    0.844    0.889"},{"path":"/reference/mf04p.html","id":null,"dir":"Reference","previous_headings":"","what":"Imported SSN object from the MiddleFork04.ssn data folder — mf04p","title":"Imported SSN object from the MiddleFork04.ssn data folder — mf04p","text":"MiddleFork04.ssn data folder contains spatial, attribute, topological information needed construct spatial stream network object using SSN2 package. mf04p created using ssn_import().","code":""},{"path":"/reference/mf04p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imported SSN object from the MiddleFork04.ssn data folder — mf04p","text":"","code":"mf04p"},{"path":"/reference/mf04p.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Imported SSN object from the MiddleFork04.ssn data folder — mf04p","text":"object class SSN length 4.","code":""},{"path":[]},{"path":"/reference/MiddleFork04.ssn.html","id":null,"dir":"Reference","previous_headings":"","what":"MiddleFork04.ssn: Middle Fork 2004 stream temperature dataset — MiddleFork04.ssn","title":"MiddleFork04.ssn: Middle Fork 2004 stream temperature dataset — MiddleFork04.ssn","text":"MiddleFork04.ssn data folder contains spatial, attribute, topological information needed construct SSN object using SSN2 package.","code":""},{"path":"/reference/MiddleFork04.ssn.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"MiddleFork04.ssn: Middle Fork 2004 stream temperature dataset — MiddleFork04.ssn","text":"edges modified version United States National Hydrography Dataset (http://nhd.usgs.gov/). sites, pred1km, CapeHorn Knapp unpublished United States Forest Service data.","code":""},{"path":"/reference/MiddleFork04.ssn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MiddleFork04.ssn: Middle Fork 2004 stream temperature dataset — MiddleFork04.ssn","text":"MiddleFork04.ssn folder contains five shapefiles: edges: polyline shapefile representing stream network sites: point shapefile representing observed site locations pred1km: point shapefile representing prediction site locations approximately 1km intervals throughout stream network Knapp: point shapefile representing prediction site locations Knapp River CapeHorn: point shapefile representing prediction site locations Cape Horn River MiddleFork04.ssn includes one text file, netID1.txt, contains topological information stream network Middle Fork 2004 dataset. distance folder contains four folders store hydrologic distance matrices point shapefiles (obs, CapeHorn, Knapp, pred1km). See ssn_create_distmat() detailed description distance matrix file structure. Attribute data also stored within spatial datasets. column names defined follows: edges: COMID: Common identifier NHD feature relationship GNIS_Name: Feature name found Geographic Names Information System REACHCODE: Unique identifier reach. first 8 digits contain identfier HUC8 last 6 digits unique within-HUC8 identifier reach FTYPE: three-digit integer used classify hydrography features NHD define subtypes FCODE: Numeric code contains feature type attributes found NHDFCode lookup table CDRAINAG: Cumulative drainage area (km2) lowermost location edge AREAWTMAP: Area weighted mean annual precipitation (mm) lowermost location edge SLOPE: Slope edge (cm/cm) h2oAreaKm2: Watershed area (km2) lowermost location line segment rid: Reach identifier areaPI: Segment proportional influence value, calculated using watershed area (h2oAreaKm2) afvArea: Additive function value, calculated using areaPI upDist: Distance stream outlet (downstream location stream network) uppermost location line segment Length: Length line segment (m) netID: Network identifier sites: STREAMNAME: Stream name COMID: Common identifier NHD feature relationship CDRAINAG: Cumulative drainage area (km2) AREAWTMAP: Area weighted mean annual precipitation (mm) lowermost location line segment site resides SLOPE: Slope line segment (cm/cm) site resides ELEV_DEM: Elevation site based 30m DEM Source: Source data - relates ID field source table Summer_mn: Overall summer mean termperature (C) deployment MaxOver20: Binary variable: 1 represents maximum summer temperature greater 20C 0 indicates less 20C C16: Number times daily stream temperature exceeded 16C C20: Number times daily stream temperature exceeded 20C C24: Number times daily stream temperature exceeded 24C FlowCMS: Average stream flow (cubic meters per sec) August, year, 1950-2010 across 9 USGS gauges region AirMEANc: Average mean air temperature (C) July 15 - August 31, 1980-2009 across 10 COOP air stations within domain AirMWMTc: Average maximum air temperature (C) July 15 - August 31, 1980-2009 across 10 COOP air stations within domain. MWMT = maximum 7-day moving average maximum daily temperature (.e. maximum 7-day maximums) NEAR_X: x coordinate NEAR_Y: y coordinate rid: Reach identifier edge site resides ratio: Site ratio value; provides proportional distance along edge site location upDist: Distance upstream stream outlet (m) afvArea: Additive function value calculated using waterhsed area (h2oAreaKm2) locID: Location identifier netID: Stream network identifier pid: Point identifier pred1km, CapeHorn, Knapp: COMID: Common identifier NHD feature relationship GNIS_Name: Feature name edge site resides , found Geographic Names Information System CDRAINAG: Cumulative drainage area (km2) AREAWTMAP: Area weighted mean annual precipitation (mm) lowermost location line segment site resides SLOPE: Slope line segment (cm/cm) site resides ELEV_DEM: Elevation site based 30m DEM NEAR_X: x coordinate NEAR_Y: y coordinate rid: Reach identifier edge site resides ratio: Site ratio value; provides proportional distance along edge site location upDist: Distance upstream stream outlet (m) afvArea: Additive function value calculated using watershed area (h2oAreaKm2) locID: Location identifier netID: Stream network identifier pid: Point identifier FlowCMS: Average stream flow (cubic meters per sec) August, year, 1950-2010 across 9 USGS gauges region AirMEANc: Average mean air temperature (C) July 15 - August 31, 1980-2009 across 10 COOP air stations within domain AirMWMTc: Average maximum air temperature (C) July 15 - August 31, 1980-2009 across 10 COOP air stations within domain. MWMT = maximum 7-day moving average maximum daily temperature(.e. maximum 7-day maximums)","code":""},{"path":[]},{"path":"/reference/model.frame.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the model frame from a fitted model object — model.frame.SSN2","title":"Extract the model frame from a fitted model object — model.frame.SSN2","text":"Extract model frame fitted model object.","code":""},{"path":"/reference/model.frame.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the model frame from a fitted model object — model.frame.SSN2","text":"","code":"# S3 method for ssn_lm model.frame(formula, ...)  # S3 method for ssn_glm model.frame(formula, ...)"},{"path":"/reference/model.frame.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the model frame from a fitted model object — model.frame.SSN2","text":"formula fitted model object ssn_lm() ssn_glm(). ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/model.frame.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the model frame from a fitted model object — model.frame.SSN2","text":"model frame contains variables used formula fitted model object.","code":""},{"path":[]},{"path":"/reference/model.frame.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the model frame from a fitted model object — model.frame.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) model.frame(ssn_mod) #>    Summer_mn ELEV_DEM #> 1      11.38     1977 #> 2      10.72     1984 #> 3      10.43     1993 #> 4      10.13     2007 #> 5      10.12     2009 #> 6       9.81     2012 #> 7       9.76     2023 #> 8       9.77     2023 #> 9       9.53     2026 #> 10     12.57     1988 #> 11     12.42     2013 #> 12     14.10     2015 #> 13     13.22     2038 #> 14     13.08     2052 #> 15     12.19     2066 #> 16     11.32     2085 #> 17     12.11     1975 #> 18     11.82     1982 #> 19     11.91     1999 #> 20     11.41     2002 #> 21     11.71     1997 #> 22     11.54     2006 #> 23     11.14     2026 #> 24     12.06     2036 #> 25     12.09     2046 #> 26     11.96     2050 #> 27     11.02     2071 #> 28     11.16     2016 #> 29      8.75     2034 #> 30      9.02     2042 #> 31     14.61     1958 #> 32     14.92     1947 #> 33     14.72     1952 #> 34     15.22     1923 #> 35     14.49     1932 #> 36     15.29     1940 #> 37     15.07     1940 #> 38     14.94     1945 #> 39     14.99     1948 #> 40     15.02     1950 #> 41     15.11     1949 #> 42     14.70     1950 #> 43     14.58     1951 #> 44     13.70     2015 #> 45     10.21     2077"},{"path":"/reference/model.matrix.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the model matrix from a fitted model object — model.matrix.SSN2","title":"Extract the model matrix from a fitted model object — model.matrix.SSN2","text":"Extract model matrix (X) fitted model object.","code":""},{"path":"/reference/model.matrix.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the model matrix from a fitted model object — model.matrix.SSN2","text":"","code":"# S3 method for ssn_lm model.matrix(object, ...)  # S3 method for ssn_glm model.matrix(object, ...)"},{"path":"/reference/model.matrix.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the model matrix from a fitted model object — model.matrix.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/model.matrix.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the model matrix from a fitted model object — model.matrix.SSN2","text":"model matrix (fixed effects), whose rows represent observations whose columns represent explanatory variables corresponding fixed effect.","code":""},{"path":[]},{"path":"/reference/model.matrix.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the model matrix from a fitted model object — model.matrix.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) model.matrix(ssn_mod) #>    (Intercept) ELEV_DEM #> 1            1     1977 #> 2            1     1984 #> 3            1     1993 #> 4            1     2007 #> 5            1     2009 #> 6            1     2012 #> 7            1     2023 #> 8            1     2023 #> 9            1     2026 #> 10           1     1988 #> 11           1     2013 #> 12           1     2015 #> 13           1     2038 #> 14           1     2052 #> 15           1     2066 #> 16           1     2085 #> 17           1     1975 #> 18           1     1982 #> 19           1     1999 #> 20           1     2002 #> 21           1     1997 #> 22           1     2006 #> 23           1     2026 #> 24           1     2036 #> 25           1     2046 #> 26           1     2050 #> 27           1     2071 #> 28           1     2016 #> 29           1     2034 #> 30           1     2042 #> 31           1     1958 #> 32           1     1947 #> 33           1     1952 #> 34           1     1923 #> 35           1     1932 #> 36           1     1940 #> 37           1     1940 #> 38           1     1945 #> 39           1     1948 #> 40           1     1950 #> 41           1     1949 #> 42           1     1950 #> 43           1     1951 #> 44           1     2015 #> 45           1     2077 #> attr(,\"assign\") #> [1] 0 1"},{"path":"/reference/names.SSN.html","id":null,"dir":"Reference","previous_headings":"","what":"names SSN object — names.SSN","title":"names SSN object — names.SSN","text":"Extract print names SSN object","code":""},{"path":"/reference/names.SSN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"names SSN object — names.SSN","text":"","code":"# S3 method for SSN names(x, ...)"},{"path":"/reference/names.SSN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"names SSN object — names.SSN","text":"x SSN object. ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/names.SSN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"names SSN object — names.SSN","text":"Print variable names console","code":""},{"path":"/reference/plot.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot fitted model diagnostics — plot.SSN2","title":"Plot fitted model diagnostics — plot.SSN2","text":"Plot fitted model diagnostics residuals vs fitted values, quantile-quantile, scale-location, Cook's distance, residuals vs leverage, Cook's distance vs leverage.","code":""},{"path":"/reference/plot.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot fitted model diagnostics — plot.SSN2","text":"","code":"# S3 method for ssn_lm plot(x, which, ...)  # S3 method for ssn_glm plot(x, which, ...)"},{"path":"/reference/plot.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot fitted model diagnostics — plot.SSN2","text":"x fitted model object ssn_lm() ssn_glm(). integer vector taking values 1 6, indicates plots return. Available plots described Details. length greater one, additional plots stepped order using <Return>. default = c(1, 2) ... arguments passed methods.","code":""},{"path":"/reference/plot.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot fitted model diagnostics — plot.SSN2","text":"return value. Function called plotting side effects.","code":""},{"path":"/reference/plot.SSN2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot fitted model diagnostics — plot.SSN2","text":"fitted model objects,, values make corresponding plot: 1: Standardized residuals vs fitted values (response) 2: Normal quantile-quantile plot standardized residuals 3: Scale-location plot standardized residuals 4: Cook's distance 5: Standardized residuals vs leverage 6: Cook's distance vs leverage","code":""},{"path":[]},{"path":"/reference/plot.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot fitted model diagnostics — plot.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) plot(ssn_mod, which = 1)"},{"path":"/reference/plot.Torgegram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Torgegram — plot.Torgegram","title":"Plot Torgegram — plot.Torgegram","text":"Plot Torgegram","code":""},{"path":"/reference/plot.Torgegram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Torgegram — plot.Torgegram","text":"","code":"# S3 method for Torgegram plot(x, type, separate = FALSE, ...)"},{"path":"/reference/plot.Torgegram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Torgegram — plot.Torgegram","text":"x Torgegram object Torgegram(). type type semivariogram. Can take character values subset objects x. default names(x). separate type length greater one, whether type placed separate plot. default FALSE. ... arguments passed methods.","code":""},{"path":"/reference/plot.Torgegram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Torgegram — plot.Torgegram","text":"return value. Function called plotting side effects.","code":""},{"path":[]},{"path":"/reference/plot.Torgegram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Torgegram — plot.Torgegram","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  tg <- Torgegram(Summer_mn ~ 1, mf04p) plot(tg)"},{"path":"/reference/predict.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Model predictions (Kriging) — predict.SSN2","title":"Model predictions (Kriging) — predict.SSN2","text":"Predicted values intervals based fitted model object.","code":""},{"path":"/reference/predict.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model predictions (Kriging) — predict.SSN2","text":"","code":"# S3 method for ssn_lm predict(   object,   newdata,   se.fit = FALSE,   interval = c(\"none\", \"confidence\", \"prediction\"),   level = 0.95,   block = FALSE,   ... )  # S3 method for ssn_glm predict(   object,   newdata,   type = c(\"link\", \"response\"),   se.fit = FALSE,   interval = c(\"none\", \"confidence\", \"prediction\"),   newdata_size,   level = 0.95,   var_correct = TRUE,   ... )"},{"path":"/reference/predict.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model predictions (Kriging) — predict.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). newdata character vector indicates name prediction data set SSN object predictions desired. omitted, predictions prediction data sets returned. Note name \".missing\" indicates prediction data set contains missing observations data used fit model. se.fit logical indicating standard errors returned. default FALSE. interval Type interval calculation. default \"none\". options \"confidence\" (confidence intervals) \"prediction\" (prediction intervals). level Tolerance/confidence level. default 0.95. block logical indicating whether block prediction entire region newdata returned. default FALSE, returns point predictions location newdata. Currently available model fit using ssn_lm() models fit using ssn_glm() family \"gaussian\". ... arguments. used (needed generic consistency). type scale (response link) predictions obtained using ssn_glm objects. newdata_size size value observation newdata used predicting binomial family. var_correct logical indicating whether return corrected prediction variances predicting via models fit using ssn_glm. default TRUE.","code":""},{"path":"/reference/predict.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model predictions (Kriging) — predict.SSN2","text":"se.fit FALSE, predict.ssn() returns vector predictions matrix predictions column names fit, lwr, upr interval \"confidence\" \"prediction\". se.fit TRUE, list following components returned: fit: vector matrix se.fit: standard error fit","code":""},{"path":"/reference/predict.SSN2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model predictions (Kriging) — predict.SSN2","text":"(empirical) best linear unbiased predictions (.e., Kriging predictions) site returned interval \"none\" \"prediction\" alongside standard errors. Prediction intervals also returned interval \"prediction\". interval \"confidence\", estimated mean returned alongside standard errors confidence intervals mean.","code":""},{"path":"/reference/predict.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model predictions (Kriging) — predict.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, predpts = \"pred1km\", overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) predict(ssn_mod, \"pred1km\") #>          1          2          3          4          5          6          7  #> 14.6443346 15.0150979 14.7513549 14.9717229 15.1513874 15.1159790 15.1069520  #>          8          9         10         11         12         13         14  #> 14.9863186 14.9038332 14.8702627 14.7308979 14.6992062 14.7579446 14.8764063  #>         15         16         17         18         19         20         21  #> 14.3287719 14.4149823 14.0532325 13.9397314 10.9750633 13.1067606 13.6244111  #>         22         23         24         25         26         27         28  #> 10.0996588  5.6054226  8.1409677 12.9269053 13.5019980 11.3419554 11.9747664  #>         29         30         31         32         33         34         35  #> 11.2154309 10.2149138 10.4816809 10.7348106  9.7103402 11.3759625 12.2120558  #>         36         37         38         39         40         41         42  #> 12.9616826 12.5664805 12.3028149 13.8079249 13.5395082 12.9715817 13.2152150  #>         43         44         45         46         47         48         49  #> 12.3273384 12.5850380 10.7406072 10.9713095 11.2308341  8.6629974  9.3260313  #>         50         51         52         53         54         55         56  #> 10.2772878 12.1296929 11.7154947 11.1310275 11.5790357 11.7855844 12.0521877  #>         57         58         59         60         61         62         63  #> 11.2655590  9.7898915  8.0483307  8.7966695  9.1037886  8.5118636 11.4956913  #>         64         65         66         67         68         69         70  #> 11.9862160 11.6161901 12.6246359 12.4406987 10.6278901 11.1747555 11.6063313  #>         71         72         73         74         75         76         77  #> 13.9269581 14.4813989 14.5959969 10.1604842 12.4655751 13.8195311 10.1977736  #>         78         79         80         81         82         83         84  #> 14.5789082 15.4149064 15.5879931 13.6734603 14.5383442 15.1150059 15.3746230  #>         85         86         87         88         89         90         91  #> 10.0788306  7.9453413  8.7202052  7.5438136 11.1468478  9.4793850 10.2847461  #>         92         93         94         95         96         97         98  #>  1.5531965  5.4715321  7.2281978  8.6101730  5.0354923 11.3558953 11.7586313  #>         99        100        101        102        103        104        105  #> 12.2766556 12.5929234  9.8923651  9.3683314  6.6259182 12.7363403  4.3346894  #>        106        107        108        109        110        111        112  #>  3.8724173  3.5215224  7.0452774  8.3977344  7.1561650 -1.1426926  1.4202968  #>        113        114        115        116        117        118        119  #>  4.0985733  6.4886255  7.8698972  7.5852381  9.9485049  3.7673801  5.5245583  #>        120        121        122        123        124        125        126  #>  8.5264446 15.2798374 14.2197123  9.2990140 11.5461684 15.5970950 14.1134907  #>        127        128        129        130        131        132        133  #> 15.2664073  6.0647130  8.3993355 10.3304465  8.0105836 10.6329256 12.2753107  #>        134        135        136        137        138        139        140  #> 12.3778096 14.7132922 16.0976413 14.2078071  9.4203169 12.1022897  5.5831669  #>        141        142        143        144        145        146        147  #>  8.6941805 11.3728589  9.3402885 11.3857715 15.1158602 15.2888149 11.5265537  #>        148        149        150        151        152        153        154  #> 12.5079422 10.3691975 -0.6748125  2.9279685  6.7325051  9.3265074 12.2087322  #>        155        156        157        158        159        160        161  #> 14.2262895  7.5221930 10.5192746 12.5652217  6.8460851 12.3513293  1.0470183  #>        162        163        164        165        166        167        168  #> 12.9732758  8.9524078 11.7760066 11.4752712  7.9069483 11.0199167 11.3624102  #>        169        170        171        172        173        174        175  #> 11.8228944 11.9951556 12.2250606  8.7431663  9.2898993  2.3113801  6.7492847"},{"path":"/reference/print.SSN.html","id":null,"dir":"Reference","previous_headings":"","what":"Print SSN object — print.SSN","title":"Print SSN object — print.SSN","text":"Print information data found SSN object.","code":""},{"path":"/reference/print.SSN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print SSN object — print.SSN","text":"","code":"# S3 method for SSN print(x, ...)"},{"path":"/reference/print.SSN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print SSN object — print.SSN","text":"x SSN object. ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/print.SSN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print SSN object — print.SSN","text":"Print summary console","code":""},{"path":"/reference/print.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Print values — print.SSN2","title":"Print values — print.SSN2","text":"Print fitted model objects summaries.","code":""},{"path":"/reference/print.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print values — print.SSN2","text":"","code":"# S3 method for ssn_lm print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)  # S3 method for ssn_glm print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)  # S3 method for summary.ssn_lm print(   x,   digits = max(3L, getOption(\"digits\") - 3L),   signif.stars = getOption(\"show.signif.stars\"),   ... )  # S3 method for summary.ssn_glm print(   x,   digits = max(3L, getOption(\"digits\") - 3L),   signif.stars = getOption(\"show.signif.stars\"),   ... )  # S3 method for anova.ssn_lm print(   x,   digits = max(getOption(\"digits\") - 2L, 3L),   signif.stars = getOption(\"show.signif.stars\"),   ... )  # S3 method for anova.ssn_glm print(   x,   digits = max(getOption(\"digits\") - 2L, 3L),   signif.stars = getOption(\"show.signif.stars\"),   ... )"},{"path":"/reference/print.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print values — print.SSN2","text":"x fitted model object ssn_lm(), fitted model object ssn_glm(), output summary(x) anova(x). digits number significant digits use printing. ... arguments passed methods. signif.stars Logical. TRUE, significance stars printed coefficient","code":""},{"path":"/reference/print.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print values — print.SSN2","text":"Printed fitted model objects summaries formatting.","code":""},{"path":"/reference/pseudoR2.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a pseudo r-squared — pseudoR2.SSN2","title":"Compute a pseudo r-squared — pseudoR2.SSN2","text":"Compute pseudo r-squared fitted model object.","code":""},{"path":"/reference/pseudoR2.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a pseudo r-squared — pseudoR2.SSN2","text":"","code":"# S3 method for ssn_lm pseudoR2(object, adjust = FALSE, ...)  # S3 method for ssn_glm pseudoR2(object, adjust = FALSE, ...)"},{"path":"/reference/pseudoR2.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a pseudo r-squared — pseudoR2.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). adjust logical indicating whether pseudo r-squared adjusted account number explanatory variables. default FALSE. ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/pseudoR2.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a pseudo r-squared — pseudoR2.SSN2","text":"pseudo r-squared numeric vector.","code":""},{"path":"/reference/pseudoR2.SSN2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a pseudo r-squared — pseudoR2.SSN2","text":"Several pseudo r-squared statistics exist literature. define pseudo r-squared one minus ratio deviance full model relative deviance null (intercept ) model. pseudo r-squared can viewed generalization classical r-squared definition seen one minus ratio error sums squares full model relative error sums squares null model. adjusted, adjustment analogous classical r-squared adjustment.","code":""},{"path":"/reference/pseudoR2.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a pseudo r-squared — pseudoR2.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) pseudoR2(ssn_mod) #> [1] 0.6688124"},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics augment, glance, tidy spmodel AICc, covmatrix, dispersion_initial, dispersion_params, glances, loocv, pseudoR2, randcov_initial, randcov_params, varcomp","code":""},{"path":"/reference/residuals.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted model residuals — residuals.SSN2","title":"Extract fitted model residuals — residuals.SSN2","text":"Extract residuals fitted model object. resid alias.","code":""},{"path":"/reference/residuals.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted model residuals — residuals.SSN2","text":"","code":"# S3 method for ssn_lm residuals(object, type = \"response\", ...)  # S3 method for ssn_lm resid(object, type = \"response\", ...)  # S3 method for ssn_lm rstandard(model, ...)  # S3 method for ssn_glm residuals(object, type = \"deviance\", ...)  # S3 method for ssn_glm resid(object, type = \"deviance\", ...)  # S3 method for ssn_glm rstandard(model, ...)"},{"path":"/reference/residuals.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted model residuals — residuals.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). type \"response\" response residuals, \"pearson\" Pearson residuals, \"standardized\" standardized residuals. ssn_lm() fitted model objects, default \"response\". ssn_glm() fitted model objects, deviance residuals also available (\"deviance\") default residual type. ... arguments. used (needed generic consistency). model fitted model object ssn_lm() ssn_glm().","code":""},{"path":"/reference/residuals.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted model residuals — residuals.SSN2","text":"residuals numeric vector.","code":""},{"path":"/reference/residuals.SSN2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract fitted model residuals — residuals.SSN2","text":"response residuals taken response minus fitted values response: \\(y - X \\hat{\\beta}\\). Pearson residuals response residuals pre-multiplied inverse square root. standardized residuals Pearson residuals divided square root one minus leverage (hat) value. standardized residuals often used check model assumptions, mean zero variance approximately one. rstandard() alias residuals(model, type = \"standardized\").","code":""},{"path":"/reference/residuals.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract fitted model residuals — residuals.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) residuals(ssn_mod) #>           1           2           3           4           5           6  #> -2.96157851 -3.41982277 -3.45042255 -3.34691108 -3.29926659 -3.52279984  #>           7           8           9          10          11          12  #> -3.25575512 -3.24575512 -3.39928838 -1.45453378 -0.88397759  0.85366690  #>          13          14          15          16          17          18  #>  0.63657859  0.90009006  0.41360153  0.09122423 -2.28922300 -2.37746727  #>          19          20          21          22          23          24  #> -1.79748906 -2.21102232 -2.05513356 -1.96573333 -1.78928838 -0.58106590  #>          25          26          27          28          29          30  #> -0.26284342 -0.27755443 -0.61228724 -2.05751085 -3.94871040 -3.44813242  #>          31          32          33          34          35          36  #> -0.27920121 -0.28624593 -0.34213470 -0.67797988 -1.14857965 -0.11800167  #>          37          38          39          40          41          42  #> -0.33800167 -0.32389043 -0.18742369 -0.09977919 -0.03860144 -0.41977919  #>          43          44          45  #> -0.51095694  0.45366690 -1.24935375  resid(ssn_mod) #>           1           2           3           4           5           6  #> -2.96157851 -3.41982277 -3.45042255 -3.34691108 -3.29926659 -3.52279984  #>           7           8           9          10          11          12  #> -3.25575512 -3.24575512 -3.39928838 -1.45453378 -0.88397759  0.85366690  #>          13          14          15          16          17          18  #>  0.63657859  0.90009006  0.41360153  0.09122423 -2.28922300 -2.37746727  #>          19          20          21          22          23          24  #> -1.79748906 -2.21102232 -2.05513356 -1.96573333 -1.78928838 -0.58106590  #>          25          26          27          28          29          30  #> -0.26284342 -0.27755443 -0.61228724 -2.05751085 -3.94871040 -3.44813242  #>          31          32          33          34          35          36  #> -0.27920121 -0.28624593 -0.34213470 -0.67797988 -1.14857965 -0.11800167  #>          37          38          39          40          41          42  #> -0.33800167 -0.32389043 -0.18742369 -0.09977919 -0.03860144 -0.41977919  #>          43          44          45  #> -0.51095694  0.45366690 -1.24935375  rstandard(ssn_mod) #>           1           2           3           4           5           6  #> -1.31417513 -0.63086161 -0.82725055 -0.24495775  0.03588943 -1.27769827  #>           7           8           9          10          11          12  #>  0.04013139  0.09354178 -0.46311916 -1.01690582 -1.17757570  2.07589613  #>          13          14          15          16          17          18  #>  0.48880470  2.10969532 -0.63391890 -0.79209177 -1.13939584 -1.70158717  #>          19          20          21          22          23          24  #>  1.19810814 -1.25985662 -0.31945666 -0.45882772 -0.27215334  1.97924217  #>          25          26          27          28          29          30  #>  0.44190300  0.40506009 -0.76461961  0.17969367 -1.35425063 -1.70206611  #>          31          32          33          34          35          36  #>  0.13160477  0.08275306 -0.25793553  0.49251121 -2.33954032  1.22724195  #>          37          38          39          40          41          42  #> -0.06535745  0.03484793 -0.03803679  0.52173449  1.15188186 -0.57040629  #>          43          44          45  #> -1.03295041 -0.49183235 -0.56160115"},{"path":"/reference/SSN2-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SSN2: Spatial Modeling on Stream Networks — SSN2-package","title":"SSN2: Spatial Modeling on Stream Networks — SSN2-package","text":"Spatial statistical modeling prediction data stream networks, including models based -stream distance (Ver Hoef, J.M. Peterson, E.E., (2010) doi:10.1198/jasa.2009.ap08248 .) Models created using moving average constructions. Spatial linear models, including explanatory variables, can fit (restricted) maximum likelihood. Mapping graphical functions included.","code":""},{"path":[]},{"path":"/reference/SSN2-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SSN2: Spatial Modeling on Stream Networks — SSN2-package","text":"Maintainer: Michael Dumelle Dumelle.Michael@epa.gov (ORCID) Authors: Jay M. Ver Hoef jay.verhoef@noaa.gov Erin Peterson contributors: Alan Pearse [contributor] Dan Isaak [contributor]","code":""},{"path":"/reference/ssn_create_distmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Hydrologic Distances for an SSN object — ssn_create_distmat","title":"Calculate Hydrologic Distances for an SSN object — ssn_create_distmat","text":"Creates collection (non-symmetric) matrices containing pairwise downstream hydrologic distances sites SSN object","code":""},{"path":"/reference/ssn_create_distmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Hydrologic Distances for an SSN object — ssn_create_distmat","text":"","code":"ssn_create_distmat(   ssn.object,   predpts = NULL,   overwrite = FALSE,   among_predpts = FALSE,   only_predpts = FALSE )"},{"path":"/reference/ssn_create_distmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Hydrologic Distances for an SSN object — ssn_create_distmat","text":"ssn.object SSN object predpts name prediction points SSN object. vector length greater one, name iterated upon. Default NULL. overwrite Logical. TRUE, overwrite existing distance matrices. Defaults FALSE. among_predpts Logical. TRUE, compute pairwise distances prediction sites. Defaults FALSE. only_predpts Logical. TRUE, compute distances prediction sites. Defaults FALSE.","code":""},{"path":"/reference/ssn_create_distmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Hydrologic Distances for an SSN object — ssn_create_distmat","text":"ssn_create_distmat function creates collection hierarchical directories ssn$path directory, store pairwise distances sites associated SSN object. See details section additional information.","code":""},{"path":"/reference/ssn_create_distmat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Hydrologic Distances for an SSN object — ssn_create_distmat","text":"distance matrix contains hydrologic distance two sites SSN object needed fit spatial statistical model using tail-tail-autocovariance functions described Ver Hoef Peterson (2010). models implemented R via ssn_lm ssn_glm theSSN2 package. hydrologic distance information needed model covariance flow-connected (.e. water flows one location ) flow-unconnected (.e. water flow one location , reside network) locations differs. total hydrologic distance directionless measure; represents hydrologic distance two sites, ignoring flow direction. hydrologic distance site common downstream stream junction used creating models flow-unconnected pairs, term downstream hydrologic distance. contrast, total hydrologic distance used modeling flow-connected pairs, term total hydrologic distance. downstream hydrologic distance matrix provides enough information meet data requirements tail-tail-models. two locations flow-connected, downstream hydrologic distance upstream location downstream location greater zero, zero direction. two locations flow-unconnected downstream hydrologic distance greater zero directions. site's downstream hydrologic distance equal zero. format downstream hydrologic distance matrix efficient distance information needed fit tail-tail-models stored . example, matrix containing total hydrologic distance sites easily calculated adding downstream distance matrix transpose. downstream hydrologic distances calculated based binaryIDs stored matrices. matrices stored directory named ‘distance’, created ssn_create_distmat function within .ssn directory. distance directory always contain least one directory named ‘obs’, contains number .RData files, one network observed sites residing . naming convention files based netID number (e.g. dist.net1.RData). matrix ‘obs’ folder contains information form square matrix, contains downstream hydrologic distance pair observed sites network. Direction preserved, columns representing site rows representing site. Row column names correspond pid attribute site. argument predpts specified call function, downstream hydrologic distances observed prediction sites also computed. new directory created within distance directory, name corresponding names attribute preds (e.g. attributes(ssn.object$preds)$names). sequence .RData files created within directory, similar structure observed sites, except two objects stored network contains observed prediction sites. letters b used naming convention distinguish two objects (e.g. dist.net1.dist.net1.b). matrices objects represent necessarily square. matrices type , rows correspond observed locations columns prediction locations. contrast, rows correspond prediction locations columns observed locations matrices type b. Direction also preserved, columns representing site rows representing site object types. , row column names correspond pid attribute site. among_predpts = TRUE, downstream hydrologic distances also computed prediction sites, network. stored within distance directory name corresponding prediction points dataset. naming convention prediction prediction site distance matrices distance matrices stored ‘obs’ directory (e.g. dist.net1.RData). extra distance matrices needed perform block Kriging using predict.ssn_lm. only_predpts = TRUE, downstream hydrologic distances calculated observed sites . Pairwise distances calculated observed prediction locations . Pairwise distances prediction locations also calculated among_predpts = TRUE.","code":""},{"path":"/reference/ssn_create_distmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Hydrologic Distances for an SSN object — ssn_create_distmat","text":"","code":"## Copy the MiddleForke04.ssn data to a local temporary directory. ## Only needed for this example. copy_lsn_to_temp() ## Import SSN data mf04p <- ssn_import(paste0(tempdir(), \"/MiddleFork04.ssn\"),   predpts = c(\"pred1km.shp\", \"Knapp\"),   overwrite = TRUE )  ## Create distance matrices for observations and one set of prediction sites ## Include hydrologic distance matrices among prediction sites. ssn_create_distmat(mf04p,   predpts = \"pred1km\", overwrite = TRUE,   among_predpts = TRUE )  ## Create distance matrices for an additional set of prediction points. ## Distance matrices for observations and pred1km prediction sites are ## not recalculated. ssn_create_distmat(mf04p,   predpts = \"Knapp\", overwrite = TRUE,   among_predpts = TRUE, only_predpts = TRUE )"},{"path":"/reference/ssn_get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a data.frame from an SSN, ssn_lm, or ssn_glm object — ssn_get_data","title":"Get a data.frame from an SSN, ssn_lm, or ssn_glm object — ssn_get_data","text":"ssn_get_data function extracts sf data.frame observation prediction data SSN, ssn_lm, ssn_glm object.","code":""},{"path":"/reference/ssn_get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a data.frame from an SSN, ssn_lm, or ssn_glm object — ssn_get_data","text":"","code":"ssn_get_data(x, name = \"obs\")"},{"path":"/reference/ssn_get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a data.frame from an SSN, ssn_lm, or ssn_glm object — ssn_get_data","text":"x object class SSN, ssn_lm, ssn_glm. name internal name dataset object x. observed values, always \"obs\", default.","code":""},{"path":"/reference/ssn_get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a data.frame from an SSN, ssn_lm, or ssn_glm object — ssn_get_data","text":"sf data.frame","code":""},{"path":"/reference/ssn_get_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a data.frame from an SSN, ssn_lm, or ssn_glm object — ssn_get_data","text":"internal name observed data objects class SSN \"obs\" default. another name specified, must represent prediction data set SSN, ssn_lm, ssn_glm object. SSN objects, names obtained using call names(x$preds). object classes, names obtained using call names(x$ssn.object$preds).","code":""},{"path":[]},{"path":"/reference/ssn_get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a data.frame from an SSN, ssn_lm, or ssn_glm object — ssn_get_data","text":"","code":"## Extract observed data from an SSN object # Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, predpts = \"pred1km\", overwrite = TRUE)  obs.df <- ssn_get_data(mf04p) dim(obs.df) #> [1] 45 26  ## Extract prediction data from an SSN object names(mf04p$preds) #> [1] \"pred1km\" pred1km.df <- ssn_get_data(mf04p, name = \"pred1km\") names(pred1km.df) #>  [1] \"COMID\"     \"GNIS_NAME\" \"CDRAINAG\"  \"AREAWTMAP\" \"SLOPE\"     \"ELEV_DEM\"  #>  [7] \"FlowCMS\"   \"AirMEANc\"  \"AirMWMTc\"  \"NEAR_X\"    \"NEAR_Y\"    \"rid\"       #> [13] \"ratio\"     \"afvArea\"   \"upDist\"    \"locID\"     \"netID\"     \"pid\"       #> [19] \"geometry\"  \"netgeom\"    ## extract observed data from an ssn_lm object ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) obs.mod.df <- ssn_get_data(ssn_mod) summary(obs.mod.df) #>   STREAMNAME            COMID             CDRAINAG         AREAWTMAP      #>  Length:45          Min.   :23519297   Min.   :  8.643   Min.   : 786.4   #>  Class :character   1st Qu.:23519365   1st Qu.: 60.136   1st Qu.: 968.2   #>  Mode  :character   Median :23519479   Median : 93.295   Median : 995.2   #>                     Mean   :23519557   Mean   :136.482   Mean   : 998.6   #>                     3rd Qu.:23519529   3rd Qu.:171.534   3rd Qu.:1032.7   #>                     Max.   :23522805   Max.   :477.696   Max.   :1130.4   #>      SLOPE             ELEV_DEM       Source            Summer_mn     #>  Min.   :0.000000   Min.   :1923   Length:45          Min.   : 8.75   #>  1st Qu.:0.002740   1st Qu.:1952   Class :character   1st Qu.:11.02   #>  Median :0.005680   Median :2006   Mode  :character   Median :12.06   #>  Mean   :0.006743   Mean   :1999                      Mean   :12.35   #>  3rd Qu.:0.008430   3rd Qu.:2026                      3rd Qu.:14.58   #>  Max.   :0.044260   Max.   :2085                      Max.   :15.29   #>    MaxOver20           C16            C20              C24       FlowCMS      #>  Min.   :0.0000   Min.   : 0.0   Min.   : 0.000   Min.   :0   Min.   :28.67   #>  1st Qu.:0.0000   1st Qu.:17.0   1st Qu.: 0.000   1st Qu.:0   1st Qu.:28.67   #>  Median :0.0000   Median :32.0   Median : 0.000   Median :0   Median :28.67   #>  Mean   :0.3111   Mean   :26.4   Mean   : 2.867   Mean   :0   Mean   :28.67   #>  3rd Qu.:1.0000   3rd Qu.:39.0   3rd Qu.: 3.000   3rd Qu.:0   3rd Qu.:28.67   #>  Max.   :1.0000   Max.   :41.0   Max.   :19.000   Max.   :0   Max.   :28.67   #>     AirMEANc        AirMWMTc        NEAR_X             NEAR_Y        #>  Min.   :21.12   Min.   :35.1   Min.   :-1530805   Min.   :2527111   #>  1st Qu.:21.12   1st Qu.:35.1   1st Qu.:-1520336   1st Qu.:2529903   #>  Median :21.12   Median :35.1   Median :-1512691   Median :2533285   #>  Mean   :21.12   Mean   :35.1   Mean   :-1514996   Mean   :2532817   #>  3rd Qu.:21.12   3rd Qu.:35.1   3rd Qu.:-1508544   3rd Qu.:2535462   #>  Max.   :21.12   Max.   :35.1   Max.   :-1503079   Max.   :2537823   #>       rid             ratio          afvArea              upDist        #>  Min.   :  0.00   Min.   :0.0143   Length:45          Min.   :  909.9   #>  1st Qu.: 20.00   1st Qu.:0.1967   Class :character   1st Qu.: 6281.2   #>  Median : 41.00   Median :0.4720   Mode  :character   Median :10020.0   #>  Mean   : 41.27   Mean   :0.4564                      Mean   :10176.7   #>  3rd Qu.: 60.00   3rd Qu.:0.6936                      3rd Qu.:14295.2   #>  Max.   :109.00   Max.   :0.9739                      Max.   :19566.2   #>      locID        netID            pid              geometry  #>  Min.   : 1   Min.   :1.000   Min.   : 1   POINT        :45   #>  1st Qu.:12   1st Qu.:1.000   1st Qu.:12   epsg:NA      : 0   #>  Median :23   Median :2.000   Median :23   +proj=aea ...: 0   #>  Mean   :23   Mean   :1.711   Mean   :23                      #>  3rd Qu.:34   3rd Qu.:2.000   3rd Qu.:34                      #>  Max.   :45   Max.   :2.000   Max.   :45                      #>    netgeom          #>  Length:45          #>  Class :character   #>  Mode  :character   #>                     #>                     #>"},{"path":"/reference/ssn_get_netgeom.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract netgeom column — ssn_get_netgeom","title":"Extract netgeom column — ssn_get_netgeom","text":"Extract topological information netgeom column","code":""},{"path":"/reference/ssn_get_netgeom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract netgeom column — ssn_get_netgeom","text":"","code":"ssn_get_netgeom(x, netvars = \"all\", reformat = FALSE)"},{"path":"/reference/ssn_get_netgeom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract netgeom column — ssn_get_netgeom","text":"x sf data.frame found SSN object netgeom column vector netvars Network coordinate variables return. Default \"\". edges, valid column names include: \"NetworkID\", \"SegmentID\", \"DistanceUpstream\". point datasets, valid column names include \"NetworkID\", \"SegmentID\", \"DistanceUpstream\", \"ratio\", \"pid\", \"locID\". reformat Convert network coordinate variables character numeric.","code":""},{"path":"/reference/ssn_get_netgeom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract netgeom column — ssn_get_netgeom","text":"one column requested using netvars, function returns data.frame (default). one column requested, result vector.","code":""},{"path":"/reference/ssn_get_netgeom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract netgeom column — ssn_get_netgeom","text":"SSN object generated using importSSN function, text column named \"netgeom\" added edges, observed sites, prediction sites (exist) data.frames. netgeom column contains data used describe edge site features relate one another topological space. edges, netgeom values contain \"ENETWORK\" prefix, 3 space delimited values parentheses: \"ENETWORK (NetworkID SegmentID DistanceUpstream)\". point datasets (observed prediction sites), values contain \"SNETWORK\" prefix, followed 6 space delimited values parentheses: \"SNETWORK (NetworkID SegmentID DistanceUpstream ratio pid locID)\". ssn_get_netgeom function extracts converts values text numeric, returning either data.frame (default) vector containing variables requested via netvars.","code":""},{"path":"/reference/ssn_get_netgeom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract netgeom column — ssn_get_netgeom","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_get_netgeom(mf04p$obs) #>    NetworkID SegmentID DistanceUpstream           ratio pid locID #> 1          2        32    3194.82758834  0.321185040918   1     1 #> 2          2        33    3896.10674037 0.0690361937938   2     2 #> 3          2        33    4857.50889816  0.370693074276   3     3 #> 4          2        33    5886.68489225  0.693615191033   4     4 #> 5          2        33    6281.22686216   0.81740969149   5     5 #> 6          2        35    7300.18896771  0.472020290969   6     6 #> 7          2        36    8386.87883527  0.467609736278   7     7 #> 8          2        36    8626.98482356  0.595431065021   8     8 #> 9          2        38    10019.9727397  0.481795562545   9     9 #> 10         2        41    4049.94559903  0.241892607278  10    10 #> 11         2        47    8914.29845837  0.356571475119  11    11 #> 12         2        48     9295.3266467  0.223896901083  12    12 #> 13         2        51    12659.9947331  0.171145194729  13    13 #> 14         2        51    14103.2031154  0.799102017173  14    14 #> 15         2        52    16019.2025746  0.601882501114  15    15 #> 16         2        54    18447.5789988  0.132889204232  16    16 #> 17         2        57    3405.72135314  0.609185232313  17    17 #> 18         2        57    4046.04417336  0.973908806041  18    18 #> 19         2        59    5365.42224132  0.845110196768  19    19 #> 20         2        60    6489.59766227  0.885802604708  20    20 #> 21         2        60    5794.51481162  0.258397975972  21    21 #> 22         2        62    7547.78605505  0.128723349502  22    22 #> 23         2        63    10022.9334715   0.70355047499  23    23 #> 24         2        65     10879.708177  0.078434677104  24    24 #> 25         2        66    11985.9719107 0.0893958570497  25    25 #> 26         2        66    12357.0088971  0.242744463686  26    26 #> 27         2        67    15080.7113189  0.665890884643  27    27 #> 28         2        70    9921.48731634  0.881800162966  28    28 #> 29         2        94     10871.508857  0.196749884783  29    29 #> 30         2       109    11795.0008893 0.0160819902947  30    30 #> 31         1         0    16786.5620802   0.79067935202  31    31 #> 32         1         0    14295.1963452 0.0143033570212  32    32 #> 33         1         0    16258.1596546  0.626015066404  33    33 #> 34         1         4    909.868496941  0.231794110614  34    34 #> 35         1         4    1692.25764135  0.515501826192  35    35 #> 36         1         9    8046.69965981  0.280932180239  36    36 #> 37         1        12    10443.8838685  0.613552417712  37    37 #> 38         1        14    13865.3815622  0.907439930469  38    38 #> 39         1        16    14323.7279441  0.182376231574  39    39 #> 40         1        16     14580.785008  0.812239349337  40    40 #> 41         1        18    15652.4273972   0.54977020396  41    41 #> 42         1        20    18642.8233007  0.157200906378  42    42 #> 43         1        20    19566.2045371  0.639335640746  43    43 #> 44         2        48    9711.54632884  0.751115282016  44    44 #> 45         2        68    15672.8306471 0.0751878474962  45    45 ssn_get_netgeom(mf04p$edges, \"DistanceUpstream\") #>     DistanceUpstream #> 1      17458.2653443 #> 2      18357.2013474 #> 3      20793.1520844 #> 4      270.643033817 #> 5      3028.37256124 #> 6      4402.46334121 #> 7       5256.1104882 #> 8      6616.51936215 #> 9      7886.30445018 #> 10     8457.24370497 #> 11     9024.57776818 #> 12     9536.51353251 #> 13      11015.393429 #> 14      12325.976268 #> 15     14022.4029322 #> 16     14249.2973301 #> 17     14657.4130884 #> 18     14790.6182827 #> 19     16358.1988978 #> 20     18341.7531704 #> 21      20256.946519 #> 22     8056.91207735 #> 23     9607.96481233 #> 24     13105.9441562 #> 25     14112.2130889 #> 26     16613.9926597 #> 27     5611.09385126 #> 28     7959.14006425 #> 29     1556.81337221 #> 30     1920.27673835 #> 31     2336.21218485 #> 32     2967.11873356 #> 33     3676.08342921 #> 34     6863.15529791 #> 35     7113.95880148 #> 36     7508.49727746 #> 37     9386.94738161 #> 38     9805.94712673 #> 39     10250.1720836 #> 40     10289.8733396 #> 41     13963.1651297 #> 42      5221.6543089 #> 43     5793.50030353 #> 44     6280.45578932 #> 45     7277.66171417 #> 46     7449.52533783 #> 47     8801.09743647 #> 48     9118.56820965 #> 49     9908.03173594 #> 50     11074.7483485 #> 51     12266.6584864 #> 52     14564.9190207 #> 53     16981.1440334 #> 54     17918.0916672 #> 55     21902.5186538 #> 56      25336.584133 #> 57     26164.3010726 #> 58     4091.85088316 #> 59     4586.16095742 #> 60     5508.24341114 #> 61     6616.11354599 #> 62     7197.21170564 #> 63     9920.68301648 #> 64     10066.0179407 #> 65     10803.9630453 #> 66     11769.6727859 #> 67       14189.23821 #> 68     15528.0057611 #> 69     17454.1798817 #> 70     20006.2582619 #> 71     10029.1136375 #> 72     10892.8779616 #> 73     11270.8487206 #> 74     11844.1591731 #> 75     13763.1476372 #> 76     12715.7735595 #> 77     14546.8345236 #> 78     17838.6435898 #> 79     8887.67517889 #> 80     8891.97355539 #> 81     12839.2250328 #> 82     5433.90934003 #> 83     6124.91189817 #> 84       6267.876827 #> 85     6677.35714099 #> 86     8073.26914058 #> 87     11585.4944924 #> 88     12057.2455603 #> 89      13058.816991 #> 90      19026.619806 #> 91     18924.7499077 #> 92      19525.005383 #> 93     19880.9175089 #> 94     21486.7688274 #> 95     13246.0911694 #> 96     14399.5534169 #> 97     10396.7058431 #> 98     12938.8411906 #> 99     17726.9196396 #> 100    15870.5572204 #> 101     20989.122938 #> 102    15125.2684793 #> 103    15389.8725133 #> 104    14793.2194916 #> 105    14808.0000677 #> 106    18347.8931324 #> 107    19583.0855759 #> 108    14729.3812838 #> 109    6772.63827193 #> 110    13344.6086556 #> 111    12092.1446817 #> 112     9641.3496983 #> 113    7320.38318899 #> 114    12444.8239212 #> 115    8982.07724987 #> 116    10769.2396836 #> 117    8257.25110283 #> 118     14762.170523 #> 119     24929.505597 #> 120    13100.4871773 #> 121    19498.8928168 #> 122    7406.49129826 #> 123    17122.0987313 #> 124    6939.68851959 #> 125    7564.94695587 #> 126    10026.1216248 #> 127    7873.39351219 #> 128    13530.4857972 #> 129    20684.2844081 #> 130    3786.82459871 #> 131    4527.88648086 #> 132    18932.7126208 #> 133     8241.4743325 #> 134    9033.46264257 #> 135    5684.90317016 #> 136    9288.41653484 #> 137    14064.8357297 #> 138    13639.3482775 #> 139    9878.97609863 #> 140    6900.36121897 #> 141    6948.21909422 #> 142    9589.88284429 #> 143    14957.8325229 #> 144    8207.03249122 #> 145    12218.7636229 #> 146     14966.125674 #> 147    10353.6917539 #> 148    10436.3448079 #> 149    16900.7317618 #> 150    11569.3278539 #> 151    13332.8551099 #> 152    11680.4722376 #> 153    12568.0861313 #> 154    13081.1159537 #> 155    12724.5995839 #> 156    17091.6681516 #> 157    15598.4603055 #> 158    14400.3070942 #> 159    15886.9084559 #> 160    10139.4205086 #> 161    7406.60614164 #> 162    6346.02608977 #> 163    7466.07885572"},{"path":"/reference/ssn_get_netgeometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract netgeometry column — ssn_get_netgeometry","title":"Extract netgeometry column — ssn_get_netgeometry","text":"Extract topological information netgeom column","code":""},{"path":"/reference/ssn_get_netgeometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract netgeometry column — ssn_get_netgeometry","text":"","code":"ssn_get_netgeom(x, netvars = \"all\", reformat = FALSE)"},{"path":"/reference/ssn_get_netgeometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract netgeometry column — ssn_get_netgeometry","text":"x sf data.frame found SSN object netgeom column vector netvars Network coordinate variables return. Default \"\". edges, valid column names include: \"NetworkID\", \"SegmentID\", \"DistanceUpstream\". point datasets, valid column names include \"NetworkID\", \"SegmentID\", \"DistanceUpstream\", \"ratio\", \"pid\", \"locID\". reformat Convert network coordinate variables character numeric.","code":""},{"path":"/reference/ssn_get_netgeometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract netgeometry column — ssn_get_netgeometry","text":"one column requested using netvars, function returns data.frame (default). one column requested, result vector.","code":""},{"path":"/reference/ssn_get_netgeometry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract netgeometry column — ssn_get_netgeometry","text":"SSN object generated using importSSN function, text column named \"netgeom\" added edges, observed sites, prediction sites (exist) data.frames. netgeom column contains data used describe edge site features relate one another topological space. edges, netgeom values contain \"ENETWORK\" prefix, 3 space delimited values parentheses: \"ENETWORK (NetworkID SegmentID DistanceUpstream)\". point datasets (observed prediction sites), values contain \"SNETWORK\" prefix, followed 6 space delimited values parentheses: \"SNETWORK (NetworkID SegmentID DistanceUpstream ratio pid locID)\". ssn_get_netgeom function extracts converts values text numeric, returning either data.frame (default) vector containing variables requested via netvars.","code":""},{"path":"/reference/ssn_get_netgeometry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract netgeometry column — ssn_get_netgeometry","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_get_netgeom(mf04p$obs) #>    NetworkID SegmentID DistanceUpstream           ratio pid locID #> 1          2        32    3194.82758834  0.321185040918   1     1 #> 2          2        33    3896.10674037 0.0690361937938   2     2 #> 3          2        33    4857.50889816  0.370693074276   3     3 #> 4          2        33    5886.68489225  0.693615191033   4     4 #> 5          2        33    6281.22686216   0.81740969149   5     5 #> 6          2        35    7300.18896771  0.472020290969   6     6 #> 7          2        36    8386.87883527  0.467609736278   7     7 #> 8          2        36    8626.98482356  0.595431065021   8     8 #> 9          2        38    10019.9727397  0.481795562545   9     9 #> 10         2        41    4049.94559903  0.241892607278  10    10 #> 11         2        47    8914.29845837  0.356571475119  11    11 #> 12         2        48     9295.3266467  0.223896901083  12    12 #> 13         2        51    12659.9947331  0.171145194729  13    13 #> 14         2        51    14103.2031154  0.799102017173  14    14 #> 15         2        52    16019.2025746  0.601882501114  15    15 #> 16         2        54    18447.5789988  0.132889204232  16    16 #> 17         2        57    3405.72135314  0.609185232313  17    17 #> 18         2        57    4046.04417336  0.973908806041  18    18 #> 19         2        59    5365.42224132  0.845110196768  19    19 #> 20         2        60    6489.59766227  0.885802604708  20    20 #> 21         2        60    5794.51481162  0.258397975972  21    21 #> 22         2        62    7547.78605505  0.128723349502  22    22 #> 23         2        63    10022.9334715   0.70355047499  23    23 #> 24         2        65     10879.708177  0.078434677104  24    24 #> 25         2        66    11985.9719107 0.0893958570497  25    25 #> 26         2        66    12357.0088971  0.242744463686  26    26 #> 27         2        67    15080.7113189  0.665890884643  27    27 #> 28         2        70    9921.48731634  0.881800162966  28    28 #> 29         2        94     10871.508857  0.196749884783  29    29 #> 30         2       109    11795.0008893 0.0160819902947  30    30 #> 31         1         0    16786.5620802   0.79067935202  31    31 #> 32         1         0    14295.1963452 0.0143033570212  32    32 #> 33         1         0    16258.1596546  0.626015066404  33    33 #> 34         1         4    909.868496941  0.231794110614  34    34 #> 35         1         4    1692.25764135  0.515501826192  35    35 #> 36         1         9    8046.69965981  0.280932180239  36    36 #> 37         1        12    10443.8838685  0.613552417712  37    37 #> 38         1        14    13865.3815622  0.907439930469  38    38 #> 39         1        16    14323.7279441  0.182376231574  39    39 #> 40         1        16     14580.785008  0.812239349337  40    40 #> 41         1        18    15652.4273972   0.54977020396  41    41 #> 42         1        20    18642.8233007  0.157200906378  42    42 #> 43         1        20    19566.2045371  0.639335640746  43    43 #> 44         2        48    9711.54632884  0.751115282016  44    44 #> 45         2        68    15672.8306471 0.0751878474962  45    45 ssn_get_netgeom(mf04p$edges, \"DistanceUpstream\") #>     DistanceUpstream #> 1      17458.2653443 #> 2      18357.2013474 #> 3      20793.1520844 #> 4      270.643033817 #> 5      3028.37256124 #> 6      4402.46334121 #> 7       5256.1104882 #> 8      6616.51936215 #> 9      7886.30445018 #> 10     8457.24370497 #> 11     9024.57776818 #> 12     9536.51353251 #> 13      11015.393429 #> 14      12325.976268 #> 15     14022.4029322 #> 16     14249.2973301 #> 17     14657.4130884 #> 18     14790.6182827 #> 19     16358.1988978 #> 20     18341.7531704 #> 21      20256.946519 #> 22     8056.91207735 #> 23     9607.96481233 #> 24     13105.9441562 #> 25     14112.2130889 #> 26     16613.9926597 #> 27     5611.09385126 #> 28     7959.14006425 #> 29     1556.81337221 #> 30     1920.27673835 #> 31     2336.21218485 #> 32     2967.11873356 #> 33     3676.08342921 #> 34     6863.15529791 #> 35     7113.95880148 #> 36     7508.49727746 #> 37     9386.94738161 #> 38     9805.94712673 #> 39     10250.1720836 #> 40     10289.8733396 #> 41     13963.1651297 #> 42      5221.6543089 #> 43     5793.50030353 #> 44     6280.45578932 #> 45     7277.66171417 #> 46     7449.52533783 #> 47     8801.09743647 #> 48     9118.56820965 #> 49     9908.03173594 #> 50     11074.7483485 #> 51     12266.6584864 #> 52     14564.9190207 #> 53     16981.1440334 #> 54     17918.0916672 #> 55     21902.5186538 #> 56      25336.584133 #> 57     26164.3010726 #> 58     4091.85088316 #> 59     4586.16095742 #> 60     5508.24341114 #> 61     6616.11354599 #> 62     7197.21170564 #> 63     9920.68301648 #> 64     10066.0179407 #> 65     10803.9630453 #> 66     11769.6727859 #> 67       14189.23821 #> 68     15528.0057611 #> 69     17454.1798817 #> 70     20006.2582619 #> 71     10029.1136375 #> 72     10892.8779616 #> 73     11270.8487206 #> 74     11844.1591731 #> 75     13763.1476372 #> 76     12715.7735595 #> 77     14546.8345236 #> 78     17838.6435898 #> 79     8887.67517889 #> 80     8891.97355539 #> 81     12839.2250328 #> 82     5433.90934003 #> 83     6124.91189817 #> 84       6267.876827 #> 85     6677.35714099 #> 86     8073.26914058 #> 87     11585.4944924 #> 88     12057.2455603 #> 89      13058.816991 #> 90      19026.619806 #> 91     18924.7499077 #> 92      19525.005383 #> 93     19880.9175089 #> 94     21486.7688274 #> 95     13246.0911694 #> 96     14399.5534169 #> 97     10396.7058431 #> 98     12938.8411906 #> 99     17726.9196396 #> 100    15870.5572204 #> 101     20989.122938 #> 102    15125.2684793 #> 103    15389.8725133 #> 104    14793.2194916 #> 105    14808.0000677 #> 106    18347.8931324 #> 107    19583.0855759 #> 108    14729.3812838 #> 109    6772.63827193 #> 110    13344.6086556 #> 111    12092.1446817 #> 112     9641.3496983 #> 113    7320.38318899 #> 114    12444.8239212 #> 115    8982.07724987 #> 116    10769.2396836 #> 117    8257.25110283 #> 118     14762.170523 #> 119     24929.505597 #> 120    13100.4871773 #> 121    19498.8928168 #> 122    7406.49129826 #> 123    17122.0987313 #> 124    6939.68851959 #> 125    7564.94695587 #> 126    10026.1216248 #> 127    7873.39351219 #> 128    13530.4857972 #> 129    20684.2844081 #> 130    3786.82459871 #> 131    4527.88648086 #> 132    18932.7126208 #> 133     8241.4743325 #> 134    9033.46264257 #> 135    5684.90317016 #> 136    9288.41653484 #> 137    14064.8357297 #> 138    13639.3482775 #> 139    9878.97609863 #> 140    6900.36121897 #> 141    6948.21909422 #> 142    9589.88284429 #> 143    14957.8325229 #> 144    8207.03249122 #> 145    12218.7636229 #> 146     14966.125674 #> 147    10353.6917539 #> 148    10436.3448079 #> 149    16900.7317618 #> 150    11569.3278539 #> 151    13332.8551099 #> 152    11680.4722376 #> 153    12568.0861313 #> 154    13081.1159537 #> 155    12724.5995839 #> 156    17091.6681516 #> 157    15598.4603055 #> 158    14400.3070942 #> 159    15886.9084559 #> 160    10139.4205086 #> 161    7406.60614164 #> 162    6346.02608977 #> 163    7466.07885572"},{"path":"/reference/ssn_get_stream_distmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get stream distance matrices from an SSN object — ssn_get_stream_distmat","title":"Get stream distance matrices from an SSN object — ssn_get_stream_distmat","text":"Extracts stream network distance matrices observation prediction data SSN object.","code":""},{"path":"/reference/ssn_get_stream_distmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get stream distance matrices from an SSN object — ssn_get_stream_distmat","text":"","code":"ssn_get_stream_distmat(x, name = \"obs\")"},{"path":"/reference/ssn_get_stream_distmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get stream distance matrices from an SSN object — ssn_get_stream_distmat","text":"x SSN object name Internal name dataset object x. observed values, always \"obs\", default.  get stream network distance matrix prediction data set, name dataset must given, quotes.","code":""},{"path":"/reference/ssn_get_stream_distmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get stream distance matrices from an SSN object — ssn_get_stream_distmat","text":"list asymmetric downstream stream distance matrices, network.","code":""},{"path":"/reference/ssn_get_stream_distmat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get stream distance matrices from an SSN object — ssn_get_stream_distmat","text":"internal name observed data objects class SSN \"obs\" default. another name specified, must represent prediction data set SSN object. SSN objects, names obtained using call names(x$preds). Note traditional symmetric distance matrices. First, distances SSN object represent stream distance, hydrologic distance, distance two locations movement restricted branching stream network. Another important difference distance matrices SSN objects contain downstream stream distance two locations, making asymmetric. asymmetry provides way store two types spatial relationships based stream distance: Flow-connected: Water flows upstream site downstream site. Flow-unconnected: Two sites reside stream network, share flow. example, two sites flow-connected downstream distance upstream site downstream site > 0, downstream distance downstream site upstream site = 0. flow-unconnected sites, downstream distance represents distance site closest downstream junction > 0 directions. Direction preserved, columns representing site rows representing site. Row column names correspond unique point identifier \"pid\" site. matrix, also possible get total stream distance (downstream + upstream) two sites network (see examples additional details). Stream distances calculated within network asymmetric matrices also stored network.  observation data, single square matrix distances returned network, names based netID value (e.g. \"dist.net1\", \"dist.net2\", etc.). However, two distance matrices (\"\" \"b\") required store downstream distance observed prediction sites. label \"\" represents downstream stream distance prediction sites observation sites, label \"b\" represents distance observation sites predictions sites.  Thus, list prediction matrices labeled \"dist.net1.\" downstream distance prediction sites columns, observation sites rows, first network. prediction matrix labeled \"dist.net1.b\" contains downstream distances observation sites columns prediction sites rows, first network. downstream distance matrices observations predictions rectangular, unless number observation prediction locations equal.  argument amongPreds = TRUE used function ssn_create_distmat, distance prediction sites also returned, using labelling convention among observation sites. , matrices network labeled \"dist.net1\", \"dist.net2\", etc., first second network, etc.","code":""},{"path":"/reference/ssn_get_stream_distmat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get stream distance matrices from an SSN object — ssn_get_stream_distmat","text":"Ver Hoef, J.M. Peterson, E.E. (2010) moving average approach spatial statistical models stream networks. Journal American Statistical Association, 105(489), 22--24","code":""},{"path":[]},{"path":"/reference/ssn_get_stream_distmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get stream distance matrices from an SSN object — ssn_get_stream_distmat","text":"","code":"## For this example only, copy MiddleFork04.ssn directory to R's ## temporary directory copy_lsn_to_temp() ## Create an SSN object with prediction sites mf04p <- ssn_import(paste0(tempdir(), \"/MiddleFork04.ssn\"),   predpts = \"pred1km\", overwrite = TRUE )  ## Create distance matrices for obs x obs, obs x preds, and preds x ## preds if (FALSE) { ssn_create_distmat(mf04p,   predpts = \"pred1km\", among_predpts = TRUE,   overwrite = TRUE ) }  ## Check names of prediction datasets names(mf04p$preds) #> [1] \"pred1km\"  ## Get list of stream distance matrices for observations dist_obs <- ssn_get_stream_distmat(mf04p) ## Display structure of list and names of the matrices str(dist_obs) #> List of 2 #>  $ dist.net1: num [1:13, 1:13] 0 2491 528 15877 15094 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:13] \"31\" \"32\" \"33\" \"34\" ... #>   .. ..$ : chr [1:13] \"31\" \"32\" \"33\" \"34\" ... #>  $ dist.net2: num [1:32, 1:32] 0 0 0 0 0 0 0 0 0 0 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:32] \"1\" \"2\" \"3\" \"4\" ... #>   .. ..$ : chr [1:32] \"1\" \"2\" \"3\" \"4\" ... names(dist_obs) #> [1] \"dist.net1\" \"dist.net2\" ## Look at first 5 rows and columns in asymmetric ## downstream only distance matrix for netID == 1 dist_obs$dist.net1[1:5, 1:5] #>            31       32        33 34       35 #> 31     0.0000     0.00     0.000  0   0.0000 #> 32  2491.3657     0.00  1962.963  0   0.0000 #> 33   528.4024     0.00     0.000  0   0.0000 #> 34 15876.6936 13385.33 15348.291  0 782.3891 #> 35 15094.3044 12602.94 14565.902  0   0.0000  ## Create symmetric total stream distance matrix between ## observations strdist_2 <- dist_obs$dist.net2 + t(dist_obs$dist.net2) strdist_2[5:10, 5:10] #>           5        6        7        8        9       10 #> 5     0.000 1018.962 2105.652 2345.758 3738.746 2979.006 #> 6  1018.962    0.000 1086.690 1326.796 2719.784 3997.968 #> 7  2105.652 1086.690    0.000  240.106 1633.094 5084.658 #> 8  2345.758 1326.796  240.106    0.000 1392.988 5324.764 #> 9  3738.746 2719.784 1633.094 1392.988    0.000 6717.751 #> 10 2979.006 3997.968 5084.658 5324.764 6717.751    0.000  ## Get maximum downstream only distance between ## observations on netID == 2 a.mat <- pmax(dist_obs$dist.net2, t(dist_obs$dist.net2)) a.mat[5:10, 5:10] #>           5        6        7        8        9       10 #> 5     0.000 1018.962 2105.652 2345.758 3738.746 2605.143 #> 6  1018.962    0.000 1086.690 1326.796 2719.784 3624.106 #> 7  2105.652 1086.690    0.000  240.106 1633.094 4710.795 #> 8  2345.758 1326.796  240.106    0.000 1392.988 4950.901 #> 9  3738.746 2719.784 1633.094 1392.988    0.000 6343.889 #> 10 2605.143 3624.106 4710.795 4950.901 6343.889    0.000  ## Get minimum downstream only distance between observations. If ## minimum distance == 0, sites are flow-connected b.mat <- pmin(dist_obs$dist.net2, t(dist_obs$dist.net2)) b.mat[5:10, 5:10] #>           5        6        7        8        9       10 #> 5    0.0000   0.0000   0.0000   0.0000   0.0000 373.8622 #> 6    0.0000   0.0000   0.0000   0.0000   0.0000 373.8622 #> 7    0.0000   0.0000   0.0000   0.0000   0.0000 373.8622 #> 8    0.0000   0.0000   0.0000   0.0000   0.0000 373.8622 #> 9    0.0000   0.0000   0.0000   0.0000   0.0000 373.8622 #> 10 373.8622 373.8622 373.8622 373.8622 373.8622   0.0000  ## Get distance matrices for pred1km dist_pred1km <- ssn_get_stream_distmat(mf04p, name = \"pred1km\") str(dist_pred1km) #> List of 6 #>  $ dist.net1  : num [1:57, 1:57] 0 1000 0 0 0 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:57] \"46\" \"47\" \"48\" \"49\" ... #>   .. ..$ : chr [1:57] \"46\" \"47\" \"48\" \"49\" ... #>  $ dist.net1.a: num [1:13, 1:57] 0 0 0 1119 336 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:13] \"31\" \"32\" \"33\" \"34\" ... #>   .. ..$ : chr [1:57] \"46\" \"47\" \"48\" \"49\" ... #>  $ dist.net1.b: num [1:57, 1:13] 14758 15758 13384 11170 9900 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:57] \"46\" \"47\" \"48\" \"49\" ... #>   .. ..$ : chr [1:13] \"31\" \"32\" \"33\" \"34\" ... #>  $ dist.net2  : num [1:118, 1:118] 0 0 0 0 0 0 0 0 0 0 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:118] \"74\" \"75\" \"76\" \"77\" ... #>   .. ..$ : chr [1:118] \"74\" \"75\" \"76\" \"77\" ... #>  $ dist.net2.a: num [1:32, 1:118] 0 0 0 0 0 0 0 0 0 0 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:32] \"1\" \"2\" \"3\" \"4\" ... #>   .. ..$ : chr [1:118] \"74\" \"75\" \"76\" \"77\" ... #>  $ dist.net2.b: num [1:118, 1:32] 2638 0 0 0 0 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:118] \"74\" \"75\" \"76\" \"77\" ... #>   .. ..$ : chr [1:32] \"1\" \"2\" \"3\" \"4\" ... names(dist_pred1km) #> [1] \"dist.net1\"   \"dist.net1.a\" \"dist.net1.b\" \"dist.net2\"   \"dist.net2.a\" #> [6] \"dist.net2.b\" ## Look at first 5 rows and columns of downstream only distances ## FROM prediction sites TO observed sites on netID == 1 dist_pred1km$dist.net1.a[1:5, 1:5] #>           46       47       48       49       50 #> 31    0.0000   0.0000    0.000    0.000    0.000 #> 32    0.0000   0.0000    0.000    0.000    0.000 #> 33    0.0000   0.0000    0.000    0.000    0.000 #> 34 1118.5041 118.5041 2492.595 4706.651 5976.436 #> 35  336.1149   0.0000 1710.206 3924.262 5194.047  ## Look at downstream only stream distances among prediction ## sites in pred1km on netID == 1. This is useful for block ## prediction dist_pred1km$dist.net1[1:5, 1:5] #>      46 47       48       49       50 #> 46    0  0 1374.091 3588.147 4857.932 #> 47 1000  0 2374.091 4588.147 5857.932 #> 48    0  0    0.000 2214.056 3483.841 #> 49    0  0    0.000    0.000 1269.785 #> 50    0  0    0.000    0.000    0.000"},{"path":"/reference/ssn_glm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Generalized Linear Models for Spatial Stream Networks — ssn_glm","title":"Fitting Generalized Linear Models for Spatial Stream Networks — ssn_glm","text":"function works spatial stream network objects fit generalized linear models spatially autocorrelated errors using likelihood methods, allowing non-spatial random effects, anisotropy, partition factors, big data methods, . spatial formulation described Ver Hoef Peterson (2010) Peterson Ver Hoef (2010).","code":""},{"path":"/reference/ssn_glm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Generalized Linear Models for Spatial Stream Networks — ssn_glm","text":"","code":"ssn_glm(   formula,   ssn.object,   family,   tailup_type = \"none\",   taildown_type = \"none\",   euclid_type = \"none\",   nugget_type = \"nugget\",   tailup_initial,   taildown_initial,   euclid_initial,   nugget_initial,   dispersion_initial,   additive,   estmethod = \"reml\",   anisotropy = FALSE,   random,   randcov_initial,   partition_factor,   ... )"},{"path":"/reference/ssn_glm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Generalized Linear Models for Spatial Stream Networks — ssn_glm","text":"formula two-sided linear formula describing fixed effect structure model, response left ~ operator terms right, separated + operators. ssn.object spatial stream network object class SSN. family generalized linear model family use ssn_glm(). Available options include \"Gaussian\", \"poisson\", \"nbinomial\" (negative binomial), \"binomial\", \"beta\", \"Gamma\", \"invgauss\". family \"Gaussian\", arguments passed evaluated ssn_lm(). Can quoted unquoted. Note family argument takes single value, rather list structure used stats::glm. See Details . tailup_type tailup covariance function type. Available options include \"linear\", \"spherical\", \"exponential\", \"mariah\", \"epa\", \"none\". Parameterizations described Details. taildown_type taildown covariance function type. Available options include \"linear\", \"spherical\", \"exponential\", \"mariah\", \"epa\", \"none\". Parameterizations described Details. euclid_type euclidean covariance function type. Available options include \"spherical\", \"exponential\", \"gaussian\", \"cosine\", \"cubic\", \"pentaspherical\", \"wave\", \"jbessel\", \"gravity\", \"rquad\", \"magnetic\", \"none\". Parameterizations described Details. nugget_type nugget covariance function type. Available options include \"nugget\" \"none\". Parameterizations described Details. tailup_initial object tailup_initial() specifying initial /known values tailup covariance parameters. taildown_initial object taildown_initial() specifying initial /known values taildown covariance parameters. euclid_initial object euclid_initial() specifying initial /known values euclidean covariance parameters. nugget_initial object nugget_initial() specifying initial /known values nugget covariance parameters. dispersion_initial object dispersion_initial() specifying initial /known values tailup covariance parameters. additive name variable ssn.object used define spatial weights. Can quoted unquoted. tailup covariance functions, additive weights used branching. Technical details describe role additive variable tailup covariance function available Ver Hoef Peterson (2010). estmethod estimation method. Available options include \"reml\" restricted maximum likelihood \"ml\" maximum likelihood. default \"reml\". anisotropy logical indicating whether (geometric) anisotropy modeled. required spcov_initial provided 1) rotate assumed unknown assumed known non-zero 2) scale assumed unknown assumed known less one. anisotropy TRUE, computational times can significantly increase. default FALSE. random one-sided linear formula describing random effect structure model. Terms specified right ~ operator. term structure x1 + ... + xn | g1/.../gm, x1 + ... + xn specifies model random effects g1/.../gm grouping structure. Separate terms separated + must generally wrapped parentheses. Random intercepts added model implicitly least  one variable defined. random intercept desired, must explicitly defined (e.g., x1 + ... + xn - 1 | g1/.../gm). random intercept desired grouping structure, random intercept must specified 1 | g1/.../gm. Note g1/.../gm shorthand (1 | g1/.../gm). random intercepts desired shorthand notation used, parentheses can omitted. randcov_initial optional object specifying initial /known values random effect variances. See spmodel::randcov_initial(). partition_factor one-sided linear formula single term specifying partition factor.  partition factor assumes observations different levels partition factor uncorrelated. ... arguments stats::optim().","code":""},{"path":"/reference/ssn_glm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Generalized Linear Models for Spatial Stream Networks — ssn_glm","text":"list many elements store information fitted model object class ssn_glm. Many generic functions summarize model fit available ssn_glm objects, including AIC, AICc, anova, augment, coef, cooks.distance, covmatrix, deviance, fitted, formula, glance, glances, hatvalues, influence, labels, logLik, loocv, model.frame, model.matrix, plot, predict, print, pseudoR2, summary, terms, tidy, update, varcomp, vcov. fitted model list contains following elements: additive: name additive function value column. anisotropy: Whether euclidean anisotropy modeled. call: function call. coefficients: Model coefficients. contrasts: user-supplied contrasts. cooks_distance: Cook's distance values. crs: geographic coordinate reference system. deviance: model deviance. diagtol: tolerance value may added diagonal  ovariance matrices encourage decomposition stability. estmethod: estimation method. euclid_max: maximum euclidean distance. family: generalized linear model family fitted: Fitted values. formula: model formula. hatvalues: hat (leverage) values. is_known: object identifies parameters known. local_index: index identifier used internally sorting. missing_index: rows \"obs\" object missing responses. n: sample size. npar: number estimated covariance parameters. observed_index: rows \"obs\" object observed responses. optim: optimization output. p: number fixed effects. partition_factor: partition factor formula. pseudoR2: pseudo R-squared. random: random effect formula. residuals: residuals. sf_column_name: name geometry columns ssn.object size: size binomial trials relevant. ssn.object: updated ssn.object. tail_max: maximum stream distance. terms: model terms. vcov: Variance-covariance matrices xlevels: levels factors model matrix. y: response. list elements meant used various generic functions (e.g., residuals() operate model object. possible access elements fitted model list directly, strongly advise generic available return element interest. example, strongly recommend using residuals() obtain model residuals instead accessing fitted model list directly via object$residuals.","code":""},{"path":"/reference/ssn_glm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting Generalized Linear Models for Spatial Stream Networks — ssn_glm","text":"generalized linear model spatial stream networks can written \\(g(\\mu) = \\eta = X \\beta + zu + zd + ze + n\\), \\(\\mu\\) expectation response given random errors, \\(y\\), \\(g()\\) function links mean \\(\\eta\\) (called link function), X fixed effects design matrix, \\(\\beta\\) fixed effects, \\(zu\\) tailup random error, \\(zd\\) taildown random error, \\(ze\\) Euclidean random error, \\(n\\) nugget random error. six generalized linear model families available: poisson assumes \\(y\\) Poisson random variable nbinomial assumes \\(y\\) negative binomial random variable, binomial assumes \\(y\\) binomial random variable, beta assumes \\(y\\) beta random variable, Gamma assumes \\(y\\) gamma random variable, inverse.gaussian assumes \\(y\\) inverse Gaussian random variable. supports \\(y\\) family given : family: support \\(y\\) Gaussian: \\(-\\infty < y < \\infty\\) poisson: \\(0 \\le y\\); \\(y\\) integer nbinomial: \\(0 \\le y\\); \\(y\\) integer binomial: \\(0 \\le y\\); \\(y\\) integer beta: \\(0 < y < 1\\) Gamma: \\(0 < y\\) inverse.gaussian: \\(0 < y\\) generalized linear model families parameterizations link functions given : family: link function Gaussian: \\(g(\\mu) = \\eta\\) (identity link) poisson: \\(g(\\mu) = log(\\eta)\\) (log link) nbinomial: \\(g(\\mu) = log(\\eta)\\) (log link) binomial: \\(g(\\mu) = log(\\eta / (1 - \\eta))\\) (logit link) beta: \\(g(\\mu) = log(\\eta / (1 - \\eta))\\) (logit link) Gamma: \\(g(\\mu) = log(\\eta)\\) (log link) inverse.gaussian: \\(g(\\mu) = log(\\eta)\\) (log link) variance function individual \\(y\\) (given \\(\\mu\\)) generalized linear model family given : family: \\(Var(y)\\) Gaussian: \\(\\sigma^2\\) poisson: \\(\\mu \\phi\\) nbinomial: \\(\\mu + \\mu^2 / \\phi\\) binomial: \\(n \\mu (1 - \\mu) \\phi\\) beta: \\(\\mu (1 - \\mu) / (1 + \\phi)\\) Gamma: \\(\\mu^2 / \\phi\\) inverse.gaussian: \\(\\mu^2 / \\phi\\) parameter \\(\\phi\\) dispersion parameter influences \\(Var(y)\\). poisson binomial families, \\(\\phi\\) always one. Note inverse Gaussian parameterization different standard inverse Gaussian parameterization, variance \\(\\mu^3 / \\lambda\\). Setting \\(\\phi = \\lambda / \\mu\\) yields parameterization, preferred computational stability. Also note dispersion parameter often defined literature \\(V(\\mu) \\phi\\), \\(V(\\mu)\\) variance function mean. use parameterization, important recognize interpreting dispersion estimates. generalized linear model constructions, see McCullagh Nelder (1989). generalized linear model context, tailup, taildown, Euclidean, nugget covariance affect modeled mean observation (conditional effects). link scale, tailup random errors capture spatial covariance moving downstream (depend downstream distance), taildown random errors capture spatial covariance moving upstream (depend upstream) distance, Euclidean random errors capture spatial covariance depends Euclidean distance, nugget random errors captures variability independent spatial locations. \\(\\eta\\) modeled using spatial covariance function expressed \\(de(zu) * R(zu) + de(zd) * R(zd) + de(ze) * R(ze) + nugget * \\). \\(de(zu)\\), \\(de(zu)\\), \\(de(zd)\\) represent tailup, taildown, Euclidean variances, respectively. \\(R(zu)\\), \\(R(zd)\\), \\(R(ze)\\) represent tailup, taildown, Euclidean correlation matrices, respectively. correlation matrix depends range parameter controls distance-decay behavior correlation. \\(nugget\\) represents nugget variance \\(\\) represents identity matrix. tailup_type Details: Let \\(D\\) matrix hydrologic distances, \\(W\\) diagonal matrix weights additive, \\(r = D / range\\), \\(\\) identity matrix. parametric forms flow-connected elements \\(R(zu)\\) given : linear: \\((1 - r) * (r <= 1) * W\\) spherical: \\((1 - 1.5r + 0.5r^3) * (r <= 1) * W\\) exponential: \\(exp(-r) * W\\) mariah: \\(log(90r + 1) / 90r * (D > 0) + 1 * (D = 0) * W\\) epa: \\((D - range)^2 * F * (r <= 1) * W / 16range^5\\) none: \\(\\) * W Details describing F matrix epa covariance given Garreta et al. (2010). Flow-unconnected elements \\(R(zu)\\) assumed uncorrelated. Observations different networks also assumed uncorrelated. taildown_type Details: Let \\(D\\) matrix hydrologic distances, \\(r = D / range\\), \\(\\) identity matrix. parametric forms flow-connected elements \\(R(zd)\\) given : linear: \\((1 - r) * (r <= 1)\\) spherical: \\((1 - 1.5r + 0.5r^3) * (r <= 1)\\) exponential: \\(exp(-r)\\) mariah: \\(log(90r + 1) / 90r * (D > 0) + 1 * (D = 0)\\) epa: \\((D - range)^2 * F1 * (r <= 1) / 16range^5\\) none: \\(\\) Now let \\(\\) matrix contains shorter two distances two sites common downstream junction, \\(r1 = / range\\), \\(B\\) matrix contains longer two distances two sites common downstream junction, \\(r2 = B / range\\),  \\(\\) identity matrix. parametric forms flow-unconnected elements \\(R(zd)\\) given : linear: \\((1 - r2) * (r2 <= 1)\\) spherical: \\((1 - 1.5r1 + 0.5r2) * (1 - r2)^2 * (r2 <= 1)\\) exponential: \\(exp(-(r1 + r2))\\) mariah: \\((log(90r1 + 1) - log(90r2 + 1)) / (90r1 - 90r2) * (=/ B) + (1 / (90r1 + 1)) * (= B)\\) epa: \\((B - range)^2 * F2 * (r2 <= 1) / 16range^5\\) none: \\(\\) Details describing F1 F2 matrices epa covariance given Garreta et al. (2010). Observations different networks assumed uncorrelated. euclid_type Details: Let \\(D\\) matrix Euclidean distances, \\(r = D / range\\), \\(\\) identity matrix. parametric forms elements \\(R(ze)\\) given : exponential: \\(exp(- r )\\) spherical: \\((1 - 1.5r + 0.5r^3) * (r <= 1)\\) gaussian: \\(exp(- r^2 )\\) cubic: \\((1 - 7r^2 + 8.75r^3 - 3.5r^5 + 0.75r^7) * (r <= 1)\\) pentaspherical: \\((1 - 1.875r + 1.25r^3 - 0.375r^5) * (r <= 1)\\) cosine: \\(cos(r)\\) wave: \\(sin(r) * (h > 0) / r + (h = 0)\\) jbessel: \\(Bj(h * range)\\), Bj Bessel-J function gravity: \\((1 + r^2)^{-0.5}\\) rquad: \\((1 + r^2)^{-1}\\) magnetic: \\((1 + r^2)^{-1.5}\\) none: \\(\\) nugget_type Details: Let \\(\\) identity matrix \\(0\\) zero matrix. parametric forms elements nugget variance given : nugget: \\(\\) none: \\(0\\) short, nugget effect modeled nugget_type \"nugget\" omitted nugget_type \"none\". estmethod Details: various estimation methods reml: Maximize restricted log-likelihood. ml: Maximize log-likelihood. anisotropy Details: default, Euclidean covariance parameters except rotate scale assumed unknown, requiring estimation. either rotate scale given initial values 0 1 (respectively) assumed unknown euclid_initial(), anisotropy implicitly set TRUE. (Geometric) Anisotropy modeled transforming Euclidean covariance function decays differently different directions one decays equally directions via rotation scaling original Euclidean coordinates. rotation controlled rotate parameter \\([0, \\pi]\\) radians. scaling controlled scale parameter \\([0, 1]\\). anisotropy correction involves first rotation coordinates clockwise rotate scaling coordinates' minor axis reciprocal scale. Euclidean covariance computed using transformed coordinates. random Details: random effects used (estimation method must \"reml\" \"ml\"), model can written \\(g(\\mu) = \\eta = X \\beta + W1\\gamma 1 + ... Wj\\gamma j + zu + zd + ze + n\\), Z random effects design matrix u random effect. partition_factor Details: partition factor can represented matrix form \\(P\\), elements \\(P\\) equal one observations level partition factor zero otherwise. covariance matrix involving spatial random effects components multiplied element-wise (Hadmard product) \\(P\\), yielding final covariance matrix. Details: Observations NA response values removed model fitting, values can predicted afterwards running predict(object).","code":""},{"path":"/reference/ssn_glm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fitting Generalized Linear Models for Spatial Stream Networks — ssn_glm","text":"function perform internal scaling. optimization stable due large extremely large variances, scale relevant variables variance 1 optimization.","code":""},{"path":"/reference/ssn_glm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting Generalized Linear Models for Spatial Stream Networks — ssn_glm","text":"Garreta, V., Monestiez, P. Ver Hoef, J.M. (2010) Spatial modelling prediction river networks: model, model, hybrid? Environmetrics 21(5), 439--456. McCullagh P. Nelder, J. . (1989) Generalized Linear Models. London: Chapman Hall. Peterson, E.E. Ver Hoef, J.M. (2010) mixed-model moving-average approach geostatistical modeling stream networks. Ecology 91(3), 644--651. Ver Hoef, J.M. Peterson, E.E. (2010) moving average approach spatial statistical models stream networks (discussion). Journal American Statistical Association 105, 6--18. DOI: 10.1198/jasa.2009.ap08248.  Rejoinder pgs. 22--24.","code":""},{"path":"/reference/ssn_glm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Generalized Linear Models for Spatial Stream Networks — ssn_glm","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_gmod <- ssn_glm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   family = \"Gamma\",   tailup_type = \"exponential\",   additive = \"afvArea\" ) summary(ssn_gmod) #>  #> Call: #> ssn_glm(formula = Summer_mn ~ ELEV_DEM, ssn.object = mf04p, family = \"Gamma\",  #>     tailup_type = \"exponential\", additive = \"afvArea\") #>  #> Deviance Residuals: #>        Min         1Q     Median         3Q        Max  #> -0.0125918 -0.0028720 -0.0006556  0.0027528  0.0157742  #>  #> Coefficients (fixed): #>               Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  7.4233120  0.5207267  14.256   <2e-16 *** #> ELEV_DEM    -0.0024085  0.0002589  -9.301   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Pseudo R-squared: 0.6477 #>  #> Coefficients (covariance): #>               Effect     Parameter   Estimate #>   tailup exponential  de (parsill)  3.265e-02 #>   tailup exponential         range  1.006e+06 #>               nugget        nugget  2.110e-05 #>           dispersion    dispersion  8.114e+03 #>"},{"path":"/reference/ssn_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Import SSN object — ssn_import","title":"Import SSN object — ssn_import","text":"function reads spatial data .ssn folder creates SSN object.","code":""},{"path":"/reference/ssn_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import SSN object — ssn_import","text":"","code":"ssn_import(   path,   include_obs = TRUE,   predpts,   format_additive = FALSE,   names_additive = NULL,   overwrite = FALSE )"},{"path":"/reference/ssn_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import SSN object — ssn_import","text":"path Filepath .ssn directory. See details. include_obs default = TRUE. Logical indicating whether observed sites included SSN object. predpts Vector shapefile basenames prediction sites found within .ssn folder. format_additive Logical indicating whether columns containing addtive function values formated SSN2. Default = FALSE. names_additive Character vector column names observed prediction site datasets containing additive function values. Must defined format_additive = TRUE. Default = NULL. overwrite default = FALSE. TRUE, overwrite existing binaryID.db files.","code":""},{"path":"/reference/ssn_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import SSN object — ssn_import","text":"ssn_import returns object class SSN, list four elements containing: edges: sf data.frame containing stream network, additional 'netgeom' column. obs: sf data.frame containing observed site locations, additional 'netgeom' column. NA include_obs =     FALSE. preds: list sf data.frames containing prediction site locations. names preds list correspond basenames prediction site shapefiles (without .shp extension) specified predpts. Empty list predpts provided. path: local file .ssn directory associated SSN object.","code":""},{"path":"/reference/ssn_import.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import SSN object — ssn_import","text":"importSSN function imports spatial data .ssn folder create SSN object. information contained .ssn folder can generated using number proprietary open source software tools: Spatial Tools Analysis River Systems (STARS) tools ArcGIS Desktop versions 9.3x-10.8x (Peterson Ver Hoef 2014). custom ArcGIS toolset designed work existing streams data vector format. openSTARS package (Kattwinkel et al. 2020) extends functionality STARS toolset, makes use R GRASS GIS. open source designed derive streams raster format digital elevation model (DEM). SSNbler package (currently development September 2023) open source version STARS toolset, makes use functionality found sf package process streams data vector format. spatial data processed using one software tools, .ssn directory output contains spatial, topological attribute data needed fit spatial statistical stream network model streams data.  includes: edges shapefile lines represent stream network. sites shapefile points observed data collected stream network. Prediction sites shapefile(s) locations predictions made. netID.dat files distinct network, store topological relationships line segments edges. detailed description .ssn directory contents provided Peterson Ver Hoef (2014). ssn_import imports edges, observed sites, prediction sites sf data.frame objects. new column named 'netgeom' created store important data represents topological relationships spatial stream network model. data stored character format, less likely inadvertantly changed users. See ssn_get_netgeom detailed description format contents 'netgeom'. information contained netID text files imported SQLite database, binaryID.db, stored .ssn directory. information used internally ssn_create_distmat, ssn_lm ssn_glm calculate data necessary fit spatial statistical model stream network data. overwrite = TRUE (overwrite = FALSE default) binaryID.db file already exists within .ssn directory, overwriten SSN object created. minimum, SSN object must always contain streams, referred edges. SSN object also typically contain set observed sites, measurements collected one observed dataset permitted. include_obs=FALSE, SSN object created without observations. option provides flexibility users like simulate data set artifical sites existing stream network. Note observation sites must included SSN object order fit models using ssn_lm ssn_glm. SSN object may contain multiple sets prediction points (none), stored separate shapefiles .ssn directory. ssn_import_predpts function allows users import additional sets prediction sites existing SSN object.","code":""},{"path":"/reference/ssn_import.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import SSN object — ssn_import","text":"Kattwinkel, M., Szocs, E., Peterson, E., Schafer, R.B. (2020) Preparing GIS data analysis stream monitoring data: R package openSTARS. PLOS One 15(9), e0239237. Peterson, E., Ver Hoef, J.M. (2014) STARS: ArcGIS toolset used calculate spatial information needed fit spatial statistical stream network models stream network data. Journal Statistical Software 56(2), 1--17.","code":""},{"path":[]},{"path":"/reference/ssn_import.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import SSN object — ssn_import","text":"","code":"## Create local temporary copy of MiddleFork04.ssn found in # SSN2/lsndata folder. Only necessary for this example. copy_lsn_to_temp()  ## Import SSN object with no prediction sites mf04 <- ssn_import(paste0(tempdir(), \"/MiddleFork04.ssn\"),   overwrite = TRUE )  ## Import SSN object with 3 sets of prediction sites mf04p <- ssn_import(paste0(tempdir(), \"/MiddleFork04.ssn\"),   predpts = c(     \"pred1km.shp\",     \"CapeHorn.shp\",     \"Knapp.shp\"   ),   overwrite = TRUE )"},{"path":"/reference/ssn_import_predpts.html","id":null,"dir":"Reference","previous_headings":"","what":"Import prediction points into an SSN, ssn_lm, or ssn_glm object — ssn_import_predpts","title":"Import prediction points into an SSN, ssn_lm, or ssn_glm object — ssn_import_predpts","text":"shapefile prediction points found .ssn directory imported existing object class SSN, ssn_lm, ssn_glm.","code":""},{"path":"/reference/ssn_import_predpts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import prediction points into an SSN, ssn_lm, or ssn_glm object — ssn_import_predpts","text":"","code":"ssn_import_predpts(x, predpts, format_additive = FALSE, names_additive = NULL)"},{"path":"/reference/ssn_import_predpts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import prediction points into an SSN, ssn_lm, or ssn_glm object — ssn_import_predpts","text":"x object classSSN, ssn_lm, ssn_glm. predpts Name prediction point shapefile import character format, without .shp extension. format_additive Logical indicating whether columns containing addtive function values formated SSN2. Default = FALSE. names_additive Character vector column names observed prediction site datasets containing additive function values. Must defined format_additive = TRUE. Default = NULL.","code":""},{"path":"/reference/ssn_import_predpts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import prediction points into an SSN, ssn_lm, or ssn_glm object — ssn_import_predpts","text":"object class SSN, ssn_lm, ssn_glm contains new prediction dataset. name prediction dataset preds list corresponds basenames prediction site shapefiles (without .shp extension) specified predpts. See ssn_import detailed description prediction dataset format within SSN class object.","code":""},{"path":"/reference/ssn_import_predpts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import prediction points into an SSN, ssn_lm, or ssn_glm object — ssn_import_predpts","text":"ssn_import_predpts imports shapefile prediction points residing .ssn directory existing SSN, ssn_lm, ssn_glm object. prediction dataset must reside ssn.object$path directory. path SSN object can updated using ssn_update_path() prior importing prediction datasets. Note , prediction dataset must contain spatial, topological attribute information needed make predictions using ssn_lm ssn_glm object.  information can generated using number proprietary open source software tools: Spatial Tools Analysis River Systems (STARS) tools ArcGIS Desktop versions 9.3x-10.8x (Peterson Ver Hoef 2014). custom ArcGIS toolset designed work existing streams data vector format. openSTARS package (Kattwinkel et al. 2020) extends functionality STARS toolset, makes use R GRASS GIS. open source designed derive streams raster format digital elevation model (DEM). SSNbler package (currently development September 2023) open source version STARS toolset, makes use functionality found sf package process streams data vector format.","code":""},{"path":"/reference/ssn_import_predpts.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import prediction points into an SSN, ssn_lm, or ssn_glm object — ssn_import_predpts","text":"Kattwinkel, M., Szocs, E., Peterson, E., Schafer, R.B. (2020) Preparing GIS data analysis stream monitoring data: R package openSTARS. PLOS One 15(9), e0239237. Peterson, E., Ver Hoef, J.M. (2014) STARS: ArcGIS toolset used calculate spatial information needed fit spatial statistical stream network models stream network data. Journal Statistical Software 56(2), 1--17.","code":""},{"path":"/reference/ssn_import_predpts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import prediction points into an SSN, ssn_lm, or ssn_glm object — ssn_import_predpts","text":"","code":"## Create local temporary copy of MiddleFork04.ssn found in # SSN2/lsndata folder. Only necessary for this example. copy_lsn_to_temp()  ## Import SSN object with no prediction sites mf04p <- ssn_import(paste0(tempdir(), \"/MiddleFork04.ssn\"),   overwrite = TRUE )  ## Import pred1km prediction dataset into SSN object mf04p <- ssn_import(paste0(tempdir(), \"/MiddleFork04.ssn\")) #> binaryID.db already exists - no changes were made to binaryID.db table mf04p <- ssn_import_predpts(mf04p, predpts = \"pred1km\") names(mf04p$preds) #> [1] \"pred1km\"  ## Import pred1km prediction dataset into a ssn_glm object ssn_gmod <- ssn_glm(Summer_mn ~ netID, mf04p,   family = \"Gamma\",   tailup_type = \"exponential\", additive = \"afvArea\" ) ssn_gmod <- ssn_import_predpts(ssn_gmod, predpts = \"CapeHorn\") names(ssn_gmod$ssn.object$preds) #> [1] \"pred1km\"  \"CapeHorn\""},{"path":"/reference/ssn_initial.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a covariance parameter initial object — ssn_initial","title":"Create a covariance parameter initial object — ssn_initial","text":"Create covariance parameter initial object specifies initial /known values use estimating specific covariance parameters ssn_lm() ssn_glm().  See spmodel::randcov_initial() documentation regarding random effect covariance parameter initial objects.","code":""},{"path":"/reference/ssn_initial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a covariance parameter initial object — ssn_initial","text":"","code":"tailup_initial(tailup_type, de, range, known)  taildown_initial(taildown_type, de, range, known)  euclid_initial(euclid_type, de, range, rotate, scale, known)  nugget_initial(nugget_type, nugget, known)"},{"path":"/reference/ssn_initial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a covariance parameter initial object — ssn_initial","text":"tailup_type tailup covariance function type. Available options include \"linear\", \"spherical\", \"exponential\", \"mariah\", \"epa\", \"none\". de spatially dependent (correlated) random error variance. Commonly referred partial sill. range correlation parameter. known character vector indicating covariance parameters assumed known. value \"given\" shorthand assuming covariance parameters given *_initial() assumed known. taildown_type taildown covariance function type. Available options include \"linear\", \"spherical\", \"exponential\", \"mariah\", \"epa\", \"none\". euclid_type euclidean covariance function type. Available options include \"spherical\", \"exponential\", \"gaussian\", \"cosine\", \"cubic\", \"pentaspherical\", \"wave\", \"jbessel\", \"gravity\", \"rquad\", \"magnetic\", \"none\". rotate Anisotropy rotation parameter (0 \\(\\pi\\) radians) euclidean portion covariance. value 0 (default) implies rotation. scale Anisotropy scale parameter (0 1) euclidean portion covariance. value 1 (default) implies scaling. nugget_type nugget covariance function type. Available options include \"nugget\" \"none\". nugget spatially independent (correlated) random error variance. Commonly referred nugget.","code":""},{"path":"/reference/ssn_initial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a covariance parameter initial object — ssn_initial","text":"list two elements: initial is_known. initial named numeric vector indicating spatial covariance parameters specified initial /known values. is_known named numeric vector indicating whether spatial covariance parameters initial known . class list matches relevant spatial covariance type.","code":""},{"path":"/reference/ssn_initial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a covariance parameter initial object — ssn_initial","text":"Create initial object use ssn_lm() ssn_glm(). NA values can given ie, rotate, scale, lets functions find initial values parameters sometimes otherwise assumed known (e.g., rotate scale ssn_lm() ssn_glm(). Parametric forms spatial covariance type presented . tailup_type Details: Let \\(D\\) matrix hydrologic distances, \\(W\\) diagonal matrix weights additive, \\(r = D / range\\), \\(\\) identity matrix. parametric forms flow-connected elements \\(R(zu)\\) given : linear: \\((1 - r) * (r <= 1) * W\\) spherical: \\((1 - 1.5r + 0.5r^3) * (r <= 1) * W\\) exponential: \\(exp(-r) * W\\) mariah: \\(log(90r + 1) / 90r * (D > 0) + 1 * (D = 0) * W\\) epa: \\((D - range)^2 * F * (r <= 1) * W / 16range^5\\) none: \\(\\) * W Details describing F matrix epa covariance given Garreta et al. (2010). Flow-unconnected elements \\(R(zu)\\) assumed uncorrelated. Observations different networks also assumed uncorrelated. taildown_type Details: Let \\(D\\) matrix hydrologic distances, \\(r = D / range\\), \\(\\) identity matrix. parametric forms flow-connected elements \\(R(zd)\\) given : linear: \\((1 - r) * (r <= 1)\\) spherical: \\((1 - 1.5r + 0.5r^3) * (r <= 1)\\) exponential: \\(exp(-r)\\) mariah: \\(log(90r + 1) / 90r * (D > 0) + 1 * (D = 0)\\) epa: \\((D - range)^2 * F1 * (r <= 1) / 16range^5\\) none: \\(\\) Now let \\(\\) matrix contains shorter two distances two sites common downstream junction, \\(r1 = / range\\), \\(B\\) matrix contains longer two distances two sites common downstream junction, \\(r2 = B / range\\),  \\(\\) identity matrix. parametric forms flow-unconnected elements \\(R(zd)\\) given : linear: \\((1 - r2) * (r2 <= 1)\\) spherical: \\((1 - 1.5r1 + 0.5r2) * (1 - r2)^2 * (r2 <= 1)\\) exponential: \\(exp(-(r1 + r2))\\) mariah: \\((log(90r1 + 1) - log(90r2 + 1)) / (90r1 - 90r2) * (=/ B) + (1 / (90r1 + 1)) * (= B)\\) epa: \\((B - range)^2 * F2 * (r2 <= 1) / 16range^5\\) none: \\(\\) Details describing F1 F2 matrices epa covariance given Garreta et al. (2010). Observations different networks assumed uncorrelated. euclid_type Details: Let \\(D\\) matrix Euclidean distances, \\(r = D / range\\), \\(\\) identity matrix. parametric forms elements \\(R(ze)\\) given : exponential: \\(exp(- r )\\) spherical: \\((1 - 1.5r + 0.5r^3) * (r <= 1)\\) gaussian: \\(exp(- r^2 )\\) cubic: \\((1 - 7r^2 + 8.75r^3 - 3.5r^5 + 0.75r^7) * (r <= 1)\\) pentaspherical: \\((1 - 1.875r + 1.25r^3 - 0.375r^5) * (r <= 1)\\) cosine: \\(cos(r)\\) wave: \\(sin(r) * (h > 0) / r + (h = 0)\\) jbessel: \\(Bj(h * range)\\), Bj Bessel-J function gravity: \\((1 + r^2)^{-0.5}\\) rquad: \\((1 + r^2)^{-1}\\) magnetic: \\((1 + r^2)^{-1.5}\\) none: \\(\\) nugget_type Details: Let \\(\\) identity matrix \\(0\\) zero matrix. parametric forms elements nugget variance given : nugget: \\(\\) none: \\(0\\) short, nugget effect modeled nugget_type \"nugget\" omitted nugget_type \"none\". Dispersion random effect initial objects specified via spmodel::dispersion_initial() spmodel::randcov_initial(), respectively.","code":""},{"path":"/reference/ssn_initial.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a covariance parameter initial object — ssn_initial","text":"Peterson, E.E. Ver Hoef, J.M. (2010) mixed-model moving-average approach geostatistical modeling stream networks. Ecology 91(3), 644--651. Ver Hoef, J.M. Peterson, E.E. (2010) moving average approach spatial statistical models stream networks (discussion). Journal American Statistical Association 105, 6--18. DOI: 10.1198/jasa.2009.ap08248.  Rejoinder pgs. 22--24.","code":""},{"path":"/reference/ssn_initial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a covariance parameter initial object — ssn_initial","text":"","code":"tailup_initial(\"exponential\", de = 1, range = 20, known = \"range\") #> $initial #>    de range  #>     1    20  #>  #> $is_known #>    de range  #> FALSE  TRUE  #>  #> attr(,\"class\") #> [1] \"tailup_exponential\" tailup_initial(\"exponential\", de = 1, range = 20, known = \"given\") #> $initial #>    de range  #>     1    20  #>  #> $is_known #>    de range  #>  TRUE  TRUE  #>  #> attr(,\"class\") #> [1] \"tailup_exponential\" euclid_initial(\"spherical\", de = 2, range = 4, scale = 0.8, known = c(\"range\", \"scale\")) #> $initial #>    de range scale  #>   2.0   4.0   0.8  #>  #> $is_known #>    de range scale  #> FALSE  TRUE  TRUE  #>  #> attr(,\"class\") #> [1] \"euclid_spherical\" dispersion_initial(\"nbinomial\", dispersion = 5) #> $initial #> dispersion  #>          5  #>  #> $is_known #> dispersion  #>      FALSE  #>  #> attr(,\"class\") #> [1] \"nbinomial\""},{"path":"/reference/ssn_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Linear Models for Spatial Stream Networks — ssn_lm","title":"Fitting Linear Models for Spatial Stream Networks — ssn_lm","text":"function works spatial stream network objects fit linear models spatially autocorrelated errors using likelihood methods, allowing non-spatial random effects, anisotropy, partition factors, big data methods, . spatial formulation described Ver Hoef Peterson (2010) Peterson Ver Hoef (2010).","code":""},{"path":"/reference/ssn_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Linear Models for Spatial Stream Networks — ssn_lm","text":"","code":"ssn_lm(   formula,   ssn.object,   tailup_type = \"none\",   taildown_type = \"none\",   euclid_type = \"none\",   nugget_type = \"nugget\",   tailup_initial,   taildown_initial,   euclid_initial,   nugget_initial,   additive,   estmethod = \"reml\",   anisotropy = FALSE,   random,   randcov_initial,   partition_factor,   ... )"},{"path":"/reference/ssn_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Linear Models for Spatial Stream Networks — ssn_lm","text":"formula two-sided linear formula describing fixed effect structure model, response left ~ operator terms right, separated + operators. ssn.object spatial stream network object class SSN. tailup_type tailup covariance function type. Available options include \"linear\", \"spherical\", \"exponential\", \"mariah\", \"epa\", \"none\". Parameterizations described Details. taildown_type taildown covariance function type. Available options include \"linear\", \"spherical\", \"exponential\", \"mariah\", \"epa\", \"none\". Parameterizations described Details. euclid_type euclidean covariance function type. Available options include \"spherical\", \"exponential\", \"gaussian\", \"cosine\", \"cubic\", \"pentaspherical\", \"wave\", \"jbessel\", \"gravity\", \"rquad\", \"magnetic\", \"none\". Parameterizations described Details. nugget_type nugget covariance function type. Available options include \"nugget\" \"none\". Parameterizations described Details. tailup_initial object tailup_initial() specifying initial /known values tailup covariance parameters. taildown_initial object taildown_initial() specifying initial /known values taildown covariance parameters. euclid_initial object euclid_initial() specifying initial /known values euclidean covariance parameters. nugget_initial object nugget_initial() specifying initial /known values nugget covariance parameters. additive name variable ssn.object used define spatial weights. Can quoted unquoted. tailup covariance functions, additive weights used branching. Technical details describe role additive variable tailup covariance function available Ver Hoef Peterson (2010). estmethod estimation method. Available options include \"reml\" restricted maximum likelihood \"ml\" maximum likelihood. default \"reml\". anisotropy logical indicating whether (geometric) anisotropy modeled. required spcov_initial provided 1) rotate assumed unknown assumed known non-zero 2) scale assumed unknown assumed known less one. anisotropy TRUE, computational times can significantly increase. default FALSE. random one-sided linear formula describing random effect structure model. Terms specified right ~ operator. term structure x1 + ... + xn | g1/.../gm, x1 + ... + xn specifies model random effects g1/.../gm grouping structure. Separate terms separated + must generally wrapped parentheses. Random intercepts added model implicitly least  one variable defined. random intercept desired, must explicitly defined (e.g., x1 + ... + xn - 1 | g1/.../gm). random intercept desired grouping structure, random intercept must specified 1 | g1/.../gm. Note g1/.../gm shorthand (1 | g1/.../gm). random intercepts desired shorthand notation used, parentheses can omitted. randcov_initial optional object specifying initial /known values random effect variances. See spmodel::randcov_initial(). partition_factor one-sided linear formula single term specifying partition factor.  partition factor assumes observations different levels partition factor uncorrelated. ... arguments stats::optim().","code":""},{"path":"/reference/ssn_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Linear Models for Spatial Stream Networks — ssn_lm","text":"list many elements store information fitted model object class ssn_lm. Many generic functions summarize model fit available ssn_lm objects, including AIC, AICc, anova, augment, coef, cooks.distance, covmatrix, deviance, fitted, formula, glance, glances, hatvalues, influence, labels, logLik, loocv, model.frame, model.matrix, plot, predict, print, pseudoR2, summary, terms, tidy, update, varcomp, vcov. fitted model list contains following elements: additive: name additive function value column. anisotropy: Whether euclidean anisotropy modeled. call: function call. coefficients: Model coefficients. contrasts: user-supplied contrasts. cooks_distance: Cook's distance values. crs: geographic coordinate reference system. deviance: model deviance. diagtol: tolerance value may added diagonal  ovariance matrices encourage decomposition stability. estmethod: estimation method. euclid_max: maximum euclidean distance. fitted: Fitted values. formula: model formula. hatvalues: hat (leverage) values. is_known: object identifies parameters known. local_index: index identifier used internally sorting. missing_index: rows \"obs\" object missing responses. n: sample size. npar: number estimated covariance parameters. observed_index: rows \"obs\" object observed responses. optim: optimization output. p: number fixed effects. partition_factor: partition factor formula. pseudoR2: pseudo R-squared. random: random effect formula. residuals: residuals. sf_column_name: name geometry columns ssn.object ssn.object: updated ssn.object. tail_max: maximum stream distance. terms: model terms. vcov: Variance-covariance matrices xlevels: levels factors model matrix. list elements meant used various generic functions (e.g., residuals() operate model object. possible access elements fitted model list directly, strongly advise generic available return element interest. example, strongly recommend using residuals() obtain model residuals instead accessing fitted model list directly via object$residuals.","code":""},{"path":"/reference/ssn_lm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting Linear Models for Spatial Stream Networks — ssn_lm","text":"linear model spatial stream networks can written \\(y = X \\beta + zu + zd + ze + n\\), \\(X\\) fixed effects design matrix, \\(\\beta\\) fixed effects, \\(zu\\) tailup random error, \\(zd\\) taildown random error, \\(ze\\) Euclidean random error, \\(n\\) nugget random error. tailup random errors capture spatial covariance moving downstream (depend downstream distance), taildown random errors capture spatial covariance moving upstream (depend upstream) distance, Euclidean random errors capture spatial covariance depends Euclidean distance, nugget random errors captures variability independent spatial locations. response \\(y\\) modeled using spatial covariance function expressed \\(de(zu) * R(zu) + de(zd) * R(zd) + de(ze) * R(ze) + nugget * \\). \\(de(zu)\\), \\(de(zu)\\), \\(de(zd)\\) represent tailup, taildown, Euclidean variances, respectively. \\(R(zu)\\), \\(R(zd)\\), \\(R(ze)\\) represent tailup, taildown, Euclidean correlation matrices, respectively. correlation matrix depends range parameter controls distance-decay behavior correlation. \\(nugget\\) represents nugget variance \\(\\) represents identity matrix. tailup_type Details: Let \\(D\\) matrix hydrologic distances, \\(W\\) diagonal matrix weights additive, \\(r = D / range\\), \\(\\) identity matrix. parametric forms flow-connected elements \\(R(zu)\\) given : linear: \\((1 - r) * (r <= 1) * W\\) spherical: \\((1 - 1.5r + 0.5r^3) * (r <= 1) * W\\) exponential: \\(exp(-r) * W\\) mariah: \\(log(90r + 1) / 90r * (D > 0) + 1 * (D = 0) * W\\) epa: \\((D - range)^2 * F * (r <= 1) * W / 16range^5\\) none: \\(\\) * W Details describing F matrix epa covariance given Garreta et al. (2010). Flow-unconnected elements \\(R(zu)\\) assumed uncorrelated. Observations different networks also assumed uncorrelated. taildown_type Details: Let \\(D\\) matrix hydrologic distances, \\(r = D / range\\), \\(\\) identity matrix. parametric forms flow-connected elements \\(R(zd)\\) given : linear: \\((1 - r) * (r <= 1)\\) spherical: \\((1 - 1.5r + 0.5r^3) * (r <= 1)\\) exponential: \\(exp(-r)\\) mariah: \\(log(90r + 1) / 90r * (D > 0) + 1 * (D = 0)\\) epa: \\((D - range)^2 * F1 * (r <= 1) / 16range^5\\) none: \\(\\) Now let \\(\\) matrix contains shorter two distances two sites common downstream junction, \\(r1 = / range\\), \\(B\\) matrix contains longer two distances two sites common downstream junction, \\(r2 = B / range\\),  \\(\\) identity matrix. parametric forms flow-unconnected elements \\(R(zd)\\) given : linear: \\((1 - r2) * (r2 <= 1)\\) spherical: \\((1 - 1.5r1 + 0.5r2) * (1 - r2)^2 * (r2 <= 1)\\) exponential: \\(exp(-(r1 + r2))\\) mariah: \\((log(90r1 + 1) - log(90r2 + 1)) / (90r1 - 90r2) * (=/ B) + (1 / (90r1 + 1)) * (= B)\\) epa: \\((B - range)^2 * F2 * (r2 <= 1) / 16range^5\\) none: \\(\\) Details describing F1 F2 matrices epa covariance given Garreta et al. (2010). Observations different networks assumed uncorrelated. euclid_type Details: Let \\(D\\) matrix Euclidean distances, \\(r = D / range\\), \\(\\) identity matrix. parametric forms elements \\(R(ze)\\) given : exponential: \\(exp(- r )\\) spherical: \\((1 - 1.5r + 0.5r^3) * (r <= 1)\\) gaussian: \\(exp(- r^2 )\\) cubic: \\((1 - 7r^2 + 8.75r^3 - 3.5r^5 + 0.75r^7) * (r <= 1)\\) pentaspherical: \\((1 - 1.875r + 1.25r^3 - 0.375r^5) * (r <= 1)\\) cosine: \\(cos(r)\\) wave: \\(sin(r) * (h > 0) / r + (h = 0)\\) jbessel: \\(Bj(h * range)\\), Bj Bessel-J function gravity: \\((1 + r^2)^{-0.5}\\) rquad: \\((1 + r^2)^{-1}\\) magnetic: \\((1 + r^2)^{-1.5}\\) none: \\(\\) nugget_type Details: Let \\(\\) identity matrix \\(0\\) zero matrix. parametric forms elements nugget variance given : nugget: \\(\\) none: \\(0\\) short, nugget effect modeled nugget_type \"nugget\" omitted nugget_type \"none\". estmethod Details: various estimation methods reml: Maximize restricted log-likelihood. ml: Maximize log-likelihood. anisotropy Details: default, Euclidean covariance parameters except rotate scale assumed unknown, requiring estimation. either rotate scale given initial values 0 1 (respectively) assumed unknown euclid_initial(), anisotropy implicitly set TRUE. (Geometric) Anisotropy modeled transforming Euclidean covariance function decays differently different directions one decays equally directions via rotation scaling original Euclidean coordinates. rotation controlled rotate parameter \\([0, \\pi]\\) radians. scaling controlled scale parameter \\([0, 1]\\). anisotropy correction involves first rotation coordinates clockwise rotate scaling coordinates' minor axis reciprocal scale. Euclidean covariance computed using transformed coordinates. random Details: random effects used, model can written \\(y = X \\beta + W1\\gamma 1 + ... Wj\\gamma j + zu + zd + ze + n\\), Z random effects design matrix u random effect. partition_factor Details: partition factor can represented matrix form \\(P\\), elements \\(P\\) equal one observations level partition factor zero otherwise. covariance matrix involving spatial random effects components multiplied element-wise (Hadmard product) \\(P\\), yielding final covariance matrix. Details: Observations NA response values removed model fitting, values can predicted afterwards running predict(object).","code":""},{"path":"/reference/ssn_lm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fitting Linear Models for Spatial Stream Networks — ssn_lm","text":"function perform internal scaling. optimization stable due large extremely large variances, scale relevant variables variance 1 optimization.","code":""},{"path":"/reference/ssn_lm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting Linear Models for Spatial Stream Networks — ssn_lm","text":"Garreta, V., Monestiez, P. Ver Hoef, J.M. (2010) Spatial modelling prediction river networks: model, model, hybrid? Environmetrics 21(5), 439--456. Peterson, E.E. Ver Hoef, J.M. (2010) mixed-model moving-average approach geostatistical modeling stream networks. Ecology 91(3), 644--651. Ver Hoef, J.M. Peterson, E.E. (2010) moving average approach spatial statistical models stream networks (discussion). Journal American Statistical Association 105, 6--18. DOI: 10.1198/jasa.2009.ap08248.  Rejoinder pgs. 22--24.","code":""},{"path":"/reference/ssn_lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Linear Models for Spatial Stream Networks — ssn_lm","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) summary(ssn_mod) #>  #> Call: #> ssn_lm(formula = Summer_mn ~ ELEV_DEM, ssn.object = mf04p, tailup_type = \"exponential\",  #>     additive = \"afvArea\") #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.9487 -2.3775 -0.8840 -0.2776  0.9001  #>  #> Coefficients (fixed): #>              Estimate Std. Error z value Pr(>|z|)     #> (Intercept) 71.323162   6.193050  11.517   <2e-16 *** #> ELEV_DEM    -0.028822   0.003075  -9.372   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Pseudo R-squared: 0.6688 #>  #> Coefficients (covariance): #>               Effect     Parameter   Estimate #>   tailup exponential  de (parsill)  4.415e+00 #>   tailup exponential         range  1.175e+06 #>               nugget        nugget  2.562e-02 #>"},{"path":"/reference/ssn_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Create covariance parameter objects. — ssn_params","title":"Create covariance parameter objects. — ssn_params","text":"Create covariance parameter object us functions. See spmodel::randcov_params() documentation regarding random effect covariance parameter objects.","code":""},{"path":"/reference/ssn_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create covariance parameter objects. — ssn_params","text":"","code":"tailup_params(tailup_type, de, range)  taildown_params(taildown_type, de, range)  euclid_params(euclid_type, de, range, rotate, scale)  nugget_params(nugget_type, nugget)"},{"path":"/reference/ssn_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create covariance parameter objects. — ssn_params","text":"tailup_type tailup covariance function type. Available options include \"linear\", \"spherical\", \"exponential\", \"mariah\", \"epa\", \"none\". de spatially dependent (correlated) random error variance. Commonly referred partial sill. range correlation parameter. taildown_type taildown covariance function type. Available options include \"linear\", \"spherical\", \"exponential\", \"mariah\", \"epa\", \"none\". euclid_type euclidean covariance function type. Available options include \"spherical\", \"exponential\", \"gaussian\", \"cosine\", \"cubic\", \"pentaspherical\", \"wave\", \"jbessel\", \"gravity\", \"rquad\", \"magnetic\", \"none\". rotate Anisotropy rotation parameter (0 \\(\\pi\\) radians) euclidean portion covariance. value 0 (default) implies rotation. scale Anisotropy scale parameter (0 1) euclidean portion covariance. value 1 (default) implies scaling. nugget_type nugget covariance function type. Available options include \"nugget\" \"none\". nugget spatially independent (correlated) random error variance. Commonly referred nugget.","code":""},{"path":"/reference/ssn_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create covariance parameter objects. — ssn_params","text":"parameter object class matches relevant type argument.","code":""},{"path":"/reference/ssn_params.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create covariance parameter objects. — ssn_params","text":"Peterson, E.E. Ver Hoef, J.M. (2010) mixed-model moving-average approach geostatistical modeling stream networks. Ecology 91(3), 644--651. Ver Hoef, J.M. Peterson, E.E. (2010) moving average approach spatial statistical models stream networks (discussion). Journal American Statistical Association 105, 6--18. DOI: 10.1198/jasa.2009.ap08248.  Rejoinder pgs. 22--24.","code":""},{"path":"/reference/ssn_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create covariance parameter objects. — ssn_params","text":"","code":"tailup_params(\"exponential\", de = 1, range = 20) #>    de range  #>     1    20  #> attr(,\"class\") #> [1] \"tailup_exponential\" taildown_params(\"exponential\", de = 1, range = 20) #>    de range  #>     1    20  #> attr(,\"class\") #> [1] \"taildown_exponential\" euclid_params(\"exponential\", de = 1, range = 20, rotate = 0, scale = 1) #>     de  range rotate  scale  #>      1     20      0      1  #> attr(,\"class\") #> [1] \"euclid_exponential\" nugget_params(\"nugget\", nugget = 1) #> nugget  #>      1  #> attr(,\"class\") #> [1] \"nugget_nugget\""},{"path":"/reference/ssn_put_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Put an sf data.frame in an SSN object — ssn_put_data","title":"Put an sf data.frame in an SSN object — ssn_put_data","text":"ssn_put_data function puts sf data.frame representing observation prediction data SSN, ssn_lm, ssn_glm object.","code":""},{"path":"/reference/ssn_put_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put an sf data.frame in an SSN object — ssn_put_data","text":"","code":"ssn_put_data(data, x, name = \"obs\", resize_data = FALSE)"},{"path":"/reference/ssn_put_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put an sf data.frame in an SSN object — ssn_put_data","text":"data sf data.frame point geometry. x object class SSN, ssn_lm, ssn_glm. name internal name data set object x. observed data, always \"obs\", default. resize_data Logical. Indicates whether sf_df can different number features current data.frame object. Default FALSE.","code":""},{"path":"/reference/ssn_put_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put an sf data.frame in an SSN object — ssn_put_data","text":"Returns object class x, contains sf data.frame sf_data.","code":""},{"path":"/reference/ssn_put_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Put an sf data.frame in an SSN object — ssn_put_data","text":"internal name observed data objects class SSN, ssn_lm, ssn_glm \"obs\" default. another name specified, must represent prediction dataset object. SSN objects, names obtained using call names(x$preds). object classes, names obtained using call names(x$ssn.object$preds). resize_sf_data argument specifies whether sf_data can different number features (.e., rows) sf data.frame replacing. Care taken resize_df set TRUE, especially new sf_data features existing sf data.frame. cases, user responsible ensuring additional features correct spatial, topological, attribute data accurately represent spatial relationships SSN object.","code":""},{"path":[]},{"path":"/reference/ssn_put_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Put an sf data.frame in an SSN object — ssn_put_data","text":"","code":"data(mf04p) ## Extract observation data.frame from SSN object obs.df <- ssn_get_data(mf04p) ## Create a new column for summer mean temperature and set Value in obs.df$Value <- obs.df$Summer_mn obs.df$Value[1] <- NA  ## Put the modified sf data.frame into the SSN object mf04p <- ssn_put_data(obs.df, mf04p) head(ssn_get_data(mf04p)[, c(\"Summer_mn\", \"Value\")]) #> Simple feature collection with 6 features and 2 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -1515032 ymin: 2529461 xmax: -1512690 ymax: 2531883 #> Projected CRS: USA_Contiguous_Albers_Equal_Area_Conic_USGS_version #>   Summer_mn Value                 geometry #> 1     11.38    NA POINT (-1512690 2531883) #> 2     10.72 10.72 POINT (-1512852 2531295) #> 3     10.43 10.43 POINT (-1513400 2530706) #> 4     10.13 10.13 POINT (-1514027 2530147) #> 5     10.12 10.12 POINT (-1514309 2529902) #> 6      9.81  9.81 POINT (-1515032 2529461)"},{"path":"/reference/ssn_simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate random variables on a stream network — ssn_simulate","title":"Simulate random variables on a stream network — ssn_simulate","text":"Simulate random variables stream network specific mean covariance structure. Designed use ssn_simulate(), individual simulation functions resposne distribution also exist.","code":""},{"path":"/reference/ssn_simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate random variables on a stream network — ssn_simulate","text":"","code":"ssn_simulate(   family = \"Gaussian\",   ssn.object,   network = \"obs\",   tailup_params,   taildown_params,   euclid_params,   nugget_params,   additive,   mean = 0,   samples = 1,   dispersion = 1,   size = 1,   randcov_params,   partition_factor,   ... )  ssn_rbeta(   ssn.object,   network = \"obs\",   tailup_params,   taildown_params,   euclid_params,   nugget_params,   dispersion = 1,   mean = 0,   samples = 1,   additive,   randcov_params,   partition_factor,   ... )  ssn_rbinom(   ssn.object,   network = \"obs\",   tailup_params,   taildown_params,   euclid_params,   nugget_params,   mean = 0,   size = 1,   samples = 1,   additive,   randcov_params,   partition_factor,   ... )  ssn_rgamma(   ssn.object,   network = \"obs\",   tailup_params,   taildown_params,   euclid_params,   nugget_params,   dispersion = 1,   mean = 0,   samples = 1,   additive,   randcov_params,   partition_factor,   ... )  ssn_rinvgauss(   ssn.object,   network = \"obs\",   tailup_params,   taildown_params,   euclid_params,   nugget_params,   dispersion = 1,   mean = 0,   samples = 1,   additive,   randcov_params,   partition_factor,   ... )  ssn_rnbinom(   ssn.object,   network = \"obs\",   tailup_params,   taildown_params,   euclid_params,   nugget_params,   dispersion = 1,   mean = 0,   samples = 1,   additive,   randcov_params,   partition_factor,   ... )  ssn_rnorm(   ssn.object,   network = \"obs\",   tailup_params,   taildown_params,   euclid_params,   nugget_params,   mean = 0,   samples = 1,   additive,   randcov_params,   partition_factor,   ... )  ssn_rpois(   ssn.object,   network = \"obs\",   tailup_params,   taildown_params,   euclid_params,   nugget_params,   mean = 0,   samples = 1,   additive,   randcov_params,   partition_factor,   ... )"},{"path":"/reference/ssn_simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate random variables on a stream network — ssn_simulate","text":"family response distribution family. default \"Gaussian\". ssn.object spatial stream network object class SSN. Random variables simulated row ssn.object$obs. network spatial stream network simulate . Currently allowed \"obs\" ssn.object$obs object. tailup_params object tailup_params() specifying tailup covariance parameters. taildown_params object taildown_params() specifying taildown covariance parameters. euclid_params object euclid_params() specifying Euclidean covariance parameters. nugget_params object nugget_params() specifying nugget covariance parameters. additive name variable ssn.object used define spatial weights. Can quoted unquoted. tailup covariance functions, additive weights used branching. Technical details describe role additive variable tailup covariance function available Ver Hoef Peterson (2010). mean numeric vector representing mean. mean must length 1 (case recycled) length equal number rows data. default 0. samples number independent samples generate. default 1. dispersion dispersion value (relevant). size numeric vector representing sample size binomial trial. default 1, corresponds Bernoulli trial observation. randcov_params spmodel::randcov_params() object. partition_factor formula indicating partition factor. ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/ssn_simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate random variables on a stream network — ssn_simulate","text":"samples 1, vector random variables row ssn.object$obs returned. samples greater one, matrix random variables returned, rows correspond row ssn.object$obs columns correspond independent samples.","code":""},{"path":"/reference/ssn_simulate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate random variables on a stream network — ssn_simulate","text":"Random variables simulated via product covariance matrix's square (Cholesky) root independent standard normal random variables link scale, used simulate relevant variable response scale according family. Computing square root significant computational burden likely unfeasible sample sizes much past 10,000. square root needs computed , however, nearly sample computational cost call ssn_rnorm() value samples. using ssn_simulate(), individual simulation functions response distribution exist: ssn_rnorm(): Simulate Gaussian distribution ssn_rpois(): Simulate Poisson distribution ssn_rnbinom(): Simulate negative binomial distribution ssn_rbinom(): Simulate binomial distribution ssn_rbeta(): Simulate beta distribution ssn_rgamma(): Simulate gamma distribution ssn_rinvgauss(): Simulate inverse Gaussian distribution","code":""},{"path":"/reference/ssn_simulate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate random variables on a stream network — ssn_simulate","text":"Ver Hoef, J.M. Peterson, E.E. (2010) moving average approach spatial statistical models stream networks (discussion). Journal American Statistical Association 105, 6--18. DOI: 10.1198/jasa.2009.ap08248.  Rejoinder pgs. 22--24.","code":""},{"path":"/reference/ssn_simulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate random variables on a stream network — ssn_simulate","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  tailup <- tailup_params(\"exponential\", de = 0.1, range = 200) taildown <- taildown_params(\"exponential\", de = 0.4, range = 300) euclid <- euclid_params(\"spherical\", de = 0.2, range = 1000, rotate = 0, scale = 1) nugget <- nugget_params(\"nugget\", nugget = 0.1) ssn_simulate(\"gaussian\", mf04p, \"obs\", tailup, taildown, euclid, nugget, additive = \"afvArea\") #>  [1]  0.23243313  0.45329177  0.18570140 -2.34240654 -1.64613982 -1.87065835 #>  [7]  0.29619710  0.64904228 -0.03683179  0.94769933  0.60677198  1.18204714 #> [13]  0.68230622 -0.19460793 -1.16475226  0.82461078  0.34565867  0.91866220 #> [19] -1.72120539 -0.68537520  0.09534920 -0.84413067  0.94423558  0.01030223 #> [25]  0.88562756  1.92679655  0.70020757  0.17573536  0.07202305 -0.17097118 #> [31] -0.73808153 -0.89988571  0.78511665 -0.03124410 -0.67371771  0.39741993 #> [37]  0.14390780 -0.07988414  0.65623517  0.82860617 -0.13304709  0.01619557 #> [43]  1.31099525 -0.31899800  1.08881410"},{"path":"/reference/ssn_split_predpts.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a prediction dataset in an SSN object — ssn_split_predpts","title":"Split a prediction dataset in an SSN object — ssn_split_predpts","text":"splitPrediction function used split prediction sets SSN object smaller prediction sets. returns SSN object additional prediction sets based equal interval splits, factor, integer, character logical column stored within prediction set, logical expression.","code":""},{"path":"/reference/ssn_split_predpts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a prediction dataset in an SSN object — ssn_split_predpts","text":"","code":"ssn_split_predpts(   ssn,   predpts,   size_predpts,   by,   subset,   id_predpts,   keep = TRUE,   drop_levels = FALSE,   overwrite = FALSE )"},{"path":"/reference/ssn_split_predpts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a prediction dataset in an SSN object — ssn_split_predpts","text":"ssn SSN object. predpts character string representing name prediction dataset size_predpts numeric value representing size new prediction sets. existing prediction set split equally produce multiple prediction sets size character string representing column name type factor, integer, character logical split based subset logical expression indicating elements rows keep; missing values taken FALSE id_predpts character string representing new prediction dataset name. value specified subset method used keep logical value indicating whether original prediction dataset retained SSN object. Default TRUE drop_levels logical value indicating whether empty factor levels dropped column new prediction dataset(s) created. Default FALSE overwrite logical indicating whether new prediction dataset shapefile deleted .ssn directory already exists. Default = FALSE","code":""},{"path":"/reference/ssn_split_predpts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a prediction dataset in an SSN object — ssn_split_predpts","text":"returns SSN specified ssn, one new prediction sets. Shapefiles new prediction sets written .ssn directory designated ssn$path.","code":""},{"path":"/reference/ssn_split_predpts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split a prediction dataset in an SSN object — ssn_split_predpts","text":"Three methods provided split prediction sets: size_predpts, , subset. size_predpts method used split existing prediction set multiple equally-sized prediction sets. Note final prediction set may smaller size others total number predictions evenly divisible size_predpts. method used prediction set split multiple new prediction sets based existing column type factor, integer, character, logical. subset method used create one new prediction set based logical expression. one prediction dataset created prediction dataset names appended hyphen prediction dataset number one prediction dataset created. example, \"preds\" split using size_predpts, new names \"preds-1\", \"preds-2\", forth. keep=FALSE, prediction dataset removed SSN object stored memory, deleted .ssn directory specified ssn$path. Note , one method may specified ssn_split_predpts function called. distance matrices new prediction datasets must created using ssn_create_distmat predictions can made.","code":""},{"path":"/reference/ssn_split_predpts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a prediction dataset in an SSN object — ssn_split_predpts","text":"","code":"## Import SSN object copy_lsn_to_temp() ## Only needed for this example ssn <- ssn_import(paste0(tempdir(), \"/MiddleFork04.ssn\"),   predpts = c(\"pred1km.shp\", \"Knapp\", \"CapeHorn\"),   overwrite = TRUE )  ## Split predictions into size_predpts 200 ssn1 <- ssn_split_predpts(ssn, \"CapeHorn\",   size_predpts = 200,   keep = FALSE, overwrite = TRUE ) names(ssn1$preds) #> [1] \"pred1km\"    \"Knapp\"      \"CapeHorn-1\" \"CapeHorn-2\" \"CapeHorn-3\" #> [6] \"CapeHorn-4\" nrow(ssn1$preds[[\"CapeHorn-1\"]]) #> [1] 200  ## Split predictions using by method ssn$preds$pred1km$net.fac <- as.factor(ssn$preds$pred1km$netID) ssn2 <- ssn_split_predpts(ssn, \"pred1km\",   by = \"net.fac\",   overwrite = TRUE ) names(ssn2$preds) #> [1] \"pred1km\"           \"Knapp\"             \"CapeHorn\"          #> [4] \"pred1km-net.fac-1\" \"pred1km-net.fac-2\"  ## Split predictions using subset method ssn3 <- ssn_split_predpts(ssn, \"pred1km\",   subset = ratio > 0.5,   id_predpts = \"RATIO_05\", overwrite = TRUE ) names(ssn3$preds) #> [1] \"pred1km\"  \"Knapp\"    \"CapeHorn\" \"RATIO_05\""},{"path":"/reference/ssn_subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset an SSN object — ssn_subset","title":"Subset an SSN object — ssn_subset","text":"Returns SSN object subset based logical expression.","code":""},{"path":"/reference/ssn_subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset an SSN object — ssn_subset","text":"","code":"ssn_subset(ssn, path, subset, clip = FALSE, overwrite = FALSE)"},{"path":"/reference/ssn_subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset an SSN object — ssn_subset","text":"ssn SSN object. path filepath .ssn folder, string format, subset SSN saved. subset logical expression indicating features keep. clip TRUE, create subset edges prediction sites, based logical expression used subset observed sites.  Default = FALSE. overwrite TRUE, overwrite folder specified path exists. Default = FALSE.","code":""},{"path":"/reference/ssn_subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset an SSN object — ssn_subset","text":"object class SSN, stored locally .ssn directory specified path. also creates stores SQLite database, binaryID.db, within .ssn directory.","code":""},{"path":"/reference/ssn_subset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset an SSN object — ssn_subset","text":"function creates subset original SSN object based logical expression defined subset argument. subset argument treated expression within ssn_subset() full argument string; although values factor character format still require quotes (see examples). clip = TRUE, columns referred subset must present edges prediction datasets (present SSN object). Note features missing values subset expression treated false included subset SSN object. subset SSN object written local directory, re-imported using ssn_import. process, binaryID.db recreated. distance matrices exist original SSN object, copied recalculated new SSN object. Users need run ssn_create_distmat create distance matrices fitting models data subset SSN.","code":""},{"path":"/reference/ssn_subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset an SSN object — ssn_subset","text":"","code":"## Import SSN object copy_lsn_to_temp() ## Only needed for this example mf04p <- ssn_import(paste0(tempdir(), \"/MiddleFork04.ssn\"),   predpts = c(\"pred1km.shp\", \"Knapp\"),   overwrite = TRUE )  ## Subset SSN observations, edges, and prediction sites on network 1 ssn.sub1 <- ssn_subset(mf04p,   path = paste0(tempdir(), \"/subset1.ssn\"),   subset = netID == 1, clip = TRUE,   overwrite = TRUE )  ## Subset SSN observations, removing two sites ssn.sub2 <- ssn_subset(mf04p,   path = paste0(tempdir(), \"/subset2.ssn\"),   subset = !COMID %in% c(\"23519461\", \"23519365\"),   overwrite = TRUE )"},{"path":"/reference/SSN_to_SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert object from SpatialStreamNetwork class to SSN class — SSN_to_SSN2","title":"Convert object from SpatialStreamNetwork class to SSN class — SSN_to_SSN2","text":"Convert S4 SpatialStreamNetwork object created SSN package S3 SSN object used SSN2 package.","code":""},{"path":"/reference/SSN_to_SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert object from SpatialStreamNetwork class to SSN class — SSN_to_SSN2","text":"","code":"SSN_to_SSN2(object, edge_additive = NULL, site_additive = NULL)"},{"path":"/reference/SSN_to_SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert object from SpatialStreamNetwork class to SSN class — SSN_to_SSN2","text":"object SpatialStreamNetwork object edge_additive character vector additive function value column names found edges. Default NULL. See Details information. site_additive character vector additive function value column names found observed sites prediction sites. See Details information. Default NULL.","code":""},{"path":"/reference/SSN_to_SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert object from SpatialStreamNetwork class to SSN class — SSN_to_SSN2","text":"S3 SSN class object, additive function value columns converted text format.","code":""},{"path":"/reference/SSN_to_SSN2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert object from SpatialStreamNetwork class to SSN class — SSN_to_SSN2","text":"SSN_to_SSN2() made available help users migrate SSN package updated SSN2 package. used convert existing S4 SpatialStreamNetwork objects stored saved workspaces S3 SSN class object used SSN2 package. Note ssn_import used create S3 SSN object data stored locally .ssn directory. Additive function values used generate spatial weights tail-covariance function used ssn_glm. range additive function values restricted \\(0 \\le AFV \\le   1\\). SSN2 package, columns containing additive function values stored text, rather numeric format. prevents values less 1 10 digits truncated writing/reading shapefiles (.dbf tables). columns containing additive function values specified using edge_additive site_additive arguments converted character format SSN class object returned. arguments edge_additive site_additive accept single column name character format, vector containing multiple column names. Note , column names additive function values edges, sites, prediction sites may differ. column specified edge_additive site_additive present, function return warning, rather error. Columns containing additive function values can also converted text manually using formatC function, provides flexibility needed store values full precision.","code":""},{"path":"/reference/ssn_update_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Update path in an SSN object — ssn_update_path","title":"Update path in an SSN object — ssn_update_path","text":"Update local path existing SSN object based user defined file.","code":""},{"path":"/reference/ssn_update_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update path in an SSN object — ssn_update_path","text":"","code":"ssn_update_path(x, path, verbose = FALSE)"},{"path":"/reference/ssn_update_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update path in an SSN object — ssn_update_path","text":"x SSN, ssn_lm ssn_glm object. path Filepath .ssn folder associated SSN object. verbose logical indicates new path printed console.","code":""},{"path":"/reference/ssn_update_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update path in an SSN object — ssn_update_path","text":"SSN object new path list element.","code":""},{"path":"/reference/ssn_update_path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update path in an SSN object — ssn_update_path","text":"times, may necessary move .ssn directory, linked SSN object R workspace. .ssn directory moved, path must updated using ssn_glmssn function functions read/write .ssn directory. ssn_update_path helper function serves purpose.","code":""},{"path":"/reference/ssn_update_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update path in an SSN object — ssn_update_path","text":"","code":"## Use mf04p SSN object provided in SSN2 data(mf04p)  ## For examples only, make sure mf04p has the correct path ## If you use ssn_import(), the path will be correct newpath <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_update_path(mf04p, newpath)"},{"path":"/reference/ssn_write.html","id":null,"dir":"Reference","previous_headings":"","what":"write an SSN object — ssn_write","title":"write an SSN object — ssn_write","text":"function writes SSN object local .ssn directory","code":""},{"path":"/reference/ssn_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write an SSN object — ssn_write","text":"","code":"ssn_write(ssn, path, overwrite = FALSE, copy_dist = FALSE, import = FALSE)"},{"path":"/reference/ssn_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write an SSN object — ssn_write","text":"ssn SSN object. path filepath local .ssn directory write . overwrite TRUE, overwrite existing files file (exists). Defaults FALSE. copy_dist TRUE, copy distance matrices file (exist). Defaults FALSE. import TRUE, import return SSN object writing file. Defaults FALSE.","code":""},{"path":"/reference/ssn_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write an SSN object — ssn_write","text":"ssn_write creates .ssn directory contains spatial, topological, attribute information stored original SSN object. import = TRUE, SSN object imported returned.","code":""},{"path":"/reference/ssn_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"write an SSN object — ssn_write","text":"","code":"## For examples only, copy MiddleFork04.ssn directory to R's # temporary directory copy_lsn_to_temp() ## Import SSN object with prediction sites mf04p <- ssn_import(paste0(tempdir(), \"/MiddleFork04.ssn\"),   predpts = c(\"pred1km.shp\"),   overwrite = TRUE )  ## Write SSN to new .ssn directory ssn_write(mf04p, path = paste0(tempdir(), \"/tempSSN.ssn\"))  ## Write SSN to .ssn directory and return SSN object tempSSN <- ssn_write(mf04p, path = paste0(   tempdir(),   \"/tempSSN.ssn\" ), overwrite = TRUE, import = TRUE) #> binaryID.db already exists - no changes were made to binaryID.db table"},{"path":"/reference/summary.SSN.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize an SSN object — summary.SSN","title":"Summarize an SSN object — summary.SSN","text":"Summarize data found SSN object.","code":""},{"path":"/reference/summary.SSN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize an SSN object — summary.SSN","text":"","code":"# S3 method for SSN summary(object, ...)"},{"path":"/reference/summary.SSN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize an SSN object — summary.SSN","text":"object SSN object. ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/summary.SSN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize an SSN object — summary.SSN","text":"list several fitted model quantities used create informative summaries printing.","code":""},{"path":"/reference/summary.SSN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize an SSN object — summary.SSN","text":"summary.SSN() creates summary SSN object intended printed using print(). summary contains information number observed prediction locations, well column names found respective sf data.frames.","code":""},{"path":"/reference/summary.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a fitted model object — summary.SSN2","title":"Summarize a fitted model object — summary.SSN2","text":"Summarize fitted model object.","code":""},{"path":"/reference/summary.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a fitted model object — summary.SSN2","text":"","code":"# S3 method for ssn_lm summary(object, ...)  # S3 method for ssn_glm summary(object, ...)"},{"path":"/reference/summary.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a fitted model object — summary.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/summary.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a fitted model object — summary.SSN2","text":"list several fitted model quantities used create informative summaries printing.","code":""},{"path":"/reference/summary.SSN2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize a fitted model object — summary.SSN2","text":"summary.ssn() creates summary fitted model object intended printed using print(). summary contains useful information like original function call, residuals, coefficients table, pseudo r-squared, estimated covariance parameters.","code":""},{"path":[]},{"path":"/reference/summary.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a fitted model object — summary.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) summary(ssn_mod) #>  #> Call: #> ssn_lm(formula = Summer_mn ~ ELEV_DEM, ssn.object = mf04p, tailup_type = \"exponential\",  #>     additive = \"afvArea\") #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.9487 -2.3775 -0.8840 -0.2776  0.9001  #>  #> Coefficients (fixed): #>              Estimate Std. Error z value Pr(>|z|)     #> (Intercept) 71.323162   6.193050  11.517   <2e-16 *** #> ELEV_DEM    -0.028822   0.003075  -9.372   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Pseudo R-squared: 0.6688 #>  #> Coefficients (covariance): #>               Effect     Parameter   Estimate #>   tailup exponential  de (parsill)  4.415e+00 #>   tailup exponential         range  1.175e+06 #>               nugget        nugget  2.562e-02 #>"},{"path":"/reference/tidy.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy a fitted model object — tidy.SSN2","title":"Tidy a fitted model object — tidy.SSN2","text":"Tidy fitted model object summarized tibble.","code":""},{"path":"/reference/tidy.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy a fitted model object — tidy.SSN2","text":"","code":"# S3 method for ssn_lm tidy(x, conf.int = FALSE, conf.level = 0.95, effects = \"fixed\", ...)  # S3 method for ssn_glm tidy(x, conf.int = FALSE, conf.level = 0.95, effects = \"fixed\", ...)"},{"path":"/reference/tidy.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy a fitted model object — tidy.SSN2","text":"x fitted model object ssn_lm() ssn_glm(). conf.int Logical indicating whether include confidence interval tidied output. default FALSE. conf.level confidence level use confidence interval conf.int TRUE. Must strictly greater 0 less 1. default 0.95, corresponds 95 percent confidence interval. effects type effects tidy. Available options \"fixed\" (fixed effects), \"tailup\" (tailup covariance parameters), \"taildown\" (taildown covariance parameters), \"euclid\" (Euclidean covariance parameters), \"nugget\" (nugget covariance parameter), \"dispersion\" (dispersion parameter relevant), \"ssn\" \"tailup\", \"taildown\", \"euclid\", \"nugget\", \"dispersion\", \"randcov\" (random effect variances). default \"fixed\". ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/tidy.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy a fitted model object — tidy.SSN2","text":"tidy tibble summary information effects.","code":""},{"path":[]},{"path":"/reference/tidy.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy a fitted model object — tidy.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) tidy(ssn_mod) #> # A tibble: 2 × 5 #>   term        estimate std.error statistic p.value #>   <chr>          <dbl>     <dbl>     <dbl>   <dbl> #> 1 (Intercept)  71.3      6.19        11.5        0 #> 2 ELEV_DEM     -0.0288   0.00308     -9.37       0"},{"path":"/reference/Torgegram.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the empirical semivariogram — Torgegram","title":"Compute the empirical semivariogram — Torgegram","text":"Compute empirical semivariogram varying bin sizes cutoff values.","code":""},{"path":"/reference/Torgegram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the empirical semivariogram — Torgegram","text":"","code":"Torgegram(   formula,   ssn.object,   type = c(\"flowcon\", \"flowuncon\"),   bins = 15,   cutoff,   partition_factor )"},{"path":"/reference/Torgegram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the empirical semivariogram — Torgegram","text":"formula formula describing fixed effect structure. ssn.object spatial stream network object class SSN. type Torgegram type. vector possible values \"flowcon\" flow-connected distances, \"flowuncon\" flow-unconnected distances, \"euclid\" Euclidean distances. default show flow-connected flow-unconnected distances. bins number equally spaced bins. default 15. cutoff maximum distance considered. default half diagonal bounding box coordinates. partition_factor optional formula specifying partition factor. specified, semivariances computed observations sharing level partition factor.","code":""},{"path":"/reference/Torgegram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the empirical semivariogram — Torgegram","text":"list elements correspond type. element data frame distance bins (bins),  average distance (dist), semivariance (gamma), number (unique) pairs (np) respective type.","code":""},{"path":"/reference/Torgegram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the empirical semivariogram — Torgegram","text":"Torgegram empirical semivariogram tool used visualize model spatial dependence estimating semivariance process varying distances separately flow-connected, flow-unconnected, Euclidean distances. constant-mean process, semivariance distance \\(h\\) denoted \\(\\gamma(h)\\) defined \\(0.5 * Var(z1  - z2)\\). second-order stationarity, \\(\\gamma(h) = Cov(0) - Cov(h)\\), \\(Cov(h)\\) covariance function distance h. Typically residuals ordinary least squares fit defined formula second-order stationary mean zero. residuals used compute empirical semivariogram. distance h, empirical semivariance \\(1/N(h) \\sum (r1 - r2)^2\\), \\(N(h)\\) number (unique) pairs set observations whose distance separation h r1 r2 residuals corresponding observations whose distance separation h. spmodel, distance bins actually contain observations whose distance separation h +- c, c constant determined implicitly bins. Typically, observations whose distance separation cutoff used compute empirical semivariogram (cutoff determined cutoff).","code":""},{"path":"/reference/Torgegram.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute the empirical semivariogram — Torgegram","text":"Zimmerman, D. L., & Ver Hoef, J. M. (2017). Torgegram fluvial variography: characterizing spatial dependence stream networks. Journal Computational Graphical Statistics, 26(2), 253--264.","code":""},{"path":[]},{"path":"/reference/Torgegram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the empirical semivariogram — Torgegram","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  tg <- Torgegram(Summer_mn ~ 1, mf04p) plot(tg)"},{"path":"/reference/varcomp.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Variability component comparison — varcomp.SSN2","title":"Variability component comparison — varcomp.SSN2","text":"Compare proportion total variability explained fixed effects variance parameter.","code":""},{"path":"/reference/varcomp.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variability component comparison — varcomp.SSN2","text":"","code":"# S3 method for ssn_lm varcomp(object, ...)  # S3 method for ssn_glm varcomp(object, ...)"},{"path":"/reference/varcomp.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variability component comparison — varcomp.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). ... arguments. used (needed generic consistency).","code":""},{"path":"/reference/varcomp.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variability component comparison — varcomp.SSN2","text":"tibble partitions total variability fixed effects variance parameter. proportion variability explained fixed effects pseudo R-squared obtained psuedoR2(). remaining proportion spread accordingly among variance parameter: \"tailup_de\", \"taildown_de\", \"euclid_de\", \"nugget\", random effects used, named random effect. ssn_glm(), models, variances link scale considered (.e., variance function response omitted).","code":""},{"path":"/reference/varcomp.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variability component comparison — varcomp.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) varcomp(ssn_mod) #> # A tibble: 5 × 2 #>   varcomp            proportion #>   <chr>                   <dbl> #> 1 Covariates (PR-sq)    0.669   #> 2 tailup_de             0.329   #> 3 taildown_de           0       #> 4 euclid_de             0       #> 5 nugget                0.00191"},{"path":"/reference/vcov.SSN2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate variance-covariance matrix for a fitted model object — vcov.SSN2","title":"Calculate variance-covariance matrix for a fitted model object — vcov.SSN2","text":"Calculate variance-covariance matrix fitted model object.","code":""},{"path":"/reference/vcov.SSN2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate variance-covariance matrix for a fitted model object — vcov.SSN2","text":"","code":"# S3 method for ssn_lm vcov(object, ...)  # S3 method for ssn_glm vcov(object, var_correct = TRUE, ...)"},{"path":"/reference/vcov.SSN2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate variance-covariance matrix for a fitted model object — vcov.SSN2","text":"object fitted model object ssn_lm() ssn_glm(). ... arguments. used (needed generic consistency). var_correct logical indicating whether return corrected variance-covariance matrix models fit using ssn_glm() (family different \"Gaussian\"). default TRUE.","code":""},{"path":"/reference/vcov.SSN2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate variance-covariance matrix for a fitted model object — vcov.SSN2","text":"variance-covariance matrix coefficients obtained via coef(). Currently, variance-covariance matrix fixed effects supported.","code":""},{"path":"/reference/vcov.SSN2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate variance-covariance matrix for a fitted model object — vcov.SSN2","text":"","code":"# Copy the mf04p .ssn data to a local directory and read it into R # When modeling with your .ssn object, you will load it using the relevant # path to the .ssn data on your machine copy_lsn_to_temp() temp_path <- paste0(tempdir(), \"/MiddleFork04.ssn\") mf04p <- ssn_import(temp_path, overwrite = TRUE)  ssn_mod <- ssn_lm(   formula = Summer_mn ~ ELEV_DEM,   ssn.object = mf04p,   tailup_type = \"exponential\",   additive = \"afvArea\" ) vcov(ssn_mod) #>             (Intercept)      ELEV_DEM #> (Intercept) 38.35386871 -1.902743e-02 #> ELEV_DEM    -0.01902743  9.458396e-06"},{"path":"/news/index.html","id":"ssn2-011","dir":"Changelog","previous_headings":"","what":"SSN2 0.1.1","title":"SSN2 0.1.1","text":"CRAN release: 2024-01-15","code":""},{"path":"/news/index.html","id":"minor-updates-0-1-1","dir":"Changelog","previous_headings":"","what":"Minor Updates","title":"SSN2 0.1.1","text":"Changed network geometry name netgeometry netgeom avoid exceeding 10 character limit column/field names writing shapefiles (#2). Added error message family missing ssn_glm() (#8). Added deprecation warning SSN_to_SSN2(). Minor stability updates. Minor error message updates. Minor documentation updates.","code":""},{"path":"/news/index.html","id":"bug-fixes-0-1-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"SSN2 0.1.1","text":"Fixed bug Torgegram() prevented intended computation cutoff specified. Fixed bug plot.Torgegram() occasionally prevented proper spacing legend. Fixed bug prevented proper printing dispersion parameter ssn_glm() model objects (summaries) covariance parameters known. Fixed bug prevented simulation euclid_type \"none\". Fixed bug cause improper prediction behavior taildown_type \"spherical\". Fixed bug printed response residuals instead deviance residuals ssn_glm() objects.","code":""},{"path":"/news/index.html","id":"ssn2-010","dir":"Changelog","previous_headings":"","what":"SSN2 0.1.0","title":"SSN2 0.1.0","text":"CRAN release: 2023-11-08 Initial CRAN submission.","code":""}]
